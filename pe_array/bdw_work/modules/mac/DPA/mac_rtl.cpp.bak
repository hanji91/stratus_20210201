// Generated by stratus_hls 19.10-p100  (91500.011111)
// Wed Jan 27 17:56:26 2021
// from mac.cpp
#include "mac_rtl.h"

struct mac;
mac::mac(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rstn("rstn")
    ,init("init")
    ,clear("clear")
    ,src_vld("src_vld")
    ,src_0("src_0")
    ,src_1("src_1")
    ,acc("acc")
    ,src_1_1d("src_1_1d")
    ,mac_Mul_10Sx8S_18S_0_5_out1("mac_Mul_10Sx8S_18S_0_5_out1")
    ,mac_N_Mux_18_2_2_4_6_out1("mac_N_Mux_18_2_2_4_6_out1")
    ,mac_N_Mux_32_2_4_4_3_out1("mac_N_Mux_32_2_4_4_3_out1")
    ,clear_1d("clear_1d")
    ,mac_N_Mux_32_2_4_4_2_out1("mac_N_Mux_32_2_4_4_2_out1")
    ,src_vld_1d("src_vld_1d")
    ,mac_Add_32Sx18S_32S_1_1_out1("mac_Add_32Sx18S_32S_1_1_out1")
    ,mul("mul")
    ,mac_Muxi0s32u1_4_4_out1("mac_Muxi0s32u1_4_4_out1")
{
  SC_METHOD(drive_acc);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(mac_Add_32Sx18S_32S_1_1);
  sensitive << ( mul );
  sensitive << ( acc );

  SC_METHOD(mac_N_Mux_32_2_4_4_2);
  sensitive << ( src_vld_1d );
  sensitive << ( mac_Add_32Sx18S_32S_1_1_out1 );
  sensitive << ( acc );

  SC_METHOD(mac_N_Mux_32_2_4_4_3);
  sensitive << ( clear_1d );
  sensitive << ( mul );
  sensitive << ( mac_N_Mux_32_2_4_4_2_out1 );

  SC_METHOD(mac_Muxi0s32u1_4_4);
  sensitive << ( init );
  sensitive << ( mac_N_Mux_32_2_4_4_3_out1 );

  SC_METHOD(drive_mul);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(mac_Mul_10Sx8S_18S_0_5);
  sensitive << ( src_1 );
  sensitive << ( src_0 );

  SC_METHOD(mac_N_Mux_18_2_2_4_6);
  sensitive << ( src_vld );
  sensitive << ( mac_Mul_10Sx8S_18S_0_5_out1 );
  sensitive << ( mul );

  SC_METHOD(drive_src_1_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_clear_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_src_vld_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

}
// resource: regr_ac_32
void mac::drive_acc(){
  if ( (rstn.read() == 0ULL) ) {
    acc = 0LL;
  } else {
    acc = (sc_int<32> ) (mac_Muxi0s32u1_4_4_out1.read());
  }
}
// resource: mac_Add_32Sx18S_32S_1  instance: mac_Add_32Sx18S_32S_1_1
void mac::mac_Add_32Sx18S_32S_1_1(){
  mac_Add_32Sx18S_32S_1_1_out1 = (acc.read() + mul.read());
}
// resource: mac_N_Mux_32_2_4_4
void mac::mac_N_Mux_32_2_4_4_2(){
  if ( src_vld_1d.read() ) {
    mac_N_Mux_32_2_4_4_2_out1 = (sc_uint<32> ) (mac_Add_32Sx18S_32S_1_1_out1
                                .read());
  } else {
    mac_N_Mux_32_2_4_4_2_out1 = (sc_uint<32> ) (acc.read());
  }
}
// resource: mac_N_Mux_32_2_4_4
void mac::mac_N_Mux_32_2_4_4_3(){
  if ( clear_1d.read() ) {
    mac_N_Mux_32_2_4_4_3_out1 = (sc_uint<32> )mul.read();
  } else {
    mac_N_Mux_32_2_4_4_3_out1 = mac_N_Mux_32_2_4_4_2_out1.read();
  }
}
// resource: mac_Muxi0s32u1_4
void mac::mac_Muxi0s32u1_4_4(){
  if ( init.read() ) {
    mac_Muxi0s32u1_4_4_out1 = 0ULL;
  } else {
    mac_Muxi0s32u1_4_4_out1 = mac_N_Mux_32_2_4_4_3_out1.read();
  }
}
// resource: regr_ac_18
void mac::drive_mul(){
  if ( (rstn.read() == 0ULL) ) {
    mul = 0LL;
  } else {
    mul = (sc_int<18> ) (mac_N_Mux_18_2_2_4_6_out1.read());
  }
}
// resource: mac_Mul_10Sx8S_18S_0  instance: mac_Mul_10Sx8S_18S_0_5
void mac::mac_Mul_10Sx8S_18S_0_5(){
  mac_Mul_10Sx8S_18S_0_5_out1 = src_0.read() * src_1.read();
}
// resource: mac_N_Mux_18_2_2_4
void mac::mac_N_Mux_18_2_2_4_6(){
  if ( src_vld.read() ) {
    mac_N_Mux_18_2_2_4_6_out1 = (sc_uint<18> ) (mac_Mul_10Sx8S_18S_0_5_out1
                                .read());
  } else {
    mac_N_Mux_18_2_2_4_6_out1 = (sc_uint<18> ) (mul.read());
  }
}
// resource: regr_ac_8
void mac::drive_src_1_1d(){
  if ( (rstn.read() == 0ULL) ) {
    src_1_1d = 0LL;
  } else {
    src_1_1d = src_1.read();
  }
}
// resource: regr_ac_1
void mac::drive_clear_1d(){
  if ( (rstn.read() == 0ULL) ) {
    clear_1d = 0ULL;
  } else {
    clear_1d = clear.read();
  }
}
// resource: regr_ac_1
void mac::drive_src_vld_1d(){
  if ( (rstn.read() == 0ULL) ) {
    src_vld_1d = 0ULL;
  } else {
    src_vld_1d = src_vld.read();
  }
}
