// Generated by stratus_hls 19.10-p100  (91500.011111)
// Wed Jan 27 17:56:54 2021
// from pe_array.cpp

`timescale 1ps / 1ps

      
module pe_array(clk, rstn, enable, src_vld, clear, init, systolic_en, systolic_depth, mac_shift_len, src_0_s0_0, src_0_s0_1, src_0_s0_2, src_0_s0_3, src_0_s0_4, src_0_s0_5, src_0_s0_6, src_0_s0_7, src_0_s0_8, src_0_s0_9, src_0_s0_10, src_0_s0_11, src_0_s0_12, src_0_s0_13, src_0_s0_14, src_0_s0_15, src_0_s0_16, src_0_s0_17, src_0_s0_18, src_0_s0_19, src_0_s0_20, src_0_s0_21, src_0_s0_22, src_0_s0_23, src_0_s0_24, src_0_s0_25, src_0_s0_26, src_0_s0_27, src_0_s0_28, src_0_s0_29, src_0_s0_30
          , src_0_s0_31, src_0_s1_0, src_0_s1_1, src_0_s1_2, src_0_s1_3, src_0_s1_4, src_0_s1_5, src_0_s1_6, src_0_s1_7, src_0_s1_8, src_0_s1_9, src_0_s1_10, src_0_s1_11, src_0_s1_12, src_0_s1_13, src_0_s1_14, src_0_s1_15, src_0_s1_16, src_0_s1_17, src_0_s1_18, src_0_s1_19, src_0_s1_20, src_0_s1_21, src_0_s1_22, src_0_s1_23, src_0_s1_24, src_0_s1_25, src_0_s1_26, src_0_s1_27, src_0_s1_28, src_0_s1_29, src_0_s1_30, src_0_s1_31, src_0_s2_0, src_0_s2_1, src_0_s2_2, src_0_s2_3, src_0_s2_4
          , src_0_s2_5, src_0_s2_6, src_0_s2_7, src_0_s2_8, src_0_s2_9, src_0_s2_10, src_0_s2_11, src_0_s2_12, src_0_s2_13, src_0_s2_14, src_0_s2_15, src_0_s2_16, src_0_s2_17, src_0_s2_18, src_0_s2_19, src_0_s2_20, src_0_s2_21, src_0_s2_22, src_0_s2_23, src_0_s2_24, src_0_s2_25, src_0_s2_26, src_0_s2_27, src_0_s2_28, src_0_s2_29, src_0_s2_30, src_0_s2_31, src_0_s3_0, src_0_s3_1, src_0_s3_2, src_0_s3_3, src_0_s3_4, src_0_s3_5, src_0_s3_6, src_0_s3_7, src_0_s3_8, src_0_s3_9, src_0_s3_10
          , src_0_s3_11, src_0_s3_12, src_0_s3_13, src_0_s3_14, src_0_s3_15, src_0_s3_16, src_0_s3_17, src_0_s3_18, src_0_s3_19, src_0_s3_20, src_0_s3_21, src_0_s3_22, src_0_s3_23, src_0_s3_24, src_0_s3_25, src_0_s3_26, src_0_s3_27, src_0_s3_28, src_0_s3_29, src_0_s3_30, src_0_s3_31, src_0_s4_0, src_0_s4_1, src_0_s4_2, src_0_s4_3, src_0_s4_4, src_0_s4_5, src_0_s4_6, src_0_s4_7, src_0_s4_8, src_0_s4_9, src_0_s4_10, src_0_s4_11, src_0_s4_12, src_0_s4_13, src_0_s4_14, src_0_s4_15, src_0_s4_16
          , src_0_s4_17, src_0_s4_18, src_0_s4_19, src_0_s4_20, src_0_s4_21, src_0_s4_22, src_0_s4_23, src_0_s4_24, src_0_s4_25, src_0_s4_26, src_0_s4_27, src_0_s4_28, src_0_s4_29, src_0_s4_30, src_0_s4_31, src_0_s5_0, src_0_s5_1, src_0_s5_2, src_0_s5_3, src_0_s5_4, src_0_s5_5, src_0_s5_6, src_0_s5_7, src_0_s5_8, src_0_s5_9, src_0_s5_10, src_0_s5_11, src_0_s5_12, src_0_s5_13, src_0_s5_14, src_0_s5_15, src_0_s5_16, src_0_s5_17, src_0_s5_18, src_0_s5_19, src_0_s5_20, src_0_s5_21, src_0_s5_22
          , src_0_s5_23, src_0_s5_24, src_0_s5_25, src_0_s5_26, src_0_s5_27, src_0_s5_28, src_0_s5_29, src_0_s5_30, src_0_s5_31, src_0_s6_0, src_0_s6_1, src_0_s6_2, src_0_s6_3, src_0_s6_4, src_0_s6_5, src_0_s6_6, src_0_s6_7, src_0_s6_8, src_0_s6_9, src_0_s6_10, src_0_s6_11, src_0_s6_12, src_0_s6_13, src_0_s6_14, src_0_s6_15, src_0_s6_16, src_0_s6_17, src_0_s6_18, src_0_s6_19, src_0_s6_20, src_0_s6_21, src_0_s6_22, src_0_s6_23, src_0_s6_24, src_0_s6_25, src_0_s6_26, src_0_s6_27, src_0_s6_28
          , src_0_s6_29, src_0_s6_30, src_0_s6_31, src_1_0, src_1_1, src_1_2, src_1_3, src_1_4, src_1_5, src_1_6, src_1_7, src_1_8, src_1_9, src_1_10, src_1_11, src_1_12, src_1_13, src_1_14, src_1_15, src_1_16, src_1_17, src_1_18, src_1_19, src_1_20, src_1_21, src_1_22, src_1_23, src_1_24, src_1_25, src_1_26, src_1_27, src_1_28, src_1_29, src_1_30, src_1_31, pe_data_0, pe_data_1, pe_data_2, pe_data_3, pe_data_4, pe_data_5, pe_data_6, pe_data_7, pe_data_8, pe_data_9, pe_data_10, pe_data_11
          , pe_data_12, pe_data_13, pe_data_14, pe_data_15, pe_data_16, pe_data_17, pe_data_18, pe_data_19, pe_data_20, pe_data_21, pe_data_22, pe_data_23, pe_data_24, pe_data_25, pe_data_26, pe_data_27, pe_data_28, pe_data_29, pe_data_30, pe_data_31, pe_data_valid);

      input clk;
      input rstn;
      input enable;
      input src_vld;
      input clear;
      input init;
      input [7:0] systolic_en;
      input [7:0] systolic_depth;
      input [7:0] mac_shift_len;
      input [9:0] src_0_s0_0;
      input [9:0] src_0_s0_1;
      input [9:0] src_0_s0_2;
      input [9:0] src_0_s0_3;
      input [9:0] src_0_s0_4;
      input [9:0] src_0_s0_5;
      input [9:0] src_0_s0_6;
      input [9:0] src_0_s0_7;
      input [9:0] src_0_s0_8;
      input [9:0] src_0_s0_9;
      input [9:0] src_0_s0_10;
      input [9:0] src_0_s0_11;
      input [9:0] src_0_s0_12;
      input [9:0] src_0_s0_13;
      input [9:0] src_0_s0_14;
      input [9:0] src_0_s0_15;
      input [9:0] src_0_s0_16;
      input [9:0] src_0_s0_17;
      input [9:0] src_0_s0_18;
      input [9:0] src_0_s0_19;
      input [9:0] src_0_s0_20;
      input [9:0] src_0_s0_21;
      input [9:0] src_0_s0_22;
      input [9:0] src_0_s0_23;
      input [9:0] src_0_s0_24;
      input [9:0] src_0_s0_25;
      input [9:0] src_0_s0_26;
      input [9:0] src_0_s0_27;
      input [9:0] src_0_s0_28;
      input [9:0] src_0_s0_29;
      input [9:0] src_0_s0_30;
      input [9:0] src_0_s0_31;
      input [9:0] src_0_s1_0;
      input [9:0] src_0_s1_1;
      input [9:0] src_0_s1_2;
      input [9:0] src_0_s1_3;
      input [9:0] src_0_s1_4;
      input [9:0] src_0_s1_5;
      input [9:0] src_0_s1_6;
      input [9:0] src_0_s1_7;
      input [9:0] src_0_s1_8;
      input [9:0] src_0_s1_9;
      input [9:0] src_0_s1_10;
      input [9:0] src_0_s1_11;
      input [9:0] src_0_s1_12;
      input [9:0] src_0_s1_13;
      input [9:0] src_0_s1_14;
      input [9:0] src_0_s1_15;
      input [9:0] src_0_s1_16;
      input [9:0] src_0_s1_17;
      input [9:0] src_0_s1_18;
      input [9:0] src_0_s1_19;
      input [9:0] src_0_s1_20;
      input [9:0] src_0_s1_21;
      input [9:0] src_0_s1_22;
      input [9:0] src_0_s1_23;
      input [9:0] src_0_s1_24;
      input [9:0] src_0_s1_25;
      input [9:0] src_0_s1_26;
      input [9:0] src_0_s1_27;
      input [9:0] src_0_s1_28;
      input [9:0] src_0_s1_29;
      input [9:0] src_0_s1_30;
      input [9:0] src_0_s1_31;
      input [9:0] src_0_s2_0;
      input [9:0] src_0_s2_1;
      input [9:0] src_0_s2_2;
      input [9:0] src_0_s2_3;
      input [9:0] src_0_s2_4;
      input [9:0] src_0_s2_5;
      input [9:0] src_0_s2_6;
      input [9:0] src_0_s2_7;
      input [9:0] src_0_s2_8;
      input [9:0] src_0_s2_9;
      input [9:0] src_0_s2_10;
      input [9:0] src_0_s2_11;
      input [9:0] src_0_s2_12;
      input [9:0] src_0_s2_13;
      input [9:0] src_0_s2_14;
      input [9:0] src_0_s2_15;
      input [9:0] src_0_s2_16;
      input [9:0] src_0_s2_17;
      input [9:0] src_0_s2_18;
      input [9:0] src_0_s2_19;
      input [9:0] src_0_s2_20;
      input [9:0] src_0_s2_21;
      input [9:0] src_0_s2_22;
      input [9:0] src_0_s2_23;
      input [9:0] src_0_s2_24;
      input [9:0] src_0_s2_25;
      input [9:0] src_0_s2_26;
      input [9:0] src_0_s2_27;
      input [9:0] src_0_s2_28;
      input [9:0] src_0_s2_29;
      input [9:0] src_0_s2_30;
      input [9:0] src_0_s2_31;
      input [9:0] src_0_s3_0;
      input [9:0] src_0_s3_1;
      input [9:0] src_0_s3_2;
      input [9:0] src_0_s3_3;
      input [9:0] src_0_s3_4;
      input [9:0] src_0_s3_5;
      input [9:0] src_0_s3_6;
      input [9:0] src_0_s3_7;
      input [9:0] src_0_s3_8;
      input [9:0] src_0_s3_9;
      input [9:0] src_0_s3_10;
      input [9:0] src_0_s3_11;
      input [9:0] src_0_s3_12;
      input [9:0] src_0_s3_13;
      input [9:0] src_0_s3_14;
      input [9:0] src_0_s3_15;
      input [9:0] src_0_s3_16;
      input [9:0] src_0_s3_17;
      input [9:0] src_0_s3_18;
      input [9:0] src_0_s3_19;
      input [9:0] src_0_s3_20;
      input [9:0] src_0_s3_21;
      input [9:0] src_0_s3_22;
      input [9:0] src_0_s3_23;
      input [9:0] src_0_s3_24;
      input [9:0] src_0_s3_25;
      input [9:0] src_0_s3_26;
      input [9:0] src_0_s3_27;
      input [9:0] src_0_s3_28;
      input [9:0] src_0_s3_29;
      input [9:0] src_0_s3_30;
      input [9:0] src_0_s3_31;
      input [9:0] src_0_s4_0;
      input [9:0] src_0_s4_1;
      input [9:0] src_0_s4_2;
      input [9:0] src_0_s4_3;
      input [9:0] src_0_s4_4;
      input [9:0] src_0_s4_5;
      input [9:0] src_0_s4_6;
      input [9:0] src_0_s4_7;
      input [9:0] src_0_s4_8;
      input [9:0] src_0_s4_9;
      input [9:0] src_0_s4_10;
      input [9:0] src_0_s4_11;
      input [9:0] src_0_s4_12;
      input [9:0] src_0_s4_13;
      input [9:0] src_0_s4_14;
      input [9:0] src_0_s4_15;
      input [9:0] src_0_s4_16;
      input [9:0] src_0_s4_17;
      input [9:0] src_0_s4_18;
      input [9:0] src_0_s4_19;
      input [9:0] src_0_s4_20;
      input [9:0] src_0_s4_21;
      input [9:0] src_0_s4_22;
      input [9:0] src_0_s4_23;
      input [9:0] src_0_s4_24;
      input [9:0] src_0_s4_25;
      input [9:0] src_0_s4_26;
      input [9:0] src_0_s4_27;
      input [9:0] src_0_s4_28;
      input [9:0] src_0_s4_29;
      input [9:0] src_0_s4_30;
      input [9:0] src_0_s4_31;
      input [9:0] src_0_s5_0;
      input [9:0] src_0_s5_1;
      input [9:0] src_0_s5_2;
      input [9:0] src_0_s5_3;
      input [9:0] src_0_s5_4;
      input [9:0] src_0_s5_5;
      input [9:0] src_0_s5_6;
      input [9:0] src_0_s5_7;
      input [9:0] src_0_s5_8;
      input [9:0] src_0_s5_9;
      input [9:0] src_0_s5_10;
      input [9:0] src_0_s5_11;
      input [9:0] src_0_s5_12;
      input [9:0] src_0_s5_13;
      input [9:0] src_0_s5_14;
      input [9:0] src_0_s5_15;
      input [9:0] src_0_s5_16;
      input [9:0] src_0_s5_17;
      input [9:0] src_0_s5_18;
      input [9:0] src_0_s5_19;
      input [9:0] src_0_s5_20;
      input [9:0] src_0_s5_21;
      input [9:0] src_0_s5_22;
      input [9:0] src_0_s5_23;
      input [9:0] src_0_s5_24;
      input [9:0] src_0_s5_25;
      input [9:0] src_0_s5_26;
      input [9:0] src_0_s5_27;
      input [9:0] src_0_s5_28;
      input [9:0] src_0_s5_29;
      input [9:0] src_0_s5_30;
      input [9:0] src_0_s5_31;
      input [9:0] src_0_s6_0;
      input [9:0] src_0_s6_1;
      input [9:0] src_0_s6_2;
      input [9:0] src_0_s6_3;
      input [9:0] src_0_s6_4;
      input [9:0] src_0_s6_5;
      input [9:0] src_0_s6_6;
      input [9:0] src_0_s6_7;
      input [9:0] src_0_s6_8;
      input [9:0] src_0_s6_9;
      input [9:0] src_0_s6_10;
      input [9:0] src_0_s6_11;
      input [9:0] src_0_s6_12;
      input [9:0] src_0_s6_13;
      input [9:0] src_0_s6_14;
      input [9:0] src_0_s6_15;
      input [9:0] src_0_s6_16;
      input [9:0] src_0_s6_17;
      input [9:0] src_0_s6_18;
      input [9:0] src_0_s6_19;
      input [9:0] src_0_s6_20;
      input [9:0] src_0_s6_21;
      input [9:0] src_0_s6_22;
      input [9:0] src_0_s6_23;
      input [9:0] src_0_s6_24;
      input [9:0] src_0_s6_25;
      input [9:0] src_0_s6_26;
      input [9:0] src_0_s6_27;
      input [9:0] src_0_s6_28;
      input [9:0] src_0_s6_29;
      input [9:0] src_0_s6_30;
      input [9:0] src_0_s6_31;
      input [7:0] src_1_0;
      input [7:0] src_1_1;
      input [7:0] src_1_2;
      input [7:0] src_1_3;
      input [7:0] src_1_4;
      input [7:0] src_1_5;
      input [7:0] src_1_6;
      input [7:0] src_1_7;
      input [7:0] src_1_8;
      input [7:0] src_1_9;
      input [7:0] src_1_10;
      input [7:0] src_1_11;
      input [7:0] src_1_12;
      input [7:0] src_1_13;
      input [7:0] src_1_14;
      input [7:0] src_1_15;
      input [7:0] src_1_16;
      input [7:0] src_1_17;
      input [7:0] src_1_18;
      input [7:0] src_1_19;
      input [7:0] src_1_20;
      input [7:0] src_1_21;
      input [7:0] src_1_22;
      input [7:0] src_1_23;
      input [7:0] src_1_24;
      input [7:0] src_1_25;
      input [7:0] src_1_26;
      input [7:0] src_1_27;
      input [7:0] src_1_28;
      input [7:0] src_1_29;
      input [7:0] src_1_30;
      input [7:0] src_1_31;
      output [31:0] pe_data_0;
      reg [31:0] pe_data_0;
      output [31:0] pe_data_1;
      reg [31:0] pe_data_1;
      output [31:0] pe_data_2;
      reg [31:0] pe_data_2;
      output [31:0] pe_data_3;
      reg [31:0] pe_data_3;
      output [31:0] pe_data_4;
      reg [31:0] pe_data_4;
      output [31:0] pe_data_5;
      reg [31:0] pe_data_5;
      output [31:0] pe_data_6;
      reg [31:0] pe_data_6;
      output [31:0] pe_data_7;
      reg [31:0] pe_data_7;
      output [31:0] pe_data_8;
      reg [31:0] pe_data_8;
      output [31:0] pe_data_9;
      reg [31:0] pe_data_9;
      output [31:0] pe_data_10;
      reg [31:0] pe_data_10;
      output [31:0] pe_data_11;
      reg [31:0] pe_data_11;
      output [31:0] pe_data_12;
      reg [31:0] pe_data_12;
      output [31:0] pe_data_13;
      reg [31:0] pe_data_13;
      output [31:0] pe_data_14;
      reg [31:0] pe_data_14;
      output [31:0] pe_data_15;
      reg [31:0] pe_data_15;
      output [31:0] pe_data_16;
      reg [31:0] pe_data_16;
      output [31:0] pe_data_17;
      reg [31:0] pe_data_17;
      output [31:0] pe_data_18;
      reg [31:0] pe_data_18;
      output [31:0] pe_data_19;
      reg [31:0] pe_data_19;
      output [31:0] pe_data_20;
      reg [31:0] pe_data_20;
      output [31:0] pe_data_21;
      reg [31:0] pe_data_21;
      output [31:0] pe_data_22;
      reg [31:0] pe_data_22;
      output [31:0] pe_data_23;
      reg [31:0] pe_data_23;
      output [31:0] pe_data_24;
      reg [31:0] pe_data_24;
      output [31:0] pe_data_25;
      reg [31:0] pe_data_25;
      output [31:0] pe_data_26;
      reg [31:0] pe_data_26;
      output [31:0] pe_data_27;
      reg [31:0] pe_data_27;
      output [31:0] pe_data_28;
      reg [31:0] pe_data_28;
      output [31:0] pe_data_29;
      reg [31:0] pe_data_29;
      output [31:0] pe_data_30;
      reg [31:0] pe_data_30;
      output [31:0] pe_data_31;
      reg [31:0] pe_data_31;
      output pe_data_valid;
      reg pe_data_valid;
      reg pe_array_N_Muxb_1_2_2_4_548_out1;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_482_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_480_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_478_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_476_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_474_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_472_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_470_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_424_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_432_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_440_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_448_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_466_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_462_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_458_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_454_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_452_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_456_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_460_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_464_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_468_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_444_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_436_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_428_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_450_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_446_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_442_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_438_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_434_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_430_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_426_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_422_in2;
      /*signed*/reg[31:0] pe_array_RightShift_32Sx6U_32S_4_420_in2;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_35_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_418_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_515_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_352_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_547_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_482_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_34_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_416_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_514_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_348_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_546_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_480_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_33_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_414_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_513_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_344_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_545_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_478_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_32_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_412_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_512_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_340_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_544_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_476_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_31_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_410_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_511_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_336_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_543_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_474_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_30_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_408_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_510_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_332_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_542_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_472_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_29_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_406_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_509_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_328_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_541_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_470_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_28_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_386_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_486_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_288_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_518_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_424_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_27_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_382_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_490_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_280_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_522_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_432_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_26_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_378_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_494_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_272_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_526_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_440_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_25_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_374_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_498_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_264_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_530_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_448_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_24_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_370_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_507_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_256_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_539_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_466_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_23_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_366_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_505_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_248_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_537_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_462_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_22_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_362_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_503_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_240_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_535_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_458_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_21_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_358_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_501_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_232_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_533_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_454_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_20_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_356_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_500_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_228_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_532_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_452_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_19_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_360_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_502_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_236_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_534_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_456_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_18_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_364_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_504_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_244_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_536_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_460_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_17_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_368_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_506_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_252_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_538_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_464_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_16_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_372_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_508_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_260_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_540_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_468_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_15_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_376_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_496_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_268_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_528_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_444_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_14_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_380_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_492_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_276_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_524_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_436_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_13_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_384_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_488_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_284_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_520_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_428_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_12_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_404_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_499_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_324_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_531_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_450_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_11_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_402_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_497_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_320_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_529_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_446_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_10_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_400_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_495_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_316_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_527_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_442_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_9_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_398_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_493_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_312_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_525_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_438_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_8_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_396_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_491_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_308_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_523_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_434_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_7_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_394_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_489_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_304_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_521_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_430_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_6_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_392_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_487_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_300_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_519_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_426_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_5_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_390_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_485_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_296_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_517_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_422_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_4_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_388_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_484_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_292_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_516_out1;
      /*signed*/wire[31:0] pe_array_RightShift_32Sx6U_32S_4_420_out1;
      wire pe_array_OrReduction_7U_1U_4_2_out1;
      reg clear_7d;
      wire[6:0] pe_array_OrReduction_7U_1U_4_2_in1;
      wire pe_array_OrReduction_8U_1U_4_1_out1;
      reg pe_array_N_Muxb_1_2_2_4_3_out1;
      /*signed*/reg[31:0] mac_shifted_data_31;
      /*signed*/reg[31:0] mac_shifted_data_30;
      /*signed*/reg[31:0] mac_shifted_data_29;
      /*signed*/reg[31:0] mac_shifted_data_28;
      /*signed*/reg[31:0] mac_shifted_data_27;
      /*signed*/reg[31:0] mac_shifted_data_26;
      /*signed*/reg[31:0] mac_shifted_data_25;
      /*signed*/reg[31:0] mac_shifted_data_24;
      /*signed*/reg[31:0] mac_shifted_data_23;
      /*signed*/reg[31:0] mac_shifted_data_22;
      /*signed*/reg[31:0] mac_shifted_data_21;
      /*signed*/reg[31:0] mac_shifted_data_20;
      /*signed*/reg[31:0] mac_shifted_data_19;
      /*signed*/reg[31:0] mac_shifted_data_18;
      /*signed*/reg[31:0] mac_shifted_data_17;
      /*signed*/reg[31:0] mac_shifted_data_16;
      /*signed*/reg[31:0] mac_shifted_data_15;
      /*signed*/reg[31:0] mac_shifted_data_14;
      /*signed*/reg[31:0] mac_shifted_data_13;
      /*signed*/reg[31:0] mac_shifted_data_12;
      /*signed*/reg[31:0] mac_shifted_data_11;
      /*signed*/reg[31:0] mac_shifted_data_10;
      /*signed*/reg[31:0] mac_shifted_data_9;
      /*signed*/reg[31:0] mac_shifted_data_8;
      /*signed*/reg[31:0] mac_shifted_data_7;
      /*signed*/reg[31:0] mac_shifted_data_6;
      /*signed*/reg[31:0] mac_shifted_data_5;
      /*signed*/reg[31:0] mac_shifted_data_4;
      /*signed*/reg[31:0] mac_shifted_data_3;
      /*signed*/reg[31:0] mac_shifted_data_2;
      /*signed*/reg[31:0] mac_shifted_data_1;
      /*signed*/reg[31:0] mac_shifted_data_0;
      reg check_overflow_en;
      /*signed*/wire[31:0] mac_acc_0_0;
      /*signed*/wire[31:0] mac_acc_0_1;
      /*signed*/wire[31:0] mac_acc_0_2;
      /*signed*/wire[31:0] mac_acc_0_3;
      /*signed*/wire[31:0] mac_acc_0_4;
      /*signed*/wire[31:0] mac_acc_0_5;
      /*signed*/wire[31:0] mac_acc_0_6;
      /*signed*/wire[31:0] mac_acc_0_7;
      /*signed*/wire[31:0] mac_acc_0_8;
      /*signed*/wire[31:0] mac_acc_0_9;
      /*signed*/wire[31:0] mac_acc_0_10;
      /*signed*/wire[31:0] mac_acc_0_11;
      /*signed*/wire[31:0] mac_acc_0_12;
      /*signed*/wire[31:0] mac_acc_0_13;
      /*signed*/wire[31:0] mac_acc_0_14;
      /*signed*/wire[31:0] mac_acc_0_15;
      /*signed*/wire[31:0] mac_acc_0_16;
      /*signed*/wire[31:0] mac_acc_0_17;
      /*signed*/wire[31:0] mac_acc_0_18;
      /*signed*/wire[31:0] mac_acc_0_19;
      /*signed*/wire[31:0] mac_acc_0_20;
      /*signed*/wire[31:0] mac_acc_0_21;
      /*signed*/wire[31:0] mac_acc_0_22;
      /*signed*/wire[31:0] mac_acc_0_23;
      /*signed*/wire[31:0] mac_acc_0_24;
      /*signed*/wire[31:0] mac_acc_0_25;
      /*signed*/wire[31:0] mac_acc_0_26;
      /*signed*/wire[31:0] mac_acc_0_27;
      /*signed*/wire[31:0] mac_acc_0_28;
      /*signed*/wire[31:0] mac_acc_0_29;
      /*signed*/wire[31:0] mac_acc_0_30;
      /*signed*/wire[31:0] mac_acc_0_31;
      /*signed*/wire[7:0] src_1_1d_0;
      /*signed*/wire[31:0] mac_acc_1_0;
      /*signed*/wire[7:0] src_1_1d_1;
      /*signed*/wire[31:0] mac_acc_1_1;
      /*signed*/wire[7:0] src_1_1d_2;
      /*signed*/wire[31:0] mac_acc_1_2;
      /*signed*/wire[7:0] src_1_1d_3;
      /*signed*/wire[31:0] mac_acc_1_3;
      /*signed*/wire[7:0] src_1_1d_4;
      /*signed*/wire[31:0] mac_acc_1_4;
      /*signed*/wire[7:0] src_1_1d_5;
      /*signed*/wire[31:0] mac_acc_1_5;
      /*signed*/wire[7:0] src_1_1d_6;
      /*signed*/wire[31:0] mac_acc_1_6;
      /*signed*/wire[7:0] src_1_1d_7;
      /*signed*/wire[31:0] mac_acc_1_7;
      /*signed*/wire[7:0] src_1_1d_8;
      /*signed*/wire[31:0] mac_acc_1_8;
      /*signed*/wire[7:0] src_1_1d_9;
      /*signed*/wire[31:0] mac_acc_1_9;
      /*signed*/wire[7:0] src_1_1d_10;
      /*signed*/wire[31:0] mac_acc_1_10;
      /*signed*/wire[7:0] src_1_1d_11;
      /*signed*/wire[31:0] mac_acc_1_11;
      /*signed*/wire[7:0] src_1_1d_12;
      /*signed*/wire[31:0] mac_acc_1_12;
      /*signed*/wire[7:0] src_1_1d_13;
      /*signed*/wire[31:0] mac_acc_1_13;
      /*signed*/wire[7:0] src_1_1d_14;
      /*signed*/wire[31:0] mac_acc_1_14;
      /*signed*/wire[7:0] src_1_1d_15;
      /*signed*/wire[31:0] mac_acc_1_15;
      /*signed*/wire[7:0] src_1_1d_16;
      /*signed*/wire[31:0] mac_acc_1_16;
      /*signed*/wire[7:0] src_1_1d_17;
      /*signed*/wire[31:0] mac_acc_1_17;
      /*signed*/wire[7:0] src_1_1d_18;
      /*signed*/wire[31:0] mac_acc_1_18;
      /*signed*/wire[7:0] src_1_1d_19;
      /*signed*/wire[31:0] mac_acc_1_19;
      /*signed*/wire[7:0] src_1_1d_20;
      /*signed*/wire[31:0] mac_acc_1_20;
      /*signed*/wire[7:0] src_1_1d_21;
      /*signed*/wire[31:0] mac_acc_1_21;
      /*signed*/wire[7:0] src_1_1d_22;
      /*signed*/wire[31:0] mac_acc_1_22;
      /*signed*/wire[7:0] src_1_1d_23;
      /*signed*/wire[31:0] mac_acc_1_23;
      /*signed*/wire[7:0] src_1_1d_24;
      /*signed*/wire[31:0] mac_acc_1_24;
      /*signed*/wire[7:0] src_1_1d_25;
      /*signed*/wire[31:0] mac_acc_1_25;
      /*signed*/wire[7:0] src_1_1d_26;
      /*signed*/wire[31:0] mac_acc_1_26;
      /*signed*/wire[7:0] src_1_1d_27;
      /*signed*/wire[31:0] mac_acc_1_27;
      /*signed*/wire[7:0] src_1_1d_28;
      /*signed*/wire[31:0] mac_acc_1_28;
      /*signed*/wire[7:0] src_1_1d_29;
      /*signed*/wire[31:0] mac_acc_1_29;
      /*signed*/wire[7:0] src_1_1d_30;
      /*signed*/wire[31:0] mac_acc_1_30;
      reg clear_1d;
      reg src_vld_1d;
      /*signed*/wire[7:0] src_1_1d_31;
      /*signed*/wire[31:0] mac_acc_1_31;
      /*signed*/wire[7:0] src_1_2d_0;
      /*signed*/wire[31:0] mac_acc_2_0;
      /*signed*/wire[7:0] src_1_2d_1;
      /*signed*/wire[31:0] mac_acc_2_1;
      /*signed*/wire[7:0] src_1_2d_2;
      /*signed*/wire[31:0] mac_acc_2_2;
      /*signed*/wire[7:0] src_1_2d_3;
      /*signed*/wire[31:0] mac_acc_2_3;
      /*signed*/wire[7:0] src_1_2d_4;
      /*signed*/wire[31:0] mac_acc_2_4;
      /*signed*/wire[7:0] src_1_2d_5;
      /*signed*/wire[31:0] mac_acc_2_5;
      /*signed*/wire[7:0] src_1_2d_6;
      /*signed*/wire[31:0] mac_acc_2_6;
      /*signed*/wire[7:0] src_1_2d_7;
      /*signed*/wire[31:0] mac_acc_2_7;
      /*signed*/wire[7:0] src_1_2d_8;
      /*signed*/wire[31:0] mac_acc_2_8;
      /*signed*/wire[7:0] src_1_2d_9;
      /*signed*/wire[31:0] mac_acc_2_9;
      /*signed*/wire[7:0] src_1_2d_10;
      /*signed*/wire[31:0] mac_acc_2_10;
      /*signed*/wire[7:0] src_1_2d_11;
      /*signed*/wire[31:0] mac_acc_2_11;
      /*signed*/wire[7:0] src_1_2d_12;
      /*signed*/wire[31:0] mac_acc_2_12;
      /*signed*/wire[7:0] src_1_2d_13;
      /*signed*/wire[31:0] mac_acc_2_13;
      /*signed*/wire[7:0] src_1_2d_14;
      /*signed*/wire[31:0] mac_acc_2_14;
      /*signed*/wire[7:0] src_1_2d_15;
      /*signed*/wire[31:0] mac_acc_2_15;
      /*signed*/wire[7:0] src_1_2d_16;
      /*signed*/wire[31:0] mac_acc_2_16;
      /*signed*/wire[7:0] src_1_2d_17;
      /*signed*/wire[31:0] mac_acc_2_17;
      /*signed*/wire[7:0] src_1_2d_18;
      /*signed*/wire[31:0] mac_acc_2_18;
      /*signed*/wire[7:0] src_1_2d_19;
      /*signed*/wire[31:0] mac_acc_2_19;
      /*signed*/wire[7:0] src_1_2d_20;
      /*signed*/wire[31:0] mac_acc_2_20;
      /*signed*/wire[7:0] src_1_2d_21;
      /*signed*/wire[31:0] mac_acc_2_21;
      /*signed*/wire[7:0] src_1_2d_22;
      /*signed*/wire[31:0] mac_acc_2_22;
      /*signed*/wire[7:0] src_1_2d_23;
      /*signed*/wire[31:0] mac_acc_2_23;
      /*signed*/wire[7:0] src_1_2d_24;
      /*signed*/wire[31:0] mac_acc_2_24;
      /*signed*/wire[7:0] src_1_2d_25;
      /*signed*/wire[31:0] mac_acc_2_25;
      /*signed*/wire[7:0] src_1_2d_26;
      /*signed*/wire[31:0] mac_acc_2_26;
      /*signed*/wire[7:0] src_1_2d_27;
      /*signed*/wire[31:0] mac_acc_2_27;
      /*signed*/wire[7:0] src_1_2d_28;
      /*signed*/wire[31:0] mac_acc_2_28;
      /*signed*/wire[7:0] src_1_2d_29;
      /*signed*/wire[31:0] mac_acc_2_29;
      /*signed*/wire[7:0] src_1_2d_30;
      /*signed*/wire[31:0] mac_acc_2_30;
      reg clear_2d;
      reg src_vld_2d;
      /*signed*/wire[7:0] src_1_2d_31;
      /*signed*/wire[31:0] mac_acc_2_31;
      /*signed*/wire[7:0] src_1_3d_0;
      /*signed*/wire[31:0] mac_acc_3_0;
      /*signed*/wire[7:0] src_1_3d_1;
      /*signed*/wire[31:0] mac_acc_3_1;
      /*signed*/wire[7:0] src_1_3d_2;
      /*signed*/wire[31:0] mac_acc_3_2;
      /*signed*/wire[7:0] src_1_3d_3;
      /*signed*/wire[31:0] mac_acc_3_3;
      /*signed*/wire[7:0] src_1_3d_4;
      /*signed*/wire[31:0] mac_acc_3_4;
      /*signed*/wire[7:0] src_1_3d_5;
      /*signed*/wire[31:0] mac_acc_3_5;
      /*signed*/wire[7:0] src_1_3d_6;
      /*signed*/wire[31:0] mac_acc_3_6;
      /*signed*/wire[7:0] src_1_3d_7;
      /*signed*/wire[31:0] mac_acc_3_7;
      /*signed*/wire[7:0] src_1_3d_8;
      /*signed*/wire[31:0] mac_acc_3_8;
      /*signed*/wire[7:0] src_1_3d_9;
      /*signed*/wire[31:0] mac_acc_3_9;
      /*signed*/wire[7:0] src_1_3d_10;
      /*signed*/wire[31:0] mac_acc_3_10;
      /*signed*/wire[7:0] src_1_3d_11;
      /*signed*/wire[31:0] mac_acc_3_11;
      /*signed*/wire[7:0] src_1_3d_12;
      /*signed*/wire[31:0] mac_acc_3_12;
      /*signed*/wire[7:0] src_1_3d_13;
      /*signed*/wire[31:0] mac_acc_3_13;
      /*signed*/wire[7:0] src_1_3d_14;
      /*signed*/wire[31:0] mac_acc_3_14;
      /*signed*/wire[7:0] src_1_3d_15;
      /*signed*/wire[31:0] mac_acc_3_15;
      /*signed*/wire[7:0] src_1_3d_16;
      /*signed*/wire[31:0] mac_acc_3_16;
      /*signed*/wire[7:0] src_1_3d_17;
      /*signed*/wire[31:0] mac_acc_3_17;
      /*signed*/wire[7:0] src_1_3d_18;
      /*signed*/wire[31:0] mac_acc_3_18;
      /*signed*/wire[7:0] src_1_3d_19;
      /*signed*/wire[31:0] mac_acc_3_19;
      /*signed*/wire[7:0] src_1_3d_20;
      /*signed*/wire[31:0] mac_acc_3_20;
      /*signed*/wire[7:0] src_1_3d_21;
      /*signed*/wire[31:0] mac_acc_3_21;
      /*signed*/wire[7:0] src_1_3d_22;
      /*signed*/wire[31:0] mac_acc_3_22;
      /*signed*/wire[7:0] src_1_3d_23;
      /*signed*/wire[31:0] mac_acc_3_23;
      /*signed*/wire[7:0] src_1_3d_24;
      /*signed*/wire[31:0] mac_acc_3_24;
      /*signed*/wire[7:0] src_1_3d_25;
      /*signed*/wire[31:0] mac_acc_3_25;
      /*signed*/wire[7:0] src_1_3d_26;
      /*signed*/wire[31:0] mac_acc_3_26;
      /*signed*/wire[7:0] src_1_3d_27;
      /*signed*/wire[31:0] mac_acc_3_27;
      /*signed*/wire[7:0] src_1_3d_28;
      /*signed*/wire[31:0] mac_acc_3_28;
      /*signed*/wire[7:0] src_1_3d_29;
      /*signed*/wire[31:0] mac_acc_3_29;
      /*signed*/wire[7:0] src_1_3d_30;
      /*signed*/wire[31:0] mac_acc_3_30;
      reg clear_3d;
      reg src_vld_3d;
      /*signed*/wire[7:0] src_1_3d_31;
      /*signed*/wire[31:0] mac_acc_3_31;
      /*signed*/wire[7:0] src_1_4d_0;
      /*signed*/wire[31:0] mac_acc_4_0;
      /*signed*/wire[7:0] src_1_4d_1;
      /*signed*/wire[31:0] mac_acc_4_1;
      /*signed*/wire[7:0] src_1_4d_2;
      /*signed*/wire[31:0] mac_acc_4_2;
      /*signed*/wire[7:0] src_1_4d_3;
      /*signed*/wire[31:0] mac_acc_4_3;
      /*signed*/wire[7:0] src_1_4d_4;
      /*signed*/wire[31:0] mac_acc_4_4;
      /*signed*/wire[7:0] src_1_4d_5;
      /*signed*/wire[31:0] mac_acc_4_5;
      /*signed*/wire[7:0] src_1_4d_6;
      /*signed*/wire[31:0] mac_acc_4_6;
      /*signed*/wire[7:0] src_1_4d_7;
      /*signed*/wire[31:0] mac_acc_4_7;
      /*signed*/wire[7:0] src_1_4d_8;
      /*signed*/wire[31:0] mac_acc_4_8;
      /*signed*/wire[7:0] src_1_4d_9;
      /*signed*/wire[31:0] mac_acc_4_9;
      /*signed*/wire[7:0] src_1_4d_10;
      /*signed*/wire[31:0] mac_acc_4_10;
      /*signed*/wire[7:0] src_1_4d_11;
      /*signed*/wire[31:0] mac_acc_4_11;
      /*signed*/wire[7:0] src_1_4d_12;
      /*signed*/wire[31:0] mac_acc_4_12;
      /*signed*/wire[7:0] src_1_4d_13;
      /*signed*/wire[31:0] mac_acc_4_13;
      /*signed*/wire[7:0] src_1_4d_14;
      /*signed*/wire[31:0] mac_acc_4_14;
      /*signed*/wire[7:0] src_1_4d_15;
      /*signed*/wire[31:0] mac_acc_4_15;
      /*signed*/wire[7:0] src_1_4d_16;
      /*signed*/wire[31:0] mac_acc_4_16;
      /*signed*/wire[7:0] src_1_4d_17;
      /*signed*/wire[31:0] mac_acc_4_17;
      /*signed*/wire[7:0] src_1_4d_18;
      /*signed*/wire[31:0] mac_acc_4_18;
      /*signed*/wire[7:0] src_1_4d_19;
      /*signed*/wire[31:0] mac_acc_4_19;
      /*signed*/wire[7:0] src_1_4d_20;
      /*signed*/wire[31:0] mac_acc_4_20;
      /*signed*/wire[7:0] src_1_4d_21;
      /*signed*/wire[31:0] mac_acc_4_21;
      /*signed*/wire[7:0] src_1_4d_22;
      /*signed*/wire[31:0] mac_acc_4_22;
      /*signed*/wire[7:0] src_1_4d_23;
      /*signed*/wire[31:0] mac_acc_4_23;
      /*signed*/wire[7:0] src_1_4d_24;
      /*signed*/wire[31:0] mac_acc_4_24;
      /*signed*/wire[7:0] src_1_4d_25;
      /*signed*/wire[31:0] mac_acc_4_25;
      /*signed*/wire[7:0] src_1_4d_26;
      /*signed*/wire[31:0] mac_acc_4_26;
      /*signed*/wire[7:0] src_1_4d_27;
      /*signed*/wire[31:0] mac_acc_4_27;
      /*signed*/wire[7:0] src_1_4d_28;
      /*signed*/wire[31:0] mac_acc_4_28;
      /*signed*/wire[7:0] src_1_4d_29;
      /*signed*/wire[31:0] mac_acc_4_29;
      /*signed*/wire[7:0] src_1_4d_30;
      /*signed*/wire[31:0] mac_acc_4_30;
      reg clear_4d;
      reg src_vld_4d;
      /*signed*/wire[7:0] src_1_4d_31;
      /*signed*/wire[31:0] mac_acc_4_31;
      /*signed*/wire[7:0] src_1_5d_0;
      /*signed*/wire[31:0] mac_acc_5_0;
      /*signed*/wire[7:0] src_1_5d_1;
      /*signed*/wire[31:0] mac_acc_5_1;
      /*signed*/wire[7:0] src_1_5d_2;
      /*signed*/wire[31:0] mac_acc_5_2;
      /*signed*/wire[7:0] src_1_5d_3;
      /*signed*/wire[31:0] mac_acc_5_3;
      /*signed*/wire[7:0] src_1_5d_4;
      /*signed*/wire[31:0] mac_acc_5_4;
      /*signed*/wire[7:0] src_1_5d_5;
      /*signed*/wire[31:0] mac_acc_5_5;
      /*signed*/wire[7:0] src_1_5d_6;
      /*signed*/wire[31:0] mac_acc_5_6;
      /*signed*/wire[7:0] src_1_5d_7;
      /*signed*/wire[31:0] mac_acc_5_7;
      /*signed*/wire[7:0] src_1_5d_8;
      /*signed*/wire[31:0] mac_acc_5_8;
      /*signed*/wire[7:0] src_1_5d_9;
      /*signed*/wire[31:0] mac_acc_5_9;
      /*signed*/wire[7:0] src_1_5d_10;
      /*signed*/wire[31:0] mac_acc_5_10;
      /*signed*/wire[7:0] src_1_5d_11;
      /*signed*/wire[31:0] mac_acc_5_11;
      /*signed*/wire[7:0] src_1_5d_12;
      /*signed*/wire[31:0] mac_acc_5_12;
      /*signed*/wire[7:0] src_1_5d_13;
      /*signed*/wire[31:0] mac_acc_5_13;
      /*signed*/wire[7:0] src_1_5d_14;
      /*signed*/wire[31:0] mac_acc_5_14;
      /*signed*/wire[7:0] src_1_5d_15;
      /*signed*/wire[31:0] mac_acc_5_15;
      /*signed*/wire[7:0] src_1_5d_16;
      /*signed*/wire[31:0] mac_acc_5_16;
      /*signed*/wire[7:0] src_1_5d_17;
      /*signed*/wire[31:0] mac_acc_5_17;
      /*signed*/wire[7:0] src_1_5d_18;
      /*signed*/wire[31:0] mac_acc_5_18;
      /*signed*/wire[7:0] src_1_5d_19;
      /*signed*/wire[31:0] mac_acc_5_19;
      /*signed*/wire[7:0] src_1_5d_20;
      /*signed*/wire[31:0] mac_acc_5_20;
      /*signed*/wire[7:0] src_1_5d_21;
      /*signed*/wire[31:0] mac_acc_5_21;
      /*signed*/wire[7:0] src_1_5d_22;
      /*signed*/wire[31:0] mac_acc_5_22;
      /*signed*/wire[7:0] src_1_5d_23;
      /*signed*/wire[31:0] mac_acc_5_23;
      /*signed*/wire[7:0] src_1_5d_24;
      /*signed*/wire[31:0] mac_acc_5_24;
      /*signed*/wire[7:0] src_1_5d_25;
      /*signed*/wire[31:0] mac_acc_5_25;
      /*signed*/wire[7:0] src_1_5d_26;
      /*signed*/wire[31:0] mac_acc_5_26;
      /*signed*/wire[7:0] src_1_5d_27;
      /*signed*/wire[31:0] mac_acc_5_27;
      /*signed*/wire[7:0] src_1_5d_28;
      /*signed*/wire[31:0] mac_acc_5_28;
      /*signed*/wire[7:0] src_1_5d_29;
      /*signed*/wire[31:0] mac_acc_5_29;
      /*signed*/wire[7:0] src_1_5d_30;
      /*signed*/wire[31:0] mac_acc_5_30;
      reg clear_5d;
      reg src_vld_5d;
      /*signed*/wire[7:0] src_1_5d_31;
      /*signed*/wire[31:0] mac_acc_5_31;
      /*signed*/wire[7:0] src_1_6d_0;
      /*signed*/wire[31:0] mac_acc_6_0;
      /*signed*/wire[7:0] src_1_7d_0;
      /*signed*/wire[7:0] src_1_6d_1;
      /*signed*/wire[31:0] mac_acc_6_1;
      /*signed*/wire[7:0] src_1_7d_1;
      /*signed*/wire[7:0] src_1_6d_2;
      /*signed*/wire[31:0] mac_acc_6_2;
      /*signed*/wire[7:0] src_1_7d_2;
      /*signed*/wire[7:0] src_1_6d_3;
      /*signed*/wire[31:0] mac_acc_6_3;
      /*signed*/wire[7:0] src_1_7d_3;
      /*signed*/wire[7:0] src_1_6d_4;
      /*signed*/wire[31:0] mac_acc_6_4;
      /*signed*/wire[7:0] src_1_7d_4;
      /*signed*/wire[7:0] src_1_6d_5;
      /*signed*/wire[31:0] mac_acc_6_5;
      /*signed*/wire[7:0] src_1_7d_5;
      /*signed*/wire[7:0] src_1_6d_6;
      /*signed*/wire[31:0] mac_acc_6_6;
      /*signed*/wire[7:0] src_1_7d_6;
      /*signed*/wire[7:0] src_1_6d_7;
      /*signed*/wire[31:0] mac_acc_6_7;
      /*signed*/wire[7:0] src_1_7d_7;
      /*signed*/wire[7:0] src_1_6d_8;
      /*signed*/wire[31:0] mac_acc_6_8;
      /*signed*/wire[7:0] src_1_7d_8;
      /*signed*/wire[7:0] src_1_6d_9;
      /*signed*/wire[31:0] mac_acc_6_9;
      /*signed*/wire[7:0] src_1_7d_9;
      /*signed*/wire[7:0] src_1_6d_10;
      /*signed*/wire[31:0] mac_acc_6_10;
      /*signed*/wire[7:0] src_1_7d_10;
      /*signed*/wire[7:0] src_1_6d_11;
      /*signed*/wire[31:0] mac_acc_6_11;
      /*signed*/wire[7:0] src_1_7d_11;
      /*signed*/wire[7:0] src_1_6d_12;
      /*signed*/wire[31:0] mac_acc_6_12;
      /*signed*/wire[7:0] src_1_7d_12;
      /*signed*/wire[7:0] src_1_6d_13;
      /*signed*/wire[31:0] mac_acc_6_13;
      /*signed*/wire[7:0] src_1_7d_13;
      /*signed*/wire[7:0] src_1_6d_14;
      /*signed*/wire[31:0] mac_acc_6_14;
      /*signed*/wire[7:0] src_1_7d_14;
      /*signed*/wire[7:0] src_1_6d_15;
      /*signed*/wire[31:0] mac_acc_6_15;
      /*signed*/wire[7:0] src_1_7d_15;
      /*signed*/wire[7:0] src_1_6d_16;
      /*signed*/wire[31:0] mac_acc_6_16;
      /*signed*/wire[7:0] src_1_7d_16;
      /*signed*/wire[7:0] src_1_6d_17;
      /*signed*/wire[31:0] mac_acc_6_17;
      /*signed*/wire[7:0] src_1_7d_17;
      /*signed*/wire[7:0] src_1_6d_18;
      /*signed*/wire[31:0] mac_acc_6_18;
      /*signed*/wire[7:0] src_1_7d_18;
      /*signed*/wire[7:0] src_1_6d_19;
      /*signed*/wire[31:0] mac_acc_6_19;
      /*signed*/wire[7:0] src_1_7d_19;
      /*signed*/wire[7:0] src_1_6d_20;
      /*signed*/wire[31:0] mac_acc_6_20;
      /*signed*/wire[7:0] src_1_7d_20;
      /*signed*/wire[7:0] src_1_6d_21;
      /*signed*/wire[31:0] mac_acc_6_21;
      /*signed*/wire[7:0] src_1_7d_21;
      /*signed*/wire[7:0] src_1_6d_22;
      /*signed*/wire[31:0] mac_acc_6_22;
      /*signed*/wire[7:0] src_1_7d_22;
      /*signed*/wire[7:0] src_1_6d_23;
      /*signed*/wire[31:0] mac_acc_6_23;
      /*signed*/wire[7:0] src_1_7d_23;
      /*signed*/wire[7:0] src_1_6d_24;
      /*signed*/wire[31:0] mac_acc_6_24;
      /*signed*/wire[7:0] src_1_7d_24;
      /*signed*/wire[7:0] src_1_6d_25;
      /*signed*/wire[31:0] mac_acc_6_25;
      /*signed*/wire[7:0] src_1_7d_25;
      /*signed*/wire[7:0] src_1_6d_26;
      /*signed*/wire[31:0] mac_acc_6_26;
      /*signed*/wire[7:0] src_1_7d_26;
      /*signed*/wire[7:0] src_1_6d_27;
      /*signed*/wire[31:0] mac_acc_6_27;
      /*signed*/wire[7:0] src_1_7d_27;
      /*signed*/wire[7:0] src_1_6d_28;
      /*signed*/wire[31:0] mac_acc_6_28;
      /*signed*/wire[7:0] src_1_7d_28;
      /*signed*/wire[7:0] src_1_6d_29;
      /*signed*/wire[31:0] mac_acc_6_29;
      /*signed*/wire[7:0] src_1_7d_29;
      /*signed*/wire[7:0] src_1_6d_30;
      /*signed*/wire[31:0] mac_acc_6_30;
      /*signed*/wire[7:0] src_1_7d_30;
      reg clear_6d;
      reg src_vld_6d;
      /*signed*/wire[7:0] src_1_6d_31;
      /*signed*/wire[31:0] mac_acc_6_31;
      /*signed*/wire[7:0] src_1_7d_31;

         // rtl_instance:pe_array/u_mac_223
         mac u_mac_223(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_31 ),
               .src_1( src_1_6d_31 ),
               .acc( mac_acc_6_31 ),
               .src_1_1d( src_1_7d_31 )
             );

         // rtl_instance:pe_array/u_mac_222
         mac u_mac_222(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_30 ),
               .src_1( src_1_6d_30 ),
               .acc( mac_acc_6_30 ),
               .src_1_1d( src_1_7d_30 )
             );

         // rtl_instance:pe_array/u_mac_221
         mac u_mac_221(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_29 ),
               .src_1( src_1_6d_29 ),
               .acc( mac_acc_6_29 ),
               .src_1_1d( src_1_7d_29 )
             );

         // rtl_instance:pe_array/u_mac_220
         mac u_mac_220(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_28 ),
               .src_1( src_1_6d_28 ),
               .acc( mac_acc_6_28 ),
               .src_1_1d( src_1_7d_28 )
             );

         // rtl_instance:pe_array/u_mac_219
         mac u_mac_219(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_27 ),
               .src_1( src_1_6d_27 ),
               .acc( mac_acc_6_27 ),
               .src_1_1d( src_1_7d_27 )
             );

         // rtl_instance:pe_array/u_mac_218
         mac u_mac_218(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_26 ),
               .src_1( src_1_6d_26 ),
               .acc( mac_acc_6_26 ),
               .src_1_1d( src_1_7d_26 )
             );

         // rtl_instance:pe_array/u_mac_217
         mac u_mac_217(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_25 ),
               .src_1( src_1_6d_25 ),
               .acc( mac_acc_6_25 ),
               .src_1_1d( src_1_7d_25 )
             );

         // rtl_instance:pe_array/u_mac_216
         mac u_mac_216(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_24 ),
               .src_1( src_1_6d_24 ),
               .acc( mac_acc_6_24 ),
               .src_1_1d( src_1_7d_24 )
             );

         // rtl_instance:pe_array/u_mac_215
         mac u_mac_215(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_23 ),
               .src_1( src_1_6d_23 ),
               .acc( mac_acc_6_23 ),
               .src_1_1d( src_1_7d_23 )
             );

         // rtl_instance:pe_array/u_mac_214
         mac u_mac_214(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_22 ),
               .src_1( src_1_6d_22 ),
               .acc( mac_acc_6_22 ),
               .src_1_1d( src_1_7d_22 )
             );

         // rtl_instance:pe_array/u_mac_213
         mac u_mac_213(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_21 ),
               .src_1( src_1_6d_21 ),
               .acc( mac_acc_6_21 ),
               .src_1_1d( src_1_7d_21 )
             );

         // rtl_instance:pe_array/u_mac_212
         mac u_mac_212(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_20 ),
               .src_1( src_1_6d_20 ),
               .acc( mac_acc_6_20 ),
               .src_1_1d( src_1_7d_20 )
             );

         // rtl_instance:pe_array/u_mac_211
         mac u_mac_211(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_19 ),
               .src_1( src_1_6d_19 ),
               .acc( mac_acc_6_19 ),
               .src_1_1d( src_1_7d_19 )
             );

         // rtl_instance:pe_array/u_mac_210
         mac u_mac_210(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_18 ),
               .src_1( src_1_6d_18 ),
               .acc( mac_acc_6_18 ),
               .src_1_1d( src_1_7d_18 )
             );

         // rtl_instance:pe_array/u_mac_209
         mac u_mac_209(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_17 ),
               .src_1( src_1_6d_17 ),
               .acc( mac_acc_6_17 ),
               .src_1_1d( src_1_7d_17 )
             );

         // rtl_instance:pe_array/u_mac_208
         mac u_mac_208(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_16 ),
               .src_1( src_1_6d_16 ),
               .acc( mac_acc_6_16 ),
               .src_1_1d( src_1_7d_16 )
             );

         // rtl_instance:pe_array/u_mac_207
         mac u_mac_207(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_15 ),
               .src_1( src_1_6d_15 ),
               .acc( mac_acc_6_15 ),
               .src_1_1d( src_1_7d_15 )
             );

         // rtl_instance:pe_array/u_mac_206
         mac u_mac_206(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_14 ),
               .src_1( src_1_6d_14 ),
               .acc( mac_acc_6_14 ),
               .src_1_1d( src_1_7d_14 )
             );

         // rtl_instance:pe_array/u_mac_205
         mac u_mac_205(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_13 ),
               .src_1( src_1_6d_13 ),
               .acc( mac_acc_6_13 ),
               .src_1_1d( src_1_7d_13 )
             );

         // rtl_instance:pe_array/u_mac_204
         mac u_mac_204(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_12 ),
               .src_1( src_1_6d_12 ),
               .acc( mac_acc_6_12 ),
               .src_1_1d( src_1_7d_12 )
             );

         // rtl_instance:pe_array/u_mac_203
         mac u_mac_203(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_11 ),
               .src_1( src_1_6d_11 ),
               .acc( mac_acc_6_11 ),
               .src_1_1d( src_1_7d_11 )
             );

         // rtl_instance:pe_array/u_mac_202
         mac u_mac_202(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_10 ),
               .src_1( src_1_6d_10 ),
               .acc( mac_acc_6_10 ),
               .src_1_1d( src_1_7d_10 )
             );

         // rtl_instance:pe_array/u_mac_201
         mac u_mac_201(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_9 ),
               .src_1( src_1_6d_9 ),
               .acc( mac_acc_6_9 ),
               .src_1_1d( src_1_7d_9 )
             );

         // rtl_instance:pe_array/u_mac_200
         mac u_mac_200(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_8 ),
               .src_1( src_1_6d_8 ),
               .acc( mac_acc_6_8 ),
               .src_1_1d( src_1_7d_8 )
             );

         // rtl_instance:pe_array/u_mac_199
         mac u_mac_199(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_7 ),
               .src_1( src_1_6d_7 ),
               .acc( mac_acc_6_7 ),
               .src_1_1d( src_1_7d_7 )
             );

         // rtl_instance:pe_array/u_mac_198
         mac u_mac_198(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_6 ),
               .src_1( src_1_6d_6 ),
               .acc( mac_acc_6_6 ),
               .src_1_1d( src_1_7d_6 )
             );

         // rtl_instance:pe_array/u_mac_197
         mac u_mac_197(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_5 ),
               .src_1( src_1_6d_5 ),
               .acc( mac_acc_6_5 ),
               .src_1_1d( src_1_7d_5 )
             );

         // rtl_instance:pe_array/u_mac_196
         mac u_mac_196(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_4 ),
               .src_1( src_1_6d_4 ),
               .acc( mac_acc_6_4 ),
               .src_1_1d( src_1_7d_4 )
             );

         // rtl_instance:pe_array/u_mac_195
         mac u_mac_195(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_3 ),
               .src_1( src_1_6d_3 ),
               .acc( mac_acc_6_3 ),
               .src_1_1d( src_1_7d_3 )
             );

         // rtl_instance:pe_array/u_mac_194
         mac u_mac_194(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_2 ),
               .src_1( src_1_6d_2 ),
               .acc( mac_acc_6_2 ),
               .src_1_1d( src_1_7d_2 )
             );

         // rtl_instance:pe_array/u_mac_193
         mac u_mac_193(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_1 ),
               .src_1( src_1_6d_1 ),
               .acc( mac_acc_6_1 ),
               .src_1_1d( src_1_7d_1 )
             );

         // rtl_instance:pe_array/u_mac_192
         mac u_mac_192(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_6d ),
               .src_vld( src_vld_6d ),
               .src_0( src_0_s6_0 ),
               .src_1( src_1_6d_0 ),
               .acc( mac_acc_6_0 ),
               .src_1_1d( src_1_7d_0 )
             );

         // rtl_instance:pe_array/u_mac_191
         mac u_mac_191(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_31 ),
               .src_1( src_1_5d_31 ),
               .acc( mac_acc_5_31 ),
               .src_1_1d( src_1_6d_31 )
             );

         // rtl_instance:pe_array/u_mac_190
         mac u_mac_190(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_30 ),
               .src_1( src_1_5d_30 ),
               .acc( mac_acc_5_30 ),
               .src_1_1d( src_1_6d_30 )
             );

         // rtl_instance:pe_array/u_mac_189
         mac u_mac_189(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_29 ),
               .src_1( src_1_5d_29 ),
               .acc( mac_acc_5_29 ),
               .src_1_1d( src_1_6d_29 )
             );

         // rtl_instance:pe_array/u_mac_188
         mac u_mac_188(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_28 ),
               .src_1( src_1_5d_28 ),
               .acc( mac_acc_5_28 ),
               .src_1_1d( src_1_6d_28 )
             );

         // rtl_instance:pe_array/u_mac_187
         mac u_mac_187(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_27 ),
               .src_1( src_1_5d_27 ),
               .acc( mac_acc_5_27 ),
               .src_1_1d( src_1_6d_27 )
             );

         // rtl_instance:pe_array/u_mac_186
         mac u_mac_186(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_26 ),
               .src_1( src_1_5d_26 ),
               .acc( mac_acc_5_26 ),
               .src_1_1d( src_1_6d_26 )
             );

         // rtl_instance:pe_array/u_mac_185
         mac u_mac_185(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_25 ),
               .src_1( src_1_5d_25 ),
               .acc( mac_acc_5_25 ),
               .src_1_1d( src_1_6d_25 )
             );

         // rtl_instance:pe_array/u_mac_184
         mac u_mac_184(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_24 ),
               .src_1( src_1_5d_24 ),
               .acc( mac_acc_5_24 ),
               .src_1_1d( src_1_6d_24 )
             );

         // rtl_instance:pe_array/u_mac_183
         mac u_mac_183(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_23 ),
               .src_1( src_1_5d_23 ),
               .acc( mac_acc_5_23 ),
               .src_1_1d( src_1_6d_23 )
             );

         // rtl_instance:pe_array/u_mac_182
         mac u_mac_182(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_22 ),
               .src_1( src_1_5d_22 ),
               .acc( mac_acc_5_22 ),
               .src_1_1d( src_1_6d_22 )
             );

         // rtl_instance:pe_array/u_mac_181
         mac u_mac_181(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_21 ),
               .src_1( src_1_5d_21 ),
               .acc( mac_acc_5_21 ),
               .src_1_1d( src_1_6d_21 )
             );

         // rtl_instance:pe_array/u_mac_180
         mac u_mac_180(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_20 ),
               .src_1( src_1_5d_20 ),
               .acc( mac_acc_5_20 ),
               .src_1_1d( src_1_6d_20 )
             );

         // rtl_instance:pe_array/u_mac_179
         mac u_mac_179(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_19 ),
               .src_1( src_1_5d_19 ),
               .acc( mac_acc_5_19 ),
               .src_1_1d( src_1_6d_19 )
             );

         // rtl_instance:pe_array/u_mac_178
         mac u_mac_178(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_18 ),
               .src_1( src_1_5d_18 ),
               .acc( mac_acc_5_18 ),
               .src_1_1d( src_1_6d_18 )
             );

         // rtl_instance:pe_array/u_mac_177
         mac u_mac_177(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_17 ),
               .src_1( src_1_5d_17 ),
               .acc( mac_acc_5_17 ),
               .src_1_1d( src_1_6d_17 )
             );

         // rtl_instance:pe_array/u_mac_176
         mac u_mac_176(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_16 ),
               .src_1( src_1_5d_16 ),
               .acc( mac_acc_5_16 ),
               .src_1_1d( src_1_6d_16 )
             );

         // rtl_instance:pe_array/u_mac_175
         mac u_mac_175(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_15 ),
               .src_1( src_1_5d_15 ),
               .acc( mac_acc_5_15 ),
               .src_1_1d( src_1_6d_15 )
             );

         // rtl_instance:pe_array/u_mac_174
         mac u_mac_174(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_14 ),
               .src_1( src_1_5d_14 ),
               .acc( mac_acc_5_14 ),
               .src_1_1d( src_1_6d_14 )
             );

         // rtl_instance:pe_array/u_mac_173
         mac u_mac_173(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_13 ),
               .src_1( src_1_5d_13 ),
               .acc( mac_acc_5_13 ),
               .src_1_1d( src_1_6d_13 )
             );

         // rtl_instance:pe_array/u_mac_172
         mac u_mac_172(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_12 ),
               .src_1( src_1_5d_12 ),
               .acc( mac_acc_5_12 ),
               .src_1_1d( src_1_6d_12 )
             );

         // rtl_instance:pe_array/u_mac_171
         mac u_mac_171(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_11 ),
               .src_1( src_1_5d_11 ),
               .acc( mac_acc_5_11 ),
               .src_1_1d( src_1_6d_11 )
             );

         // rtl_instance:pe_array/u_mac_170
         mac u_mac_170(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_10 ),
               .src_1( src_1_5d_10 ),
               .acc( mac_acc_5_10 ),
               .src_1_1d( src_1_6d_10 )
             );

         // rtl_instance:pe_array/u_mac_169
         mac u_mac_169(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_9 ),
               .src_1( src_1_5d_9 ),
               .acc( mac_acc_5_9 ),
               .src_1_1d( src_1_6d_9 )
             );

         // rtl_instance:pe_array/u_mac_168
         mac u_mac_168(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_8 ),
               .src_1( src_1_5d_8 ),
               .acc( mac_acc_5_8 ),
               .src_1_1d( src_1_6d_8 )
             );

         // rtl_instance:pe_array/u_mac_167
         mac u_mac_167(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_7 ),
               .src_1( src_1_5d_7 ),
               .acc( mac_acc_5_7 ),
               .src_1_1d( src_1_6d_7 )
             );

         // rtl_instance:pe_array/u_mac_166
         mac u_mac_166(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_6 ),
               .src_1( src_1_5d_6 ),
               .acc( mac_acc_5_6 ),
               .src_1_1d( src_1_6d_6 )
             );

         // rtl_instance:pe_array/u_mac_165
         mac u_mac_165(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_5 ),
               .src_1( src_1_5d_5 ),
               .acc( mac_acc_5_5 ),
               .src_1_1d( src_1_6d_5 )
             );

         // rtl_instance:pe_array/u_mac_164
         mac u_mac_164(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_4 ),
               .src_1( src_1_5d_4 ),
               .acc( mac_acc_5_4 ),
               .src_1_1d( src_1_6d_4 )
             );

         // rtl_instance:pe_array/u_mac_163
         mac u_mac_163(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_3 ),
               .src_1( src_1_5d_3 ),
               .acc( mac_acc_5_3 ),
               .src_1_1d( src_1_6d_3 )
             );

         // rtl_instance:pe_array/u_mac_162
         mac u_mac_162(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_2 ),
               .src_1( src_1_5d_2 ),
               .acc( mac_acc_5_2 ),
               .src_1_1d( src_1_6d_2 )
             );

         // rtl_instance:pe_array/u_mac_161
         mac u_mac_161(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_1 ),
               .src_1( src_1_5d_1 ),
               .acc( mac_acc_5_1 ),
               .src_1_1d( src_1_6d_1 )
             );

         // rtl_instance:pe_array/u_mac_160
         mac u_mac_160(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_5d ),
               .src_vld( src_vld_5d ),
               .src_0( src_0_s5_0 ),
               .src_1( src_1_5d_0 ),
               .acc( mac_acc_5_0 ),
               .src_1_1d( src_1_6d_0 )
             );

         // rtl_instance:pe_array/u_mac_159
         mac u_mac_159(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_31 ),
               .src_1( src_1_4d_31 ),
               .acc( mac_acc_4_31 ),
               .src_1_1d( src_1_5d_31 )
             );

         // rtl_instance:pe_array/u_mac_158
         mac u_mac_158(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_30 ),
               .src_1( src_1_4d_30 ),
               .acc( mac_acc_4_30 ),
               .src_1_1d( src_1_5d_30 )
             );

         // rtl_instance:pe_array/u_mac_157
         mac u_mac_157(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_29 ),
               .src_1( src_1_4d_29 ),
               .acc( mac_acc_4_29 ),
               .src_1_1d( src_1_5d_29 )
             );

         // rtl_instance:pe_array/u_mac_156
         mac u_mac_156(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_28 ),
               .src_1( src_1_4d_28 ),
               .acc( mac_acc_4_28 ),
               .src_1_1d( src_1_5d_28 )
             );

         // rtl_instance:pe_array/u_mac_155
         mac u_mac_155(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_27 ),
               .src_1( src_1_4d_27 ),
               .acc( mac_acc_4_27 ),
               .src_1_1d( src_1_5d_27 )
             );

         // rtl_instance:pe_array/u_mac_154
         mac u_mac_154(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_26 ),
               .src_1( src_1_4d_26 ),
               .acc( mac_acc_4_26 ),
               .src_1_1d( src_1_5d_26 )
             );

         // rtl_instance:pe_array/u_mac_153
         mac u_mac_153(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_25 ),
               .src_1( src_1_4d_25 ),
               .acc( mac_acc_4_25 ),
               .src_1_1d( src_1_5d_25 )
             );

         // rtl_instance:pe_array/u_mac_152
         mac u_mac_152(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_24 ),
               .src_1( src_1_4d_24 ),
               .acc( mac_acc_4_24 ),
               .src_1_1d( src_1_5d_24 )
             );

         // rtl_instance:pe_array/u_mac_151
         mac u_mac_151(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_23 ),
               .src_1( src_1_4d_23 ),
               .acc( mac_acc_4_23 ),
               .src_1_1d( src_1_5d_23 )
             );

         // rtl_instance:pe_array/u_mac_150
         mac u_mac_150(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_22 ),
               .src_1( src_1_4d_22 ),
               .acc( mac_acc_4_22 ),
               .src_1_1d( src_1_5d_22 )
             );

         // rtl_instance:pe_array/u_mac_149
         mac u_mac_149(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_21 ),
               .src_1( src_1_4d_21 ),
               .acc( mac_acc_4_21 ),
               .src_1_1d( src_1_5d_21 )
             );

         // rtl_instance:pe_array/u_mac_148
         mac u_mac_148(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_20 ),
               .src_1( src_1_4d_20 ),
               .acc( mac_acc_4_20 ),
               .src_1_1d( src_1_5d_20 )
             );

         // rtl_instance:pe_array/u_mac_147
         mac u_mac_147(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_19 ),
               .src_1( src_1_4d_19 ),
               .acc( mac_acc_4_19 ),
               .src_1_1d( src_1_5d_19 )
             );

         // rtl_instance:pe_array/u_mac_146
         mac u_mac_146(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_18 ),
               .src_1( src_1_4d_18 ),
               .acc( mac_acc_4_18 ),
               .src_1_1d( src_1_5d_18 )
             );

         // rtl_instance:pe_array/u_mac_145
         mac u_mac_145(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_17 ),
               .src_1( src_1_4d_17 ),
               .acc( mac_acc_4_17 ),
               .src_1_1d( src_1_5d_17 )
             );

         // rtl_instance:pe_array/u_mac_144
         mac u_mac_144(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_16 ),
               .src_1( src_1_4d_16 ),
               .acc( mac_acc_4_16 ),
               .src_1_1d( src_1_5d_16 )
             );

         // rtl_instance:pe_array/u_mac_143
         mac u_mac_143(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_15 ),
               .src_1( src_1_4d_15 ),
               .acc( mac_acc_4_15 ),
               .src_1_1d( src_1_5d_15 )
             );

         // rtl_instance:pe_array/u_mac_142
         mac u_mac_142(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_14 ),
               .src_1( src_1_4d_14 ),
               .acc( mac_acc_4_14 ),
               .src_1_1d( src_1_5d_14 )
             );

         // rtl_instance:pe_array/u_mac_141
         mac u_mac_141(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_13 ),
               .src_1( src_1_4d_13 ),
               .acc( mac_acc_4_13 ),
               .src_1_1d( src_1_5d_13 )
             );

         // rtl_instance:pe_array/u_mac_140
         mac u_mac_140(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_12 ),
               .src_1( src_1_4d_12 ),
               .acc( mac_acc_4_12 ),
               .src_1_1d( src_1_5d_12 )
             );

         // rtl_instance:pe_array/u_mac_139
         mac u_mac_139(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_11 ),
               .src_1( src_1_4d_11 ),
               .acc( mac_acc_4_11 ),
               .src_1_1d( src_1_5d_11 )
             );

         // rtl_instance:pe_array/u_mac_138
         mac u_mac_138(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_10 ),
               .src_1( src_1_4d_10 ),
               .acc( mac_acc_4_10 ),
               .src_1_1d( src_1_5d_10 )
             );

         // rtl_instance:pe_array/u_mac_137
         mac u_mac_137(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_9 ),
               .src_1( src_1_4d_9 ),
               .acc( mac_acc_4_9 ),
               .src_1_1d( src_1_5d_9 )
             );

         // rtl_instance:pe_array/u_mac_136
         mac u_mac_136(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_8 ),
               .src_1( src_1_4d_8 ),
               .acc( mac_acc_4_8 ),
               .src_1_1d( src_1_5d_8 )
             );

         // rtl_instance:pe_array/u_mac_135
         mac u_mac_135(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_7 ),
               .src_1( src_1_4d_7 ),
               .acc( mac_acc_4_7 ),
               .src_1_1d( src_1_5d_7 )
             );

         // rtl_instance:pe_array/u_mac_134
         mac u_mac_134(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_6 ),
               .src_1( src_1_4d_6 ),
               .acc( mac_acc_4_6 ),
               .src_1_1d( src_1_5d_6 )
             );

         // rtl_instance:pe_array/u_mac_133
         mac u_mac_133(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_5 ),
               .src_1( src_1_4d_5 ),
               .acc( mac_acc_4_5 ),
               .src_1_1d( src_1_5d_5 )
             );

         // rtl_instance:pe_array/u_mac_132
         mac u_mac_132(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_4 ),
               .src_1( src_1_4d_4 ),
               .acc( mac_acc_4_4 ),
               .src_1_1d( src_1_5d_4 )
             );

         // rtl_instance:pe_array/u_mac_131
         mac u_mac_131(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_3 ),
               .src_1( src_1_4d_3 ),
               .acc( mac_acc_4_3 ),
               .src_1_1d( src_1_5d_3 )
             );

         // rtl_instance:pe_array/u_mac_130
         mac u_mac_130(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_2 ),
               .src_1( src_1_4d_2 ),
               .acc( mac_acc_4_2 ),
               .src_1_1d( src_1_5d_2 )
             );

         // rtl_instance:pe_array/u_mac_129
         mac u_mac_129(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_1 ),
               .src_1( src_1_4d_1 ),
               .acc( mac_acc_4_1 ),
               .src_1_1d( src_1_5d_1 )
             );

         // rtl_instance:pe_array/u_mac_128
         mac u_mac_128(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_4d ),
               .src_vld( src_vld_4d ),
               .src_0( src_0_s4_0 ),
               .src_1( src_1_4d_0 ),
               .acc( mac_acc_4_0 ),
               .src_1_1d( src_1_5d_0 )
             );

         // rtl_instance:pe_array/u_mac_127
         mac u_mac_127(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_31 ),
               .src_1( src_1_3d_31 ),
               .acc( mac_acc_3_31 ),
               .src_1_1d( src_1_4d_31 )
             );

         // rtl_instance:pe_array/u_mac_126
         mac u_mac_126(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_30 ),
               .src_1( src_1_3d_30 ),
               .acc( mac_acc_3_30 ),
               .src_1_1d( src_1_4d_30 )
             );

         // rtl_instance:pe_array/u_mac_125
         mac u_mac_125(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_29 ),
               .src_1( src_1_3d_29 ),
               .acc( mac_acc_3_29 ),
               .src_1_1d( src_1_4d_29 )
             );

         // rtl_instance:pe_array/u_mac_124
         mac u_mac_124(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_28 ),
               .src_1( src_1_3d_28 ),
               .acc( mac_acc_3_28 ),
               .src_1_1d( src_1_4d_28 )
             );

         // rtl_instance:pe_array/u_mac_123
         mac u_mac_123(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_27 ),
               .src_1( src_1_3d_27 ),
               .acc( mac_acc_3_27 ),
               .src_1_1d( src_1_4d_27 )
             );

         // rtl_instance:pe_array/u_mac_122
         mac u_mac_122(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_26 ),
               .src_1( src_1_3d_26 ),
               .acc( mac_acc_3_26 ),
               .src_1_1d( src_1_4d_26 )
             );

         // rtl_instance:pe_array/u_mac_121
         mac u_mac_121(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_25 ),
               .src_1( src_1_3d_25 ),
               .acc( mac_acc_3_25 ),
               .src_1_1d( src_1_4d_25 )
             );

         // rtl_instance:pe_array/u_mac_120
         mac u_mac_120(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_24 ),
               .src_1( src_1_3d_24 ),
               .acc( mac_acc_3_24 ),
               .src_1_1d( src_1_4d_24 )
             );

         // rtl_instance:pe_array/u_mac_119
         mac u_mac_119(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_23 ),
               .src_1( src_1_3d_23 ),
               .acc( mac_acc_3_23 ),
               .src_1_1d( src_1_4d_23 )
             );

         // rtl_instance:pe_array/u_mac_118
         mac u_mac_118(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_22 ),
               .src_1( src_1_3d_22 ),
               .acc( mac_acc_3_22 ),
               .src_1_1d( src_1_4d_22 )
             );

         // rtl_instance:pe_array/u_mac_117
         mac u_mac_117(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_21 ),
               .src_1( src_1_3d_21 ),
               .acc( mac_acc_3_21 ),
               .src_1_1d( src_1_4d_21 )
             );

         // rtl_instance:pe_array/u_mac_116
         mac u_mac_116(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_20 ),
               .src_1( src_1_3d_20 ),
               .acc( mac_acc_3_20 ),
               .src_1_1d( src_1_4d_20 )
             );

         // rtl_instance:pe_array/u_mac_115
         mac u_mac_115(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_19 ),
               .src_1( src_1_3d_19 ),
               .acc( mac_acc_3_19 ),
               .src_1_1d( src_1_4d_19 )
             );

         // rtl_instance:pe_array/u_mac_114
         mac u_mac_114(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_18 ),
               .src_1( src_1_3d_18 ),
               .acc( mac_acc_3_18 ),
               .src_1_1d( src_1_4d_18 )
             );

         // rtl_instance:pe_array/u_mac_113
         mac u_mac_113(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_17 ),
               .src_1( src_1_3d_17 ),
               .acc( mac_acc_3_17 ),
               .src_1_1d( src_1_4d_17 )
             );

         // rtl_instance:pe_array/u_mac_112
         mac u_mac_112(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_16 ),
               .src_1( src_1_3d_16 ),
               .acc( mac_acc_3_16 ),
               .src_1_1d( src_1_4d_16 )
             );

         // rtl_instance:pe_array/u_mac_111
         mac u_mac_111(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_15 ),
               .src_1( src_1_3d_15 ),
               .acc( mac_acc_3_15 ),
               .src_1_1d( src_1_4d_15 )
             );

         // rtl_instance:pe_array/u_mac_110
         mac u_mac_110(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_14 ),
               .src_1( src_1_3d_14 ),
               .acc( mac_acc_3_14 ),
               .src_1_1d( src_1_4d_14 )
             );

         // rtl_instance:pe_array/u_mac_109
         mac u_mac_109(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_13 ),
               .src_1( src_1_3d_13 ),
               .acc( mac_acc_3_13 ),
               .src_1_1d( src_1_4d_13 )
             );

         // rtl_instance:pe_array/u_mac_108
         mac u_mac_108(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_12 ),
               .src_1( src_1_3d_12 ),
               .acc( mac_acc_3_12 ),
               .src_1_1d( src_1_4d_12 )
             );

         // rtl_instance:pe_array/u_mac_107
         mac u_mac_107(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_11 ),
               .src_1( src_1_3d_11 ),
               .acc( mac_acc_3_11 ),
               .src_1_1d( src_1_4d_11 )
             );

         // rtl_instance:pe_array/u_mac_106
         mac u_mac_106(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_10 ),
               .src_1( src_1_3d_10 ),
               .acc( mac_acc_3_10 ),
               .src_1_1d( src_1_4d_10 )
             );

         // rtl_instance:pe_array/u_mac_105
         mac u_mac_105(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_9 ),
               .src_1( src_1_3d_9 ),
               .acc( mac_acc_3_9 ),
               .src_1_1d( src_1_4d_9 )
             );

         // rtl_instance:pe_array/u_mac_104
         mac u_mac_104(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_8 ),
               .src_1( src_1_3d_8 ),
               .acc( mac_acc_3_8 ),
               .src_1_1d( src_1_4d_8 )
             );

         // rtl_instance:pe_array/u_mac_103
         mac u_mac_103(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_7 ),
               .src_1( src_1_3d_7 ),
               .acc( mac_acc_3_7 ),
               .src_1_1d( src_1_4d_7 )
             );

         // rtl_instance:pe_array/u_mac_102
         mac u_mac_102(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_6 ),
               .src_1( src_1_3d_6 ),
               .acc( mac_acc_3_6 ),
               .src_1_1d( src_1_4d_6 )
             );

         // rtl_instance:pe_array/u_mac_101
         mac u_mac_101(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_5 ),
               .src_1( src_1_3d_5 ),
               .acc( mac_acc_3_5 ),
               .src_1_1d( src_1_4d_5 )
             );

         // rtl_instance:pe_array/u_mac_100
         mac u_mac_100(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_4 ),
               .src_1( src_1_3d_4 ),
               .acc( mac_acc_3_4 ),
               .src_1_1d( src_1_4d_4 )
             );

         // rtl_instance:pe_array/u_mac_99
         mac u_mac_99(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_3 ),
               .src_1( src_1_3d_3 ),
               .acc( mac_acc_3_3 ),
               .src_1_1d( src_1_4d_3 )
             );

         // rtl_instance:pe_array/u_mac_98
         mac u_mac_98(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_2 ),
               .src_1( src_1_3d_2 ),
               .acc( mac_acc_3_2 ),
               .src_1_1d( src_1_4d_2 )
             );

         // rtl_instance:pe_array/u_mac_97
         mac u_mac_97(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_1 ),
               .src_1( src_1_3d_1 ),
               .acc( mac_acc_3_1 ),
               .src_1_1d( src_1_4d_1 )
             );

         // rtl_instance:pe_array/u_mac_96
         mac u_mac_96(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_3d ),
               .src_vld( src_vld_3d ),
               .src_0( src_0_s3_0 ),
               .src_1( src_1_3d_0 ),
               .acc( mac_acc_3_0 ),
               .src_1_1d( src_1_4d_0 )
             );

         // rtl_instance:pe_array/u_mac_95
         mac u_mac_95(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_31 ),
               .src_1( src_1_2d_31 ),
               .acc( mac_acc_2_31 ),
               .src_1_1d( src_1_3d_31 )
             );

         // rtl_instance:pe_array/u_mac_94
         mac u_mac_94(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_30 ),
               .src_1( src_1_2d_30 ),
               .acc( mac_acc_2_30 ),
               .src_1_1d( src_1_3d_30 )
             );

         // rtl_instance:pe_array/u_mac_93
         mac u_mac_93(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_29 ),
               .src_1( src_1_2d_29 ),
               .acc( mac_acc_2_29 ),
               .src_1_1d( src_1_3d_29 )
             );

         // rtl_instance:pe_array/u_mac_92
         mac u_mac_92(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_28 ),
               .src_1( src_1_2d_28 ),
               .acc( mac_acc_2_28 ),
               .src_1_1d( src_1_3d_28 )
             );

         // rtl_instance:pe_array/u_mac_91
         mac u_mac_91(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_27 ),
               .src_1( src_1_2d_27 ),
               .acc( mac_acc_2_27 ),
               .src_1_1d( src_1_3d_27 )
             );

         // rtl_instance:pe_array/u_mac_90
         mac u_mac_90(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_26 ),
               .src_1( src_1_2d_26 ),
               .acc( mac_acc_2_26 ),
               .src_1_1d( src_1_3d_26 )
             );

         // rtl_instance:pe_array/u_mac_89
         mac u_mac_89(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_25 ),
               .src_1( src_1_2d_25 ),
               .acc( mac_acc_2_25 ),
               .src_1_1d( src_1_3d_25 )
             );

         // rtl_instance:pe_array/u_mac_88
         mac u_mac_88(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_24 ),
               .src_1( src_1_2d_24 ),
               .acc( mac_acc_2_24 ),
               .src_1_1d( src_1_3d_24 )
             );

         // rtl_instance:pe_array/u_mac_87
         mac u_mac_87(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_23 ),
               .src_1( src_1_2d_23 ),
               .acc( mac_acc_2_23 ),
               .src_1_1d( src_1_3d_23 )
             );

         // rtl_instance:pe_array/u_mac_86
         mac u_mac_86(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_22 ),
               .src_1( src_1_2d_22 ),
               .acc( mac_acc_2_22 ),
               .src_1_1d( src_1_3d_22 )
             );

         // rtl_instance:pe_array/u_mac_85
         mac u_mac_85(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_21 ),
               .src_1( src_1_2d_21 ),
               .acc( mac_acc_2_21 ),
               .src_1_1d( src_1_3d_21 )
             );

         // rtl_instance:pe_array/u_mac_84
         mac u_mac_84(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_20 ),
               .src_1( src_1_2d_20 ),
               .acc( mac_acc_2_20 ),
               .src_1_1d( src_1_3d_20 )
             );

         // rtl_instance:pe_array/u_mac_83
         mac u_mac_83(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_19 ),
               .src_1( src_1_2d_19 ),
               .acc( mac_acc_2_19 ),
               .src_1_1d( src_1_3d_19 )
             );

         // rtl_instance:pe_array/u_mac_82
         mac u_mac_82(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_18 ),
               .src_1( src_1_2d_18 ),
               .acc( mac_acc_2_18 ),
               .src_1_1d( src_1_3d_18 )
             );

         // rtl_instance:pe_array/u_mac_81
         mac u_mac_81(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_17 ),
               .src_1( src_1_2d_17 ),
               .acc( mac_acc_2_17 ),
               .src_1_1d( src_1_3d_17 )
             );

         // rtl_instance:pe_array/u_mac_80
         mac u_mac_80(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_16 ),
               .src_1( src_1_2d_16 ),
               .acc( mac_acc_2_16 ),
               .src_1_1d( src_1_3d_16 )
             );

         // rtl_instance:pe_array/u_mac_79
         mac u_mac_79(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_15 ),
               .src_1( src_1_2d_15 ),
               .acc( mac_acc_2_15 ),
               .src_1_1d( src_1_3d_15 )
             );

         // rtl_instance:pe_array/u_mac_78
         mac u_mac_78(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_14 ),
               .src_1( src_1_2d_14 ),
               .acc( mac_acc_2_14 ),
               .src_1_1d( src_1_3d_14 )
             );

         // rtl_instance:pe_array/u_mac_77
         mac u_mac_77(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_13 ),
               .src_1( src_1_2d_13 ),
               .acc( mac_acc_2_13 ),
               .src_1_1d( src_1_3d_13 )
             );

         // rtl_instance:pe_array/u_mac_76
         mac u_mac_76(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_12 ),
               .src_1( src_1_2d_12 ),
               .acc( mac_acc_2_12 ),
               .src_1_1d( src_1_3d_12 )
             );

         // rtl_instance:pe_array/u_mac_75
         mac u_mac_75(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_11 ),
               .src_1( src_1_2d_11 ),
               .acc( mac_acc_2_11 ),
               .src_1_1d( src_1_3d_11 )
             );

         // rtl_instance:pe_array/u_mac_74
         mac u_mac_74(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_10 ),
               .src_1( src_1_2d_10 ),
               .acc( mac_acc_2_10 ),
               .src_1_1d( src_1_3d_10 )
             );

         // rtl_instance:pe_array/u_mac_73
         mac u_mac_73(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_9 ),
               .src_1( src_1_2d_9 ),
               .acc( mac_acc_2_9 ),
               .src_1_1d( src_1_3d_9 )
             );

         // rtl_instance:pe_array/u_mac_72
         mac u_mac_72(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_8 ),
               .src_1( src_1_2d_8 ),
               .acc( mac_acc_2_8 ),
               .src_1_1d( src_1_3d_8 )
             );

         // rtl_instance:pe_array/u_mac_71
         mac u_mac_71(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_7 ),
               .src_1( src_1_2d_7 ),
               .acc( mac_acc_2_7 ),
               .src_1_1d( src_1_3d_7 )
             );

         // rtl_instance:pe_array/u_mac_70
         mac u_mac_70(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_6 ),
               .src_1( src_1_2d_6 ),
               .acc( mac_acc_2_6 ),
               .src_1_1d( src_1_3d_6 )
             );

         // rtl_instance:pe_array/u_mac_69
         mac u_mac_69(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_5 ),
               .src_1( src_1_2d_5 ),
               .acc( mac_acc_2_5 ),
               .src_1_1d( src_1_3d_5 )
             );

         // rtl_instance:pe_array/u_mac_68
         mac u_mac_68(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_4 ),
               .src_1( src_1_2d_4 ),
               .acc( mac_acc_2_4 ),
               .src_1_1d( src_1_3d_4 )
             );

         // rtl_instance:pe_array/u_mac_67
         mac u_mac_67(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_3 ),
               .src_1( src_1_2d_3 ),
               .acc( mac_acc_2_3 ),
               .src_1_1d( src_1_3d_3 )
             );

         // rtl_instance:pe_array/u_mac_66
         mac u_mac_66(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_2 ),
               .src_1( src_1_2d_2 ),
               .acc( mac_acc_2_2 ),
               .src_1_1d( src_1_3d_2 )
             );

         // rtl_instance:pe_array/u_mac_65
         mac u_mac_65(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_1 ),
               .src_1( src_1_2d_1 ),
               .acc( mac_acc_2_1 ),
               .src_1_1d( src_1_3d_1 )
             );

         // rtl_instance:pe_array/u_mac_64
         mac u_mac_64(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_2d ),
               .src_vld( src_vld_2d ),
               .src_0( src_0_s2_0 ),
               .src_1( src_1_2d_0 ),
               .acc( mac_acc_2_0 ),
               .src_1_1d( src_1_3d_0 )
             );

         // rtl_instance:pe_array/u_mac_63
         mac u_mac_63(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_31 ),
               .src_1( src_1_1d_31 ),
               .acc( mac_acc_1_31 ),
               .src_1_1d( src_1_2d_31 )
             );

         // rtl_instance:pe_array/u_mac_62
         mac u_mac_62(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_30 ),
               .src_1( src_1_1d_30 ),
               .acc( mac_acc_1_30 ),
               .src_1_1d( src_1_2d_30 )
             );

         // rtl_instance:pe_array/u_mac_61
         mac u_mac_61(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_29 ),
               .src_1( src_1_1d_29 ),
               .acc( mac_acc_1_29 ),
               .src_1_1d( src_1_2d_29 )
             );

         // rtl_instance:pe_array/u_mac_60
         mac u_mac_60(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_28 ),
               .src_1( src_1_1d_28 ),
               .acc( mac_acc_1_28 ),
               .src_1_1d( src_1_2d_28 )
             );

         // rtl_instance:pe_array/u_mac_59
         mac u_mac_59(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_27 ),
               .src_1( src_1_1d_27 ),
               .acc( mac_acc_1_27 ),
               .src_1_1d( src_1_2d_27 )
             );

         // rtl_instance:pe_array/u_mac_58
         mac u_mac_58(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_26 ),
               .src_1( src_1_1d_26 ),
               .acc( mac_acc_1_26 ),
               .src_1_1d( src_1_2d_26 )
             );

         // rtl_instance:pe_array/u_mac_57
         mac u_mac_57(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_25 ),
               .src_1( src_1_1d_25 ),
               .acc( mac_acc_1_25 ),
               .src_1_1d( src_1_2d_25 )
             );

         // rtl_instance:pe_array/u_mac_56
         mac u_mac_56(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_24 ),
               .src_1( src_1_1d_24 ),
               .acc( mac_acc_1_24 ),
               .src_1_1d( src_1_2d_24 )
             );

         // rtl_instance:pe_array/u_mac_55
         mac u_mac_55(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_23 ),
               .src_1( src_1_1d_23 ),
               .acc( mac_acc_1_23 ),
               .src_1_1d( src_1_2d_23 )
             );

         // rtl_instance:pe_array/u_mac_54
         mac u_mac_54(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_22 ),
               .src_1( src_1_1d_22 ),
               .acc( mac_acc_1_22 ),
               .src_1_1d( src_1_2d_22 )
             );

         // rtl_instance:pe_array/u_mac_53
         mac u_mac_53(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_21 ),
               .src_1( src_1_1d_21 ),
               .acc( mac_acc_1_21 ),
               .src_1_1d( src_1_2d_21 )
             );

         // rtl_instance:pe_array/u_mac_52
         mac u_mac_52(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_20 ),
               .src_1( src_1_1d_20 ),
               .acc( mac_acc_1_20 ),
               .src_1_1d( src_1_2d_20 )
             );

         // rtl_instance:pe_array/u_mac_51
         mac u_mac_51(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_19 ),
               .src_1( src_1_1d_19 ),
               .acc( mac_acc_1_19 ),
               .src_1_1d( src_1_2d_19 )
             );

         // rtl_instance:pe_array/u_mac_50
         mac u_mac_50(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_18 ),
               .src_1( src_1_1d_18 ),
               .acc( mac_acc_1_18 ),
               .src_1_1d( src_1_2d_18 )
             );

         // rtl_instance:pe_array/u_mac_49
         mac u_mac_49(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_17 ),
               .src_1( src_1_1d_17 ),
               .acc( mac_acc_1_17 ),
               .src_1_1d( src_1_2d_17 )
             );

         // rtl_instance:pe_array/u_mac_48
         mac u_mac_48(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_16 ),
               .src_1( src_1_1d_16 ),
               .acc( mac_acc_1_16 ),
               .src_1_1d( src_1_2d_16 )
             );

         // rtl_instance:pe_array/u_mac_47
         mac u_mac_47(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_15 ),
               .src_1( src_1_1d_15 ),
               .acc( mac_acc_1_15 ),
               .src_1_1d( src_1_2d_15 )
             );

         // rtl_instance:pe_array/u_mac_46
         mac u_mac_46(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_14 ),
               .src_1( src_1_1d_14 ),
               .acc( mac_acc_1_14 ),
               .src_1_1d( src_1_2d_14 )
             );

         // rtl_instance:pe_array/u_mac_45
         mac u_mac_45(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_13 ),
               .src_1( src_1_1d_13 ),
               .acc( mac_acc_1_13 ),
               .src_1_1d( src_1_2d_13 )
             );

         // rtl_instance:pe_array/u_mac_44
         mac u_mac_44(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_12 ),
               .src_1( src_1_1d_12 ),
               .acc( mac_acc_1_12 ),
               .src_1_1d( src_1_2d_12 )
             );

         // rtl_instance:pe_array/u_mac_43
         mac u_mac_43(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_11 ),
               .src_1( src_1_1d_11 ),
               .acc( mac_acc_1_11 ),
               .src_1_1d( src_1_2d_11 )
             );

         // rtl_instance:pe_array/u_mac_42
         mac u_mac_42(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_10 ),
               .src_1( src_1_1d_10 ),
               .acc( mac_acc_1_10 ),
               .src_1_1d( src_1_2d_10 )
             );

         // rtl_instance:pe_array/u_mac_41
         mac u_mac_41(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_9 ),
               .src_1( src_1_1d_9 ),
               .acc( mac_acc_1_9 ),
               .src_1_1d( src_1_2d_9 )
             );

         // rtl_instance:pe_array/u_mac_40
         mac u_mac_40(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_8 ),
               .src_1( src_1_1d_8 ),
               .acc( mac_acc_1_8 ),
               .src_1_1d( src_1_2d_8 )
             );

         // rtl_instance:pe_array/u_mac_39
         mac u_mac_39(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_7 ),
               .src_1( src_1_1d_7 ),
               .acc( mac_acc_1_7 ),
               .src_1_1d( src_1_2d_7 )
             );

         // rtl_instance:pe_array/u_mac_38
         mac u_mac_38(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_6 ),
               .src_1( src_1_1d_6 ),
               .acc( mac_acc_1_6 ),
               .src_1_1d( src_1_2d_6 )
             );

         // rtl_instance:pe_array/u_mac_37
         mac u_mac_37(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_5 ),
               .src_1( src_1_1d_5 ),
               .acc( mac_acc_1_5 ),
               .src_1_1d( src_1_2d_5 )
             );

         // rtl_instance:pe_array/u_mac_36
         mac u_mac_36(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_4 ),
               .src_1( src_1_1d_4 ),
               .acc( mac_acc_1_4 ),
               .src_1_1d( src_1_2d_4 )
             );

         // rtl_instance:pe_array/u_mac_35
         mac u_mac_35(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_3 ),
               .src_1( src_1_1d_3 ),
               .acc( mac_acc_1_3 ),
               .src_1_1d( src_1_2d_3 )
             );

         // rtl_instance:pe_array/u_mac_34
         mac u_mac_34(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_2 ),
               .src_1( src_1_1d_2 ),
               .acc( mac_acc_1_2 ),
               .src_1_1d( src_1_2d_2 )
             );

         // rtl_instance:pe_array/u_mac_33
         mac u_mac_33(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_1 ),
               .src_1( src_1_1d_1 ),
               .acc( mac_acc_1_1 ),
               .src_1_1d( src_1_2d_1 )
             );

         // rtl_instance:pe_array/u_mac_32
         mac u_mac_32(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear_1d ),
               .src_vld( src_vld_1d ),
               .src_0( src_0_s1_0 ),
               .src_1( src_1_1d_0 ),
               .acc( mac_acc_1_0 ),
               .src_1_1d( src_1_2d_0 )
             );

         // rtl_instance:pe_array/u_mac_31
         mac u_mac_31(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_31 ),
               .src_1( src_1_31 ),
               .acc( mac_acc_0_31 ),
               .src_1_1d( src_1_1d_31 )
             );

         // rtl_instance:pe_array/u_mac_30
         mac u_mac_30(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_30 ),
               .src_1( src_1_30 ),
               .acc( mac_acc_0_30 ),
               .src_1_1d( src_1_1d_30 )
             );

         // rtl_instance:pe_array/u_mac_29
         mac u_mac_29(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_29 ),
               .src_1( src_1_29 ),
               .acc( mac_acc_0_29 ),
               .src_1_1d( src_1_1d_29 )
             );

         // rtl_instance:pe_array/u_mac_28
         mac u_mac_28(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_28 ),
               .src_1( src_1_28 ),
               .acc( mac_acc_0_28 ),
               .src_1_1d( src_1_1d_28 )
             );

         // rtl_instance:pe_array/u_mac_27
         mac u_mac_27(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_27 ),
               .src_1( src_1_27 ),
               .acc( mac_acc_0_27 ),
               .src_1_1d( src_1_1d_27 )
             );

         // rtl_instance:pe_array/u_mac_26
         mac u_mac_26(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_26 ),
               .src_1( src_1_26 ),
               .acc( mac_acc_0_26 ),
               .src_1_1d( src_1_1d_26 )
             );

         // rtl_instance:pe_array/u_mac_25
         mac u_mac_25(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_25 ),
               .src_1( src_1_25 ),
               .acc( mac_acc_0_25 ),
               .src_1_1d( src_1_1d_25 )
             );

         // rtl_instance:pe_array/u_mac_24
         mac u_mac_24(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_24 ),
               .src_1( src_1_24 ),
               .acc( mac_acc_0_24 ),
               .src_1_1d( src_1_1d_24 )
             );

         // rtl_instance:pe_array/u_mac_23
         mac u_mac_23(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_23 ),
               .src_1( src_1_23 ),
               .acc( mac_acc_0_23 ),
               .src_1_1d( src_1_1d_23 )
             );

         // rtl_instance:pe_array/u_mac_22
         mac u_mac_22(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_22 ),
               .src_1( src_1_22 ),
               .acc( mac_acc_0_22 ),
               .src_1_1d( src_1_1d_22 )
             );

         // rtl_instance:pe_array/u_mac_21
         mac u_mac_21(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_21 ),
               .src_1( src_1_21 ),
               .acc( mac_acc_0_21 ),
               .src_1_1d( src_1_1d_21 )
             );

         // rtl_instance:pe_array/u_mac_20
         mac u_mac_20(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_20 ),
               .src_1( src_1_20 ),
               .acc( mac_acc_0_20 ),
               .src_1_1d( src_1_1d_20 )
             );

         // rtl_instance:pe_array/u_mac_19
         mac u_mac_19(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_19 ),
               .src_1( src_1_19 ),
               .acc( mac_acc_0_19 ),
               .src_1_1d( src_1_1d_19 )
             );

         // rtl_instance:pe_array/u_mac_18
         mac u_mac_18(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_18 ),
               .src_1( src_1_18 ),
               .acc( mac_acc_0_18 ),
               .src_1_1d( src_1_1d_18 )
             );

         // rtl_instance:pe_array/u_mac_17
         mac u_mac_17(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_17 ),
               .src_1( src_1_17 ),
               .acc( mac_acc_0_17 ),
               .src_1_1d( src_1_1d_17 )
             );

         // rtl_instance:pe_array/u_mac_16
         mac u_mac_16(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_16 ),
               .src_1( src_1_16 ),
               .acc( mac_acc_0_16 ),
               .src_1_1d( src_1_1d_16 )
             );

         // rtl_instance:pe_array/u_mac_15
         mac u_mac_15(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_15 ),
               .src_1( src_1_15 ),
               .acc( mac_acc_0_15 ),
               .src_1_1d( src_1_1d_15 )
             );

         // rtl_instance:pe_array/u_mac_14
         mac u_mac_14(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_14 ),
               .src_1( src_1_14 ),
               .acc( mac_acc_0_14 ),
               .src_1_1d( src_1_1d_14 )
             );

         // rtl_instance:pe_array/u_mac_13
         mac u_mac_13(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_13 ),
               .src_1( src_1_13 ),
               .acc( mac_acc_0_13 ),
               .src_1_1d( src_1_1d_13 )
             );

         // rtl_instance:pe_array/u_mac_12
         mac u_mac_12(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_12 ),
               .src_1( src_1_12 ),
               .acc( mac_acc_0_12 ),
               .src_1_1d( src_1_1d_12 )
             );

         // rtl_instance:pe_array/u_mac_11
         mac u_mac_11(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_11 ),
               .src_1( src_1_11 ),
               .acc( mac_acc_0_11 ),
               .src_1_1d( src_1_1d_11 )
             );

         // rtl_instance:pe_array/u_mac_10
         mac u_mac_10(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_10 ),
               .src_1( src_1_10 ),
               .acc( mac_acc_0_10 ),
               .src_1_1d( src_1_1d_10 )
             );

         // rtl_instance:pe_array/u_mac_9
         mac u_mac_9(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_9 ),
               .src_1( src_1_9 ),
               .acc( mac_acc_0_9 ),
               .src_1_1d( src_1_1d_9 )
             );

         // rtl_instance:pe_array/u_mac_8
         mac u_mac_8(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_8 ),
               .src_1( src_1_8 ),
               .acc( mac_acc_0_8 ),
               .src_1_1d( src_1_1d_8 )
             );

         // rtl_instance:pe_array/u_mac_7
         mac u_mac_7(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_7 ),
               .src_1( src_1_7 ),
               .acc( mac_acc_0_7 ),
               .src_1_1d( src_1_1d_7 )
             );

         // rtl_instance:pe_array/u_mac_6
         mac u_mac_6(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_6 ),
               .src_1( src_1_6 ),
               .acc( mac_acc_0_6 ),
               .src_1_1d( src_1_1d_6 )
             );

         // rtl_instance:pe_array/u_mac_5
         mac u_mac_5(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_5 ),
               .src_1( src_1_5 ),
               .acc( mac_acc_0_5 ),
               .src_1_1d( src_1_1d_5 )
             );

         // rtl_instance:pe_array/u_mac_4
         mac u_mac_4(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_4 ),
               .src_1( src_1_4 ),
               .acc( mac_acc_0_4 ),
               .src_1_1d( src_1_1d_4 )
             );

         // rtl_instance:pe_array/u_mac_3
         mac u_mac_3(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_3 ),
               .src_1( src_1_3 ),
               .acc( mac_acc_0_3 ),
               .src_1_1d( src_1_1d_3 )
             );

         // rtl_instance:pe_array/u_mac_2
         mac u_mac_2(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_2 ),
               .src_1( src_1_2 ),
               .acc( mac_acc_0_2 ),
               .src_1_1d( src_1_1d_2 )
             );

         // rtl_instance:pe_array/u_mac_1
         mac u_mac_1(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_1 ),
               .src_1( src_1_1 ),
               .acc( mac_acc_0_1 ),
               .src_1_1d( src_1_1d_1 )
             );

         // rtl_instance:pe_array/u_mac_0
         mac u_mac_0(
               .clk( clk ),
               .rstn( rstn ),
               .init( init ),
               .clear( clear ),
               .src_vld( src_vld ),
               .src_0( src_0_s0_0 ),
               .src_1( src_1_0 ),
               .acc( mac_acc_0_0 ),
               .src_1_1d( src_1_1d_0 )
             );

         // rtl_process:pe_array/drive_pe_data_0
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_0
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_0
            if (rstn == 1'b0) begin
               // op:_pe_data/OP0
               pe_data_0 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP101
                        pe_data_0 <= mac_shifted_data_0;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP35
                     pe_data_0 <= {{ 22 {src_0_s0_0[9]}}, src_0_s0_0};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_1
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_1
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_1
            if (rstn == 1'b0) begin
               // op:_pe_data/OP1
               pe_data_1 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP103
                        pe_data_1 <= mac_shifted_data_1;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP37
                     pe_data_1 <= {{ 22 {src_0_s0_1[9]}}, src_0_s0_1};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_2
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_2
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_2
            if (rstn == 1'b0) begin
               // op:_pe_data/OP2
               pe_data_2 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP105
                        pe_data_2 <= mac_shifted_data_2;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP39
                     pe_data_2 <= {{ 22 {src_0_s0_2[9]}}, src_0_s0_2};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_3
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_3
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_3
            if (rstn == 1'b0) begin
               // op:_pe_data/OP3
               pe_data_3 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP107
                        pe_data_3 <= mac_shifted_data_3;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP41
                     pe_data_3 <= {{ 22 {src_0_s0_3[9]}}, src_0_s0_3};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_4
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_4
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_4
            if (rstn == 1'b0) begin
               // op:_pe_data/OP4
               pe_data_4 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP109
                        pe_data_4 <= mac_shifted_data_4;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP43
                     pe_data_4 <= {{ 22 {src_0_s0_4[9]}}, src_0_s0_4};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_5
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_5
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_5
            if (rstn == 1'b0) begin
               // op:_pe_data/OP5
               pe_data_5 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP111
                        pe_data_5 <= mac_shifted_data_5;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP45
                     pe_data_5 <= {{ 22 {src_0_s0_5[9]}}, src_0_s0_5};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_6
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_6
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_6
            if (rstn == 1'b0) begin
               // op:_pe_data/OP6
               pe_data_6 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP113
                        pe_data_6 <= mac_shifted_data_6;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP47
                     pe_data_6 <= {{ 22 {src_0_s0_6[9]}}, src_0_s0_6};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_7
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_7
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_7
            if (rstn == 1'b0) begin
               // op:_pe_data/OP7
               pe_data_7 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP115
                        pe_data_7 <= mac_shifted_data_7;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP49
                     pe_data_7 <= {{ 22 {src_0_s0_7[9]}}, src_0_s0_7};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_8
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_8
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_8
            if (rstn == 1'b0) begin
               // op:_pe_data/OP8
               pe_data_8 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP117
                        pe_data_8 <= mac_shifted_data_8;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP51
                     pe_data_8 <= {{ 22 {src_0_s0_8[9]}}, src_0_s0_8};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_9
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_9
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_9
            if (rstn == 1'b0) begin
               // op:_pe_data/OP9
               pe_data_9 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP119
                        pe_data_9 <= mac_shifted_data_9;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP53
                     pe_data_9 <= {{ 22 {src_0_s0_9[9]}}, src_0_s0_9};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_10
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_10
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_10
            if (rstn == 1'b0) begin
               // op:_pe_data/OP10
               pe_data_10 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP121
                        pe_data_10 <= mac_shifted_data_10;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP55
                     pe_data_10 <= {{ 22 {src_0_s0_10[9]}}, src_0_s0_10};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_11
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_11
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_11
            if (rstn == 1'b0) begin
               // op:_pe_data/OP11
               pe_data_11 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP123
                        pe_data_11 <= mac_shifted_data_11;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP57
                     pe_data_11 <= {{ 22 {src_0_s0_11[9]}}, src_0_s0_11};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_12
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_12
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_12
            if (rstn == 1'b0) begin
               // op:_pe_data/OP12
               pe_data_12 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP125
                        pe_data_12 <= mac_shifted_data_12;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP59
                     pe_data_12 <= {{ 22 {src_0_s0_12[9]}}, src_0_s0_12};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_13
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_13
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_13
            if (rstn == 1'b0) begin
               // op:_pe_data/OP13
               pe_data_13 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP127
                        pe_data_13 <= mac_shifted_data_13;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP61
                     pe_data_13 <= {{ 22 {src_0_s0_13[9]}}, src_0_s0_13};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_14
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_14
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_14
            if (rstn == 1'b0) begin
               // op:_pe_data/OP14
               pe_data_14 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP129
                        pe_data_14 <= mac_shifted_data_14;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP63
                     pe_data_14 <= {{ 22 {src_0_s0_14[9]}}, src_0_s0_14};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_15
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_15
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_15
            if (rstn == 1'b0) begin
               // op:_pe_data/OP15
               pe_data_15 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP131
                        pe_data_15 <= mac_shifted_data_15;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP65
                     pe_data_15 <= {{ 22 {src_0_s0_15[9]}}, src_0_s0_15};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_16
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_16
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_16
            if (rstn == 1'b0) begin
               // op:_pe_data/OP16
               pe_data_16 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP133
                        pe_data_16 <= mac_shifted_data_16;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP67
                     pe_data_16 <= {{ 22 {src_0_s0_16[9]}}, src_0_s0_16};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_17
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_17
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_17
            if (rstn == 1'b0) begin
               // op:_pe_data/OP17
               pe_data_17 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP135
                        pe_data_17 <= mac_shifted_data_17;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP69
                     pe_data_17 <= {{ 22 {src_0_s0_17[9]}}, src_0_s0_17};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_18
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_18
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_18
            if (rstn == 1'b0) begin
               // op:_pe_data/OP18
               pe_data_18 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP137
                        pe_data_18 <= mac_shifted_data_18;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP71
                     pe_data_18 <= {{ 22 {src_0_s0_18[9]}}, src_0_s0_18};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_19
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_19
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_19
            if (rstn == 1'b0) begin
               // op:_pe_data/OP19
               pe_data_19 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP139
                        pe_data_19 <= mac_shifted_data_19;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP73
                     pe_data_19 <= {{ 22 {src_0_s0_19[9]}}, src_0_s0_19};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_20
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_20
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_20
            if (rstn == 1'b0) begin
               // op:_pe_data/OP20
               pe_data_20 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP141
                        pe_data_20 <= mac_shifted_data_20;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP75
                     pe_data_20 <= {{ 22 {src_0_s0_20[9]}}, src_0_s0_20};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_21
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_21
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_21
            if (rstn == 1'b0) begin
               // op:_pe_data/OP21
               pe_data_21 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP143
                        pe_data_21 <= mac_shifted_data_21;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP77
                     pe_data_21 <= {{ 22 {src_0_s0_21[9]}}, src_0_s0_21};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_22
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_22
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_22
            if (rstn == 1'b0) begin
               // op:_pe_data/OP22
               pe_data_22 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP145
                        pe_data_22 <= mac_shifted_data_22;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP79
                     pe_data_22 <= {{ 22 {src_0_s0_22[9]}}, src_0_s0_22};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_23
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_23
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_23
            if (rstn == 1'b0) begin
               // op:_pe_data/OP23
               pe_data_23 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP147
                        pe_data_23 <= mac_shifted_data_23;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP81
                     pe_data_23 <= {{ 22 {src_0_s0_23[9]}}, src_0_s0_23};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_24
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_24
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_24
            if (rstn == 1'b0) begin
               // op:_pe_data/OP24
               pe_data_24 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP149
                        pe_data_24 <= mac_shifted_data_24;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP83
                     pe_data_24 <= {{ 22 {src_0_s0_24[9]}}, src_0_s0_24};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_25
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_25
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_25
            if (rstn == 1'b0) begin
               // op:_pe_data/OP25
               pe_data_25 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP151
                        pe_data_25 <= mac_shifted_data_25;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP85
                     pe_data_25 <= {{ 22 {src_0_s0_25[9]}}, src_0_s0_25};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_26
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_26
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_26
            if (rstn == 1'b0) begin
               // op:_pe_data/OP26
               pe_data_26 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP153
                        pe_data_26 <= mac_shifted_data_26;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP87
                     pe_data_26 <= {{ 22 {src_0_s0_26[9]}}, src_0_s0_26};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_27
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_27
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_27
            if (rstn == 1'b0) begin
               // op:_pe_data/OP27
               pe_data_27 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP155
                        pe_data_27 <= mac_shifted_data_27;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP89
                     pe_data_27 <= {{ 22 {src_0_s0_27[9]}}, src_0_s0_27};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_28
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_28
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_28
            if (rstn == 1'b0) begin
               // op:_pe_data/OP28
               pe_data_28 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP157
                        pe_data_28 <= mac_shifted_data_28;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP91
                     pe_data_28 <= {{ 22 {src_0_s0_28[9]}}, src_0_s0_28};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_29
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_29
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_29
            if (rstn == 1'b0) begin
               // op:_pe_data/OP29
               pe_data_29 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP159
                        pe_data_29 <= mac_shifted_data_29;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP93
                     pe_data_29 <= {{ 22 {src_0_s0_29[9]}}, src_0_s0_29};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_30
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_30
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_30
            if (rstn == 1'b0) begin
               // op:_pe_data/OP30
               pe_data_30 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP161
                        pe_data_30 <= mac_shifted_data_30;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP95
                     pe_data_30 <= {{ 22 {src_0_s0_30[9]}}, src_0_s0_30};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_data_31
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_pe_data_31
         // at: pe_array.h:242:16
         // at: pe_array.h:273:16
         // at: pe_array.h:264:20
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_31
            if (rstn == 1'b0) begin
               // op:_pe_data/OP31
               pe_data_31 <= 32'd0000000000;
            end
            else begin
               case (enable) 

                  1'b1:                   begin
                     if (check_overflow_en) begin
                        // op:_pe_data/OP163
                        pe_data_31 <= mac_shifted_data_31;
                     end
                  end
                  
                  1'b0:                   begin
                     // op:_pe_data/OP97
                     pe_data_31 <= {{ 22 {src_0_s0_31[9]}}, src_0_s0_31};
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_check_overflow_en
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_check_overflow_en
         // at: pe_array.h:247:11
         // at: pe_array.h:230:7
         // at: pe_array.h:234:7
         // at: pe_array.h:157:23
         // at: pe_array.h:144:26
         always @(posedge clk or negedge rstn)
          begin :drive_check_overflow_en
            if (rstn == 1'b0) begin
               // op:_check_overflow_en/OP164
               check_overflow_en <= 1'd0;
            end
            else begin
               // op:_check_overflow_en/OP176
               check_overflow_en <= pe_array_N_Muxb_1_2_2_4_3_out1;
            end
         end

         // rtl_instance:pe_array/pe_array_OrReduction_8U_1U_4_1
         // Resource=pe_array_OrReduction_8U_1U_4, Function=or : Inputs=8 Outputs=1
         // Implements 1 operation(s)
         // at: pe_array.h:231:14
         assign pe_array_OrReduction_8U_1U_4_1_out1 = (|systolic_en);

         // rtl_process:pe_array/drive_pe_array_OrReduction_7U_1U_4_2_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_OrReduction_7U_1U_4_2_in1
         // at: pe_array.h:232:96
         assign pe_array_OrReduction_7U_1U_4_2_in1 = {clear_1d, {{clear_2d, clear_3d}, {{clear_4d, clear_5d}, {clear_6d, clear_7d}}}};

         // rtl_instance:pe_array/pe_array_OrReduction_7U_1U_4_2
         // Resource=pe_array_OrReduction_7U_1U_4, Function=or : Inputs=7 Outputs=1
         // Implements 1 operation(s)
         // at: pe_array.h:232:96
         assign pe_array_OrReduction_7U_1U_4_2_out1 = (|pe_array_OrReduction_7U_1U_4_2_in1);

         // rtl_instance:pe_array/pe_array_N_Muxb_1_2_2_4
         always @(clear_1d or pe_array_OrReduction_8U_1U_4_1_out1 or pe_array_OrReduction_7U_1U_4_2_out1)
          begin :pe_array_N_Muxb_1_2_2_4_3
            if (pe_array_OrReduction_8U_1U_4_1_out1) begin
               pe_array_N_Muxb_1_2_2_4_3_out1 = pe_array_OrReduction_7U_1U_4_2_out1;
            end
            else begin
               pe_array_N_Muxb_1_2_2_4_3_out1 = clear_1d;
            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_0
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_0
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_0
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP182
               mac_shifted_data_0 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP813
                     mac_shifted_data_0 <= pe_array_RightShift_32Sx6U_32S_4_420_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP716
                        mac_shifted_data_0 <= pe_array_RightShift_32Sx6U_32S_4_420_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP619
                           mac_shifted_data_0 <= pe_array_RightShift_32Sx6U_32S_4_516_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP522
                              mac_shifted_data_0 <= pe_array_RightShift_32Sx6U_32S_4_292_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP425
                                 mac_shifted_data_0 <= pe_array_RightShift_32Sx6U_32S_4_484_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP328
                                    mac_shifted_data_0 <= pe_array_RightShift_32Sx6U_32S_4_388_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP231
                                       mac_shifted_data_0 <= pe_array_RightShift_32Sx6U_32S_4_4_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_1
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_1
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_1
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP183
               mac_shifted_data_1 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP816
                     mac_shifted_data_1 <= pe_array_RightShift_32Sx6U_32S_4_422_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP719
                        mac_shifted_data_1 <= pe_array_RightShift_32Sx6U_32S_4_422_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP622
                           mac_shifted_data_1 <= pe_array_RightShift_32Sx6U_32S_4_517_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP525
                              mac_shifted_data_1 <= pe_array_RightShift_32Sx6U_32S_4_296_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP428
                                 mac_shifted_data_1 <= pe_array_RightShift_32Sx6U_32S_4_485_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP331
                                    mac_shifted_data_1 <= pe_array_RightShift_32Sx6U_32S_4_390_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP234
                                       mac_shifted_data_1 <= pe_array_RightShift_32Sx6U_32S_4_5_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_2
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_2
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_2
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP184
               mac_shifted_data_2 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP819
                     mac_shifted_data_2 <= pe_array_RightShift_32Sx6U_32S_4_426_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP722
                        mac_shifted_data_2 <= pe_array_RightShift_32Sx6U_32S_4_426_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP625
                           mac_shifted_data_2 <= pe_array_RightShift_32Sx6U_32S_4_519_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP528
                              mac_shifted_data_2 <= pe_array_RightShift_32Sx6U_32S_4_300_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP431
                                 mac_shifted_data_2 <= pe_array_RightShift_32Sx6U_32S_4_487_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP334
                                    mac_shifted_data_2 <= pe_array_RightShift_32Sx6U_32S_4_392_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP237
                                       mac_shifted_data_2 <= pe_array_RightShift_32Sx6U_32S_4_6_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_3
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_3
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_3
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP185
               mac_shifted_data_3 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP822
                     mac_shifted_data_3 <= pe_array_RightShift_32Sx6U_32S_4_430_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP725
                        mac_shifted_data_3 <= pe_array_RightShift_32Sx6U_32S_4_430_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP628
                           mac_shifted_data_3 <= pe_array_RightShift_32Sx6U_32S_4_521_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP531
                              mac_shifted_data_3 <= pe_array_RightShift_32Sx6U_32S_4_304_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP434
                                 mac_shifted_data_3 <= pe_array_RightShift_32Sx6U_32S_4_489_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP337
                                    mac_shifted_data_3 <= pe_array_RightShift_32Sx6U_32S_4_394_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP240
                                       mac_shifted_data_3 <= pe_array_RightShift_32Sx6U_32S_4_7_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_4
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_4
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_4
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP186
               mac_shifted_data_4 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP825
                     mac_shifted_data_4 <= pe_array_RightShift_32Sx6U_32S_4_434_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP728
                        mac_shifted_data_4 <= pe_array_RightShift_32Sx6U_32S_4_434_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP631
                           mac_shifted_data_4 <= pe_array_RightShift_32Sx6U_32S_4_523_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP534
                              mac_shifted_data_4 <= pe_array_RightShift_32Sx6U_32S_4_308_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP437
                                 mac_shifted_data_4 <= pe_array_RightShift_32Sx6U_32S_4_491_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP340
                                    mac_shifted_data_4 <= pe_array_RightShift_32Sx6U_32S_4_396_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP243
                                       mac_shifted_data_4 <= pe_array_RightShift_32Sx6U_32S_4_8_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_5
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_5
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_5
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP187
               mac_shifted_data_5 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP828
                     mac_shifted_data_5 <= pe_array_RightShift_32Sx6U_32S_4_438_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP731
                        mac_shifted_data_5 <= pe_array_RightShift_32Sx6U_32S_4_438_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP634
                           mac_shifted_data_5 <= pe_array_RightShift_32Sx6U_32S_4_525_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP537
                              mac_shifted_data_5 <= pe_array_RightShift_32Sx6U_32S_4_312_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP440
                                 mac_shifted_data_5 <= pe_array_RightShift_32Sx6U_32S_4_493_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP343
                                    mac_shifted_data_5 <= pe_array_RightShift_32Sx6U_32S_4_398_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP246
                                       mac_shifted_data_5 <= pe_array_RightShift_32Sx6U_32S_4_9_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_6
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_6
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_6
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP188
               mac_shifted_data_6 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP831
                     mac_shifted_data_6 <= pe_array_RightShift_32Sx6U_32S_4_442_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP734
                        mac_shifted_data_6 <= pe_array_RightShift_32Sx6U_32S_4_442_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP637
                           mac_shifted_data_6 <= pe_array_RightShift_32Sx6U_32S_4_527_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP540
                              mac_shifted_data_6 <= pe_array_RightShift_32Sx6U_32S_4_316_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP443
                                 mac_shifted_data_6 <= pe_array_RightShift_32Sx6U_32S_4_495_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP346
                                    mac_shifted_data_6 <= pe_array_RightShift_32Sx6U_32S_4_400_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP249
                                       mac_shifted_data_6 <= pe_array_RightShift_32Sx6U_32S_4_10_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_7
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_7
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_7
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP189
               mac_shifted_data_7 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP834
                     mac_shifted_data_7 <= pe_array_RightShift_32Sx6U_32S_4_446_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP737
                        mac_shifted_data_7 <= pe_array_RightShift_32Sx6U_32S_4_446_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP640
                           mac_shifted_data_7 <= pe_array_RightShift_32Sx6U_32S_4_529_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP543
                              mac_shifted_data_7 <= pe_array_RightShift_32Sx6U_32S_4_320_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP446
                                 mac_shifted_data_7 <= pe_array_RightShift_32Sx6U_32S_4_497_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP349
                                    mac_shifted_data_7 <= pe_array_RightShift_32Sx6U_32S_4_402_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP252
                                       mac_shifted_data_7 <= pe_array_RightShift_32Sx6U_32S_4_11_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_8
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_8
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_8
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP190
               mac_shifted_data_8 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP837
                     mac_shifted_data_8 <= pe_array_RightShift_32Sx6U_32S_4_450_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP740
                        mac_shifted_data_8 <= pe_array_RightShift_32Sx6U_32S_4_450_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP643
                           mac_shifted_data_8 <= pe_array_RightShift_32Sx6U_32S_4_531_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP546
                              mac_shifted_data_8 <= pe_array_RightShift_32Sx6U_32S_4_324_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP449
                                 mac_shifted_data_8 <= pe_array_RightShift_32Sx6U_32S_4_499_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP352
                                    mac_shifted_data_8 <= pe_array_RightShift_32Sx6U_32S_4_404_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP255
                                       mac_shifted_data_8 <= pe_array_RightShift_32Sx6U_32S_4_12_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_9
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_9
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_9
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP191
               mac_shifted_data_9 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP840
                     mac_shifted_data_9 <= pe_array_RightShift_32Sx6U_32S_4_428_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP743
                        mac_shifted_data_9 <= pe_array_RightShift_32Sx6U_32S_4_428_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP646
                           mac_shifted_data_9 <= pe_array_RightShift_32Sx6U_32S_4_520_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP549
                              mac_shifted_data_9 <= pe_array_RightShift_32Sx6U_32S_4_284_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP452
                                 mac_shifted_data_9 <= pe_array_RightShift_32Sx6U_32S_4_488_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP355
                                    mac_shifted_data_9 <= pe_array_RightShift_32Sx6U_32S_4_384_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP258
                                       mac_shifted_data_9 <= pe_array_RightShift_32Sx6U_32S_4_13_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_10
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_10
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_10
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP192
               mac_shifted_data_10 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP843
                     mac_shifted_data_10 <= pe_array_RightShift_32Sx6U_32S_4_436_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP746
                        mac_shifted_data_10 <= pe_array_RightShift_32Sx6U_32S_4_436_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP649
                           mac_shifted_data_10 <= pe_array_RightShift_32Sx6U_32S_4_524_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP552
                              mac_shifted_data_10 <= pe_array_RightShift_32Sx6U_32S_4_276_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP455
                                 mac_shifted_data_10 <= pe_array_RightShift_32Sx6U_32S_4_492_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP358
                                    mac_shifted_data_10 <= pe_array_RightShift_32Sx6U_32S_4_380_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP261
                                       mac_shifted_data_10 <= pe_array_RightShift_32Sx6U_32S_4_14_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_11
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_11
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_11
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP193
               mac_shifted_data_11 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP846
                     mac_shifted_data_11 <= pe_array_RightShift_32Sx6U_32S_4_444_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP749
                        mac_shifted_data_11 <= pe_array_RightShift_32Sx6U_32S_4_444_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP652
                           mac_shifted_data_11 <= pe_array_RightShift_32Sx6U_32S_4_528_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP555
                              mac_shifted_data_11 <= pe_array_RightShift_32Sx6U_32S_4_268_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP458
                                 mac_shifted_data_11 <= pe_array_RightShift_32Sx6U_32S_4_496_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP361
                                    mac_shifted_data_11 <= pe_array_RightShift_32Sx6U_32S_4_376_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP264
                                       mac_shifted_data_11 <= pe_array_RightShift_32Sx6U_32S_4_15_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_12
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_12
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_12
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP194
               mac_shifted_data_12 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP849
                     mac_shifted_data_12 <= pe_array_RightShift_32Sx6U_32S_4_468_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP752
                        mac_shifted_data_12 <= pe_array_RightShift_32Sx6U_32S_4_468_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP655
                           mac_shifted_data_12 <= pe_array_RightShift_32Sx6U_32S_4_540_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP558
                              mac_shifted_data_12 <= pe_array_RightShift_32Sx6U_32S_4_260_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP461
                                 mac_shifted_data_12 <= pe_array_RightShift_32Sx6U_32S_4_508_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP364
                                    mac_shifted_data_12 <= pe_array_RightShift_32Sx6U_32S_4_372_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP267
                                       mac_shifted_data_12 <= pe_array_RightShift_32Sx6U_32S_4_16_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_13
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_13
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_13
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP195
               mac_shifted_data_13 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP852
                     mac_shifted_data_13 <= pe_array_RightShift_32Sx6U_32S_4_464_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP755
                        mac_shifted_data_13 <= pe_array_RightShift_32Sx6U_32S_4_464_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP658
                           mac_shifted_data_13 <= pe_array_RightShift_32Sx6U_32S_4_538_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP561
                              mac_shifted_data_13 <= pe_array_RightShift_32Sx6U_32S_4_252_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP464
                                 mac_shifted_data_13 <= pe_array_RightShift_32Sx6U_32S_4_506_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP367
                                    mac_shifted_data_13 <= pe_array_RightShift_32Sx6U_32S_4_368_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP270
                                       mac_shifted_data_13 <= pe_array_RightShift_32Sx6U_32S_4_17_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_14
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_14
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_14
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP196
               mac_shifted_data_14 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP855
                     mac_shifted_data_14 <= pe_array_RightShift_32Sx6U_32S_4_460_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP758
                        mac_shifted_data_14 <= pe_array_RightShift_32Sx6U_32S_4_460_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP661
                           mac_shifted_data_14 <= pe_array_RightShift_32Sx6U_32S_4_536_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP564
                              mac_shifted_data_14 <= pe_array_RightShift_32Sx6U_32S_4_244_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP467
                                 mac_shifted_data_14 <= pe_array_RightShift_32Sx6U_32S_4_504_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP370
                                    mac_shifted_data_14 <= pe_array_RightShift_32Sx6U_32S_4_364_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP273
                                       mac_shifted_data_14 <= pe_array_RightShift_32Sx6U_32S_4_18_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_15
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_15
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_15
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP197
               mac_shifted_data_15 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP858
                     mac_shifted_data_15 <= pe_array_RightShift_32Sx6U_32S_4_456_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP761
                        mac_shifted_data_15 <= pe_array_RightShift_32Sx6U_32S_4_456_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP664
                           mac_shifted_data_15 <= pe_array_RightShift_32Sx6U_32S_4_534_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP567
                              mac_shifted_data_15 <= pe_array_RightShift_32Sx6U_32S_4_236_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP470
                                 mac_shifted_data_15 <= pe_array_RightShift_32Sx6U_32S_4_502_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP373
                                    mac_shifted_data_15 <= pe_array_RightShift_32Sx6U_32S_4_360_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP276
                                       mac_shifted_data_15 <= pe_array_RightShift_32Sx6U_32S_4_19_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_16
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_16
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_16
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP198
               mac_shifted_data_16 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP861
                     mac_shifted_data_16 <= pe_array_RightShift_32Sx6U_32S_4_452_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP764
                        mac_shifted_data_16 <= pe_array_RightShift_32Sx6U_32S_4_452_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP667
                           mac_shifted_data_16 <= pe_array_RightShift_32Sx6U_32S_4_532_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP570
                              mac_shifted_data_16 <= pe_array_RightShift_32Sx6U_32S_4_228_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP473
                                 mac_shifted_data_16 <= pe_array_RightShift_32Sx6U_32S_4_500_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP376
                                    mac_shifted_data_16 <= pe_array_RightShift_32Sx6U_32S_4_356_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP279
                                       mac_shifted_data_16 <= pe_array_RightShift_32Sx6U_32S_4_20_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_17
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_17
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_17
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP199
               mac_shifted_data_17 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP864
                     mac_shifted_data_17 <= pe_array_RightShift_32Sx6U_32S_4_454_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP767
                        mac_shifted_data_17 <= pe_array_RightShift_32Sx6U_32S_4_454_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP670
                           mac_shifted_data_17 <= pe_array_RightShift_32Sx6U_32S_4_533_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP573
                              mac_shifted_data_17 <= pe_array_RightShift_32Sx6U_32S_4_232_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP476
                                 mac_shifted_data_17 <= pe_array_RightShift_32Sx6U_32S_4_501_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP379
                                    mac_shifted_data_17 <= pe_array_RightShift_32Sx6U_32S_4_358_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP282
                                       mac_shifted_data_17 <= pe_array_RightShift_32Sx6U_32S_4_21_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_18
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_18
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_18
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP200
               mac_shifted_data_18 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP867
                     mac_shifted_data_18 <= pe_array_RightShift_32Sx6U_32S_4_458_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP770
                        mac_shifted_data_18 <= pe_array_RightShift_32Sx6U_32S_4_458_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP673
                           mac_shifted_data_18 <= pe_array_RightShift_32Sx6U_32S_4_535_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP576
                              mac_shifted_data_18 <= pe_array_RightShift_32Sx6U_32S_4_240_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP479
                                 mac_shifted_data_18 <= pe_array_RightShift_32Sx6U_32S_4_503_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP382
                                    mac_shifted_data_18 <= pe_array_RightShift_32Sx6U_32S_4_362_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP285
                                       mac_shifted_data_18 <= pe_array_RightShift_32Sx6U_32S_4_22_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_19
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_19
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_19
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP201
               mac_shifted_data_19 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP870
                     mac_shifted_data_19 <= pe_array_RightShift_32Sx6U_32S_4_462_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP773
                        mac_shifted_data_19 <= pe_array_RightShift_32Sx6U_32S_4_462_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP676
                           mac_shifted_data_19 <= pe_array_RightShift_32Sx6U_32S_4_537_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP579
                              mac_shifted_data_19 <= pe_array_RightShift_32Sx6U_32S_4_248_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP482
                                 mac_shifted_data_19 <= pe_array_RightShift_32Sx6U_32S_4_505_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP385
                                    mac_shifted_data_19 <= pe_array_RightShift_32Sx6U_32S_4_366_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP288
                                       mac_shifted_data_19 <= pe_array_RightShift_32Sx6U_32S_4_23_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_20
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_20
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_20
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP202
               mac_shifted_data_20 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP873
                     mac_shifted_data_20 <= pe_array_RightShift_32Sx6U_32S_4_466_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP776
                        mac_shifted_data_20 <= pe_array_RightShift_32Sx6U_32S_4_466_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP679
                           mac_shifted_data_20 <= pe_array_RightShift_32Sx6U_32S_4_539_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP582
                              mac_shifted_data_20 <= pe_array_RightShift_32Sx6U_32S_4_256_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP485
                                 mac_shifted_data_20 <= pe_array_RightShift_32Sx6U_32S_4_507_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP388
                                    mac_shifted_data_20 <= pe_array_RightShift_32Sx6U_32S_4_370_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP291
                                       mac_shifted_data_20 <= pe_array_RightShift_32Sx6U_32S_4_24_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_21
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_21
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_21
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP203
               mac_shifted_data_21 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP876
                     mac_shifted_data_21 <= pe_array_RightShift_32Sx6U_32S_4_448_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP779
                        mac_shifted_data_21 <= pe_array_RightShift_32Sx6U_32S_4_448_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP682
                           mac_shifted_data_21 <= pe_array_RightShift_32Sx6U_32S_4_530_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP585
                              mac_shifted_data_21 <= pe_array_RightShift_32Sx6U_32S_4_264_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP488
                                 mac_shifted_data_21 <= pe_array_RightShift_32Sx6U_32S_4_498_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP391
                                    mac_shifted_data_21 <= pe_array_RightShift_32Sx6U_32S_4_374_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP294
                                       mac_shifted_data_21 <= pe_array_RightShift_32Sx6U_32S_4_25_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_22
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_22
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_22
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP204
               mac_shifted_data_22 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP879
                     mac_shifted_data_22 <= pe_array_RightShift_32Sx6U_32S_4_440_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP782
                        mac_shifted_data_22 <= pe_array_RightShift_32Sx6U_32S_4_440_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP685
                           mac_shifted_data_22 <= pe_array_RightShift_32Sx6U_32S_4_526_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP588
                              mac_shifted_data_22 <= pe_array_RightShift_32Sx6U_32S_4_272_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP491
                                 mac_shifted_data_22 <= pe_array_RightShift_32Sx6U_32S_4_494_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP394
                                    mac_shifted_data_22 <= pe_array_RightShift_32Sx6U_32S_4_378_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP297
                                       mac_shifted_data_22 <= pe_array_RightShift_32Sx6U_32S_4_26_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_23
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_23
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_23
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP205
               mac_shifted_data_23 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP882
                     mac_shifted_data_23 <= pe_array_RightShift_32Sx6U_32S_4_432_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP785
                        mac_shifted_data_23 <= pe_array_RightShift_32Sx6U_32S_4_432_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP688
                           mac_shifted_data_23 <= pe_array_RightShift_32Sx6U_32S_4_522_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP591
                              mac_shifted_data_23 <= pe_array_RightShift_32Sx6U_32S_4_280_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP494
                                 mac_shifted_data_23 <= pe_array_RightShift_32Sx6U_32S_4_490_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP397
                                    mac_shifted_data_23 <= pe_array_RightShift_32Sx6U_32S_4_382_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP300
                                       mac_shifted_data_23 <= pe_array_RightShift_32Sx6U_32S_4_27_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_24
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_24
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_24
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP206
               mac_shifted_data_24 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP885
                     mac_shifted_data_24 <= pe_array_RightShift_32Sx6U_32S_4_424_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP788
                        mac_shifted_data_24 <= pe_array_RightShift_32Sx6U_32S_4_424_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP691
                           mac_shifted_data_24 <= pe_array_RightShift_32Sx6U_32S_4_518_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP594
                              mac_shifted_data_24 <= pe_array_RightShift_32Sx6U_32S_4_288_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP497
                                 mac_shifted_data_24 <= pe_array_RightShift_32Sx6U_32S_4_486_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP400
                                    mac_shifted_data_24 <= pe_array_RightShift_32Sx6U_32S_4_386_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP303
                                       mac_shifted_data_24 <= pe_array_RightShift_32Sx6U_32S_4_28_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_25
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_25
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_25
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP207
               mac_shifted_data_25 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP888
                     mac_shifted_data_25 <= pe_array_RightShift_32Sx6U_32S_4_470_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP791
                        mac_shifted_data_25 <= pe_array_RightShift_32Sx6U_32S_4_470_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP694
                           mac_shifted_data_25 <= pe_array_RightShift_32Sx6U_32S_4_541_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP597
                              mac_shifted_data_25 <= pe_array_RightShift_32Sx6U_32S_4_328_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP500
                                 mac_shifted_data_25 <= pe_array_RightShift_32Sx6U_32S_4_509_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP403
                                    mac_shifted_data_25 <= pe_array_RightShift_32Sx6U_32S_4_406_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP306
                                       mac_shifted_data_25 <= pe_array_RightShift_32Sx6U_32S_4_29_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_26
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_26
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_26
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP208
               mac_shifted_data_26 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP891
                     mac_shifted_data_26 <= pe_array_RightShift_32Sx6U_32S_4_472_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP794
                        mac_shifted_data_26 <= pe_array_RightShift_32Sx6U_32S_4_472_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP697
                           mac_shifted_data_26 <= pe_array_RightShift_32Sx6U_32S_4_542_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP600
                              mac_shifted_data_26 <= pe_array_RightShift_32Sx6U_32S_4_332_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP503
                                 mac_shifted_data_26 <= pe_array_RightShift_32Sx6U_32S_4_510_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP406
                                    mac_shifted_data_26 <= pe_array_RightShift_32Sx6U_32S_4_408_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP309
                                       mac_shifted_data_26 <= pe_array_RightShift_32Sx6U_32S_4_30_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_27
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_27
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_27
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP209
               mac_shifted_data_27 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP894
                     mac_shifted_data_27 <= pe_array_RightShift_32Sx6U_32S_4_474_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP797
                        mac_shifted_data_27 <= pe_array_RightShift_32Sx6U_32S_4_474_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP700
                           mac_shifted_data_27 <= pe_array_RightShift_32Sx6U_32S_4_543_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP603
                              mac_shifted_data_27 <= pe_array_RightShift_32Sx6U_32S_4_336_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP506
                                 mac_shifted_data_27 <= pe_array_RightShift_32Sx6U_32S_4_511_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP409
                                    mac_shifted_data_27 <= pe_array_RightShift_32Sx6U_32S_4_410_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP312
                                       mac_shifted_data_27 <= pe_array_RightShift_32Sx6U_32S_4_31_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_28
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_28
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_28
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP210
               mac_shifted_data_28 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP897
                     mac_shifted_data_28 <= pe_array_RightShift_32Sx6U_32S_4_476_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP800
                        mac_shifted_data_28 <= pe_array_RightShift_32Sx6U_32S_4_476_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP703
                           mac_shifted_data_28 <= pe_array_RightShift_32Sx6U_32S_4_544_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP606
                              mac_shifted_data_28 <= pe_array_RightShift_32Sx6U_32S_4_340_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP509
                                 mac_shifted_data_28 <= pe_array_RightShift_32Sx6U_32S_4_512_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP412
                                    mac_shifted_data_28 <= pe_array_RightShift_32Sx6U_32S_4_412_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP315
                                       mac_shifted_data_28 <= pe_array_RightShift_32Sx6U_32S_4_32_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_29
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_29
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_29
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP211
               mac_shifted_data_29 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP900
                     mac_shifted_data_29 <= pe_array_RightShift_32Sx6U_32S_4_478_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP803
                        mac_shifted_data_29 <= pe_array_RightShift_32Sx6U_32S_4_478_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP706
                           mac_shifted_data_29 <= pe_array_RightShift_32Sx6U_32S_4_545_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP609
                              mac_shifted_data_29 <= pe_array_RightShift_32Sx6U_32S_4_344_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP512
                                 mac_shifted_data_29 <= pe_array_RightShift_32Sx6U_32S_4_513_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP415
                                    mac_shifted_data_29 <= pe_array_RightShift_32Sx6U_32S_4_414_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP318
                                       mac_shifted_data_29 <= pe_array_RightShift_32Sx6U_32S_4_33_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_30
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_30
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_30
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP212
               mac_shifted_data_30 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP903
                     mac_shifted_data_30 <= pe_array_RightShift_32Sx6U_32S_4_480_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP806
                        mac_shifted_data_30 <= pe_array_RightShift_32Sx6U_32S_4_480_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP709
                           mac_shifted_data_30 <= pe_array_RightShift_32Sx6U_32S_4_546_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP612
                              mac_shifted_data_30 <= pe_array_RightShift_32Sx6U_32S_4_348_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP515
                                 mac_shifted_data_30 <= pe_array_RightShift_32Sx6U_32S_4_514_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP418
                                    mac_shifted_data_30 <= pe_array_RightShift_32Sx6U_32S_4_416_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP321
                                       mac_shifted_data_30 <= pe_array_RightShift_32Sx6U_32S_4_34_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_mac_shifted_data_31
         // Sharing or Control mux
         // Sharing/Controlling 9 operation(s) on drive_mac_shifted_data_31
         // at: pe_array.h:264:24
         // at: pe_array.h:167:25
         // at: pe_array.h:175:29
         // at: pe_array.h:183:29
         // at: pe_array.h:191:29
         // at: pe_array.h:199:29
         // at: pe_array.h:207:29
         // at: pe_array.h:215:29
         // at: pe_array.h:223:29
         always @(posedge clk or negedge rstn)
          begin :drive_mac_shifted_data_31
            if (rstn == 1'b0) begin
               // op:_shift_mac_data/OP213
               mac_shifted_data_31 <= 32'd0000000000;
            end
            else begin
               case (clear_1d) 

                  1'b1:                   begin
                     // op:_shift_mac_data/OP906
                     mac_shifted_data_31 <= pe_array_RightShift_32Sx6U_32S_4_482_out1;
                  end
                  
                  1'b0:                   begin
                     if (clear_2d) begin
                        // op:_shift_mac_data/OP809
                        mac_shifted_data_31 <= pe_array_RightShift_32Sx6U_32S_4_482_out1;
                     end
                     else begin
                        if (clear_3d) begin
                           // op:_shift_mac_data/OP712
                           mac_shifted_data_31 <= pe_array_RightShift_32Sx6U_32S_4_547_out1;
                        end
                        else begin
                           if (clear_4d) begin
                              // op:_shift_mac_data/OP615
                              mac_shifted_data_31 <= pe_array_RightShift_32Sx6U_32S_4_352_out1;
                           end
                           else begin
                              if (clear_5d) begin
                                 // op:_shift_mac_data/OP518
                                 mac_shifted_data_31 <= pe_array_RightShift_32Sx6U_32S_4_515_out1;
                              end
                              else begin
                                 if (clear_6d) begin
                                    // op:_shift_mac_data/OP421
                                    mac_shifted_data_31 <= pe_array_RightShift_32Sx6U_32S_4_418_out1;
                                 end
                                 else begin
                                    if (clear_7d) begin
                                       // op:_shift_mac_data/OP324
                                       mac_shifted_data_31 <= pe_array_RightShift_32Sx6U_32S_4_35_out1;
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_420_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_420_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_0 or mac_acc_1_0)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_420_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_420_in2 = mac_acc_0_0;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_420_in2 = mac_acc_1_0;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_420
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_420_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_420_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_420_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_422_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_422_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_1 or mac_acc_1_1)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_422_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_422_in2 = mac_acc_0_1;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_422_in2 = mac_acc_1_1;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_422
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_422_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_422_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_422_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_426_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_426_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_2 or mac_acc_1_2)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_426_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_426_in2 = mac_acc_0_2;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_426_in2 = mac_acc_1_2;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_426
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_426_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_426_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_426_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_430_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_430_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_3 or mac_acc_1_3)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_430_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_430_in2 = mac_acc_0_3;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_430_in2 = mac_acc_1_3;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_430
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_430_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_430_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_430_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_434_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_434_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_4 or mac_acc_1_4)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_434_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_434_in2 = mac_acc_0_4;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_434_in2 = mac_acc_1_4;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_434
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_434_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_434_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_434_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_438_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_438_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_5 or mac_acc_1_5)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_438_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_438_in2 = mac_acc_0_5;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_438_in2 = mac_acc_1_5;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_438
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_438_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_438_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_438_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_442_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_442_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_6 or mac_acc_1_6)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_442_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_442_in2 = mac_acc_0_6;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_442_in2 = mac_acc_1_6;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_442
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_442_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_442_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_442_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_446_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_446_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_7 or mac_acc_1_7)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_446_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_446_in2 = mac_acc_0_7;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_446_in2 = mac_acc_1_7;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_446
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_446_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_446_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_446_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_450_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_450_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_8 or mac_acc_1_8)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_450_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_450_in2 = mac_acc_0_8;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_450_in2 = mac_acc_1_8;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_450
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_450_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_450_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_450_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_428_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_428_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_9 or mac_acc_1_9)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_428_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_428_in2 = mac_acc_0_9;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_428_in2 = mac_acc_1_9;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_428
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_428_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_428_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_428_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_436_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_436_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_10 or mac_acc_1_10)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_436_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_436_in2 = mac_acc_0_10;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_436_in2 = mac_acc_1_10;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_436
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_436_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_436_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_436_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_444_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_444_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_11 or mac_acc_1_11)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_444_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_444_in2 = mac_acc_0_11;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_444_in2 = mac_acc_1_11;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_444
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_444_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_444_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_444_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_468_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_468_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_12 or mac_acc_1_12)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_468_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_468_in2 = mac_acc_0_12;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_468_in2 = mac_acc_1_12;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_468
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_468_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_468_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_468_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_464_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_464_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_13 or mac_acc_1_13)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_464_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_464_in2 = mac_acc_0_13;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_464_in2 = mac_acc_1_13;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_464
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_464_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_464_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_464_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_460_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_460_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_14 or mac_acc_1_14)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_460_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_460_in2 = mac_acc_0_14;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_460_in2 = mac_acc_1_14;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_460
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_460_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_460_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_460_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_456_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_456_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_15 or mac_acc_1_15)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_456_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_456_in2 = mac_acc_0_15;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_456_in2 = mac_acc_1_15;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_456
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_456_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_456_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_456_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_452_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_452_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_16 or mac_acc_1_16)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_452_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_452_in2 = mac_acc_0_16;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_452_in2 = mac_acc_1_16;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_452
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_452_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_452_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_452_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_454_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_454_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_17 or mac_acc_1_17)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_454_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_454_in2 = mac_acc_0_17;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_454_in2 = mac_acc_1_17;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_454
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_454_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_454_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_454_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_458_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_458_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_18 or mac_acc_1_18)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_458_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_458_in2 = mac_acc_0_18;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_458_in2 = mac_acc_1_18;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_458
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_458_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_458_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_458_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_462_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_462_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_19 or mac_acc_1_19)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_462_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_462_in2 = mac_acc_0_19;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_462_in2 = mac_acc_1_19;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_462
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_462_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_462_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_462_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_466_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_466_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_20 or mac_acc_1_20)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_466_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_466_in2 = mac_acc_0_20;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_466_in2 = mac_acc_1_20;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_466
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_466_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_466_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_466_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_448_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_448_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_21 or mac_acc_1_21)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_448_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_448_in2 = mac_acc_0_21;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_448_in2 = mac_acc_1_21;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_448
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_448_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_448_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_448_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_440_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_440_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_22 or mac_acc_1_22)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_440_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_440_in2 = mac_acc_0_22;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_440_in2 = mac_acc_1_22;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_440
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_440_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_440_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_440_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_432_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_432_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_23 or mac_acc_1_23)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_432_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_432_in2 = mac_acc_0_23;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_432_in2 = mac_acc_1_23;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_432
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_432_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_432_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_432_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_424_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_424_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_24 or mac_acc_1_24)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_424_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_424_in2 = mac_acc_0_24;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_424_in2 = mac_acc_1_24;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_424
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_424_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_424_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_424_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_470_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_470_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_25 or mac_acc_1_25)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_470_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_470_in2 = mac_acc_0_25;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_470_in2 = mac_acc_1_25;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_470
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_470_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_470_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_470_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_472_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_472_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_26 or mac_acc_1_26)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_472_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_472_in2 = mac_acc_0_26;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_472_in2 = mac_acc_1_26;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_472
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_472_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_472_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_472_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_474_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_474_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_27 or mac_acc_1_27)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_474_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_474_in2 = mac_acc_0_27;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_474_in2 = mac_acc_1_27;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_474
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_474_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_474_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_474_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_476_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_476_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_28 or mac_acc_1_28)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_476_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_476_in2 = mac_acc_0_28;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_476_in2 = mac_acc_1_28;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_476
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_476_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_476_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_476_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_478_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_478_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_29 or mac_acc_1_29)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_478_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_478_in2 = mac_acc_0_29;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_478_in2 = mac_acc_1_29;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_478
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_478_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_478_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_478_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_480_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_480_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_30 or mac_acc_1_30)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_480_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_480_in2 = mac_acc_0_30;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_480_in2 = mac_acc_1_30;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_480
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_480_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_480_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_480_in2} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_array_RightShift_32Sx6U_32S_4_482_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pe_array_RightShift_32Sx6U_32S_4_482_in2
         // at: pe_array.h:183:40
         always @(clear_1d or mac_acc_0_31 or mac_acc_1_31)
          begin :drive_pe_array_RightShift_32Sx6U_32S_4_482_in2
            if (clear_1d) begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_482_in2 = mac_acc_0_31;
            end
            else begin
               // op:_shift_mac_data/OP11
               pe_array_RightShift_32Sx6U_32S_4_482_in2 = mac_acc_1_31;
            end
         end

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_482
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 2 operation(s)
         // at: pe_array.h:183:51
         // at: pe_array.h:175:51
         assign pe_array_RightShift_32Sx6U_32S_4_482_out1 = {{ 63 {pe_array_RightShift_32Sx6U_32S_4_482_in2[31]}}, pe_array_RightShift_32Sx6U_32S_4_482_in2} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_516
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_516_out1 = {{ 63 {mac_acc_2_0[31]}}, mac_acc_2_0} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_517
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_517_out1 = {{ 63 {mac_acc_2_1[31]}}, mac_acc_2_1} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_519
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_519_out1 = {{ 63 {mac_acc_2_2[31]}}, mac_acc_2_2} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_521
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_521_out1 = {{ 63 {mac_acc_2_3[31]}}, mac_acc_2_3} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_523
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_523_out1 = {{ 63 {mac_acc_2_4[31]}}, mac_acc_2_4} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_525
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_525_out1 = {{ 63 {mac_acc_2_5[31]}}, mac_acc_2_5} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_527
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_527_out1 = {{ 63 {mac_acc_2_6[31]}}, mac_acc_2_6} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_529
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_529_out1 = {{ 63 {mac_acc_2_7[31]}}, mac_acc_2_7} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_531
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_531_out1 = {{ 63 {mac_acc_2_8[31]}}, mac_acc_2_8} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_520
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_520_out1 = {{ 63 {mac_acc_2_9[31]}}, mac_acc_2_9} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_524
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_524_out1 = {{ 63 {mac_acc_2_10[31]}}, mac_acc_2_10} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_528
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_528_out1 = {{ 63 {mac_acc_2_11[31]}}, mac_acc_2_11} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_540
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_540_out1 = {{ 63 {mac_acc_2_12[31]}}, mac_acc_2_12} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_538
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_538_out1 = {{ 63 {mac_acc_2_13[31]}}, mac_acc_2_13} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_536
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_536_out1 = {{ 63 {mac_acc_2_14[31]}}, mac_acc_2_14} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_534
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_534_out1 = {{ 63 {mac_acc_2_15[31]}}, mac_acc_2_15} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_532
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_532_out1 = {{ 63 {mac_acc_2_16[31]}}, mac_acc_2_16} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_533
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_533_out1 = {{ 63 {mac_acc_2_17[31]}}, mac_acc_2_17} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_535
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_535_out1 = {{ 63 {mac_acc_2_18[31]}}, mac_acc_2_18} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_537
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_537_out1 = {{ 63 {mac_acc_2_19[31]}}, mac_acc_2_19} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_539
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_539_out1 = {{ 63 {mac_acc_2_20[31]}}, mac_acc_2_20} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_530
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_530_out1 = {{ 63 {mac_acc_2_21[31]}}, mac_acc_2_21} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_526
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_526_out1 = {{ 63 {mac_acc_2_22[31]}}, mac_acc_2_22} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_522
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_522_out1 = {{ 63 {mac_acc_2_23[31]}}, mac_acc_2_23} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_518
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_518_out1 = {{ 63 {mac_acc_2_24[31]}}, mac_acc_2_24} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_541
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_541_out1 = {{ 63 {mac_acc_2_25[31]}}, mac_acc_2_25} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_542
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_542_out1 = {{ 63 {mac_acc_2_26[31]}}, mac_acc_2_26} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_543
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_543_out1 = {{ 63 {mac_acc_2_27[31]}}, mac_acc_2_27} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_544
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_544_out1 = {{ 63 {mac_acc_2_28[31]}}, mac_acc_2_28} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_545
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_545_out1 = {{ 63 {mac_acc_2_29[31]}}, mac_acc_2_29} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_546
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_546_out1 = {{ 63 {mac_acc_2_30[31]}}, mac_acc_2_30} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_547
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:191:51
         assign pe_array_RightShift_32Sx6U_32S_4_547_out1 = {{ 63 {mac_acc_2_31[31]}}, mac_acc_2_31} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_292
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_292_out1 = {{ 63 {mac_acc_3_0[31]}}, mac_acc_3_0} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_296
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_296_out1 = {{ 63 {mac_acc_3_1[31]}}, mac_acc_3_1} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_300
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_300_out1 = {{ 63 {mac_acc_3_2[31]}}, mac_acc_3_2} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_304
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_304_out1 = {{ 63 {mac_acc_3_3[31]}}, mac_acc_3_3} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_308
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_308_out1 = {{ 63 {mac_acc_3_4[31]}}, mac_acc_3_4} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_312
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_312_out1 = {{ 63 {mac_acc_3_5[31]}}, mac_acc_3_5} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_316
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_316_out1 = {{ 63 {mac_acc_3_6[31]}}, mac_acc_3_6} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_320
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_320_out1 = {{ 63 {mac_acc_3_7[31]}}, mac_acc_3_7} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_324
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_324_out1 = {{ 63 {mac_acc_3_8[31]}}, mac_acc_3_8} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_284
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_284_out1 = {{ 63 {mac_acc_3_9[31]}}, mac_acc_3_9} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_276
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_276_out1 = {{ 63 {mac_acc_3_10[31]}}, mac_acc_3_10} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_268
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_268_out1 = {{ 63 {mac_acc_3_11[31]}}, mac_acc_3_11} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_260
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_260_out1 = {{ 63 {mac_acc_3_12[31]}}, mac_acc_3_12} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_252
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_252_out1 = {{ 63 {mac_acc_3_13[31]}}, mac_acc_3_13} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_244
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_244_out1 = {{ 63 {mac_acc_3_14[31]}}, mac_acc_3_14} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_236
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_236_out1 = {{ 63 {mac_acc_3_15[31]}}, mac_acc_3_15} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_228
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_228_out1 = {{ 63 {mac_acc_3_16[31]}}, mac_acc_3_16} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_232
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_232_out1 = {{ 63 {mac_acc_3_17[31]}}, mac_acc_3_17} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_240
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_240_out1 = {{ 63 {mac_acc_3_18[31]}}, mac_acc_3_18} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_248
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_248_out1 = {{ 63 {mac_acc_3_19[31]}}, mac_acc_3_19} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_256
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_256_out1 = {{ 63 {mac_acc_3_20[31]}}, mac_acc_3_20} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_264
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_264_out1 = {{ 63 {mac_acc_3_21[31]}}, mac_acc_3_21} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_272
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_272_out1 = {{ 63 {mac_acc_3_22[31]}}, mac_acc_3_22} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_280
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_280_out1 = {{ 63 {mac_acc_3_23[31]}}, mac_acc_3_23} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_288
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_288_out1 = {{ 63 {mac_acc_3_24[31]}}, mac_acc_3_24} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_328
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_328_out1 = {{ 63 {mac_acc_3_25[31]}}, mac_acc_3_25} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_332
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_332_out1 = {{ 63 {mac_acc_3_26[31]}}, mac_acc_3_26} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_336
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_336_out1 = {{ 63 {mac_acc_3_27[31]}}, mac_acc_3_27} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_340
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_340_out1 = {{ 63 {mac_acc_3_28[31]}}, mac_acc_3_28} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_344
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_344_out1 = {{ 63 {mac_acc_3_29[31]}}, mac_acc_3_29} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_348
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_348_out1 = {{ 63 {mac_acc_3_30[31]}}, mac_acc_3_30} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_352
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:199:51
         assign pe_array_RightShift_32Sx6U_32S_4_352_out1 = {{ 63 {mac_acc_3_31[31]}}, mac_acc_3_31} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_484
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_484_out1 = {{ 63 {mac_acc_4_0[31]}}, mac_acc_4_0} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_485
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_485_out1 = {{ 63 {mac_acc_4_1[31]}}, mac_acc_4_1} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_487
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_487_out1 = {{ 63 {mac_acc_4_2[31]}}, mac_acc_4_2} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_489
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_489_out1 = {{ 63 {mac_acc_4_3[31]}}, mac_acc_4_3} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_491
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_491_out1 = {{ 63 {mac_acc_4_4[31]}}, mac_acc_4_4} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_493
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_493_out1 = {{ 63 {mac_acc_4_5[31]}}, mac_acc_4_5} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_495
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_495_out1 = {{ 63 {mac_acc_4_6[31]}}, mac_acc_4_6} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_497
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_497_out1 = {{ 63 {mac_acc_4_7[31]}}, mac_acc_4_7} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_499
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_499_out1 = {{ 63 {mac_acc_4_8[31]}}, mac_acc_4_8} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_488
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_488_out1 = {{ 63 {mac_acc_4_9[31]}}, mac_acc_4_9} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_492
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_492_out1 = {{ 63 {mac_acc_4_10[31]}}, mac_acc_4_10} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_496
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_496_out1 = {{ 63 {mac_acc_4_11[31]}}, mac_acc_4_11} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_508
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_508_out1 = {{ 63 {mac_acc_4_12[31]}}, mac_acc_4_12} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_506
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_506_out1 = {{ 63 {mac_acc_4_13[31]}}, mac_acc_4_13} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_504
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_504_out1 = {{ 63 {mac_acc_4_14[31]}}, mac_acc_4_14} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_502
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_502_out1 = {{ 63 {mac_acc_4_15[31]}}, mac_acc_4_15} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_500
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_500_out1 = {{ 63 {mac_acc_4_16[31]}}, mac_acc_4_16} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_501
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_501_out1 = {{ 63 {mac_acc_4_17[31]}}, mac_acc_4_17} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_503
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_503_out1 = {{ 63 {mac_acc_4_18[31]}}, mac_acc_4_18} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_505
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_505_out1 = {{ 63 {mac_acc_4_19[31]}}, mac_acc_4_19} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_507
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_507_out1 = {{ 63 {mac_acc_4_20[31]}}, mac_acc_4_20} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_498
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_498_out1 = {{ 63 {mac_acc_4_21[31]}}, mac_acc_4_21} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_494
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_494_out1 = {{ 63 {mac_acc_4_22[31]}}, mac_acc_4_22} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_490
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_490_out1 = {{ 63 {mac_acc_4_23[31]}}, mac_acc_4_23} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_486
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_486_out1 = {{ 63 {mac_acc_4_24[31]}}, mac_acc_4_24} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_509
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_509_out1 = {{ 63 {mac_acc_4_25[31]}}, mac_acc_4_25} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_510
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_510_out1 = {{ 63 {mac_acc_4_26[31]}}, mac_acc_4_26} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_511
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_511_out1 = {{ 63 {mac_acc_4_27[31]}}, mac_acc_4_27} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_512
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_512_out1 = {{ 63 {mac_acc_4_28[31]}}, mac_acc_4_28} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_513
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_513_out1 = {{ 63 {mac_acc_4_29[31]}}, mac_acc_4_29} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_514
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_514_out1 = {{ 63 {mac_acc_4_30[31]}}, mac_acc_4_30} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_515
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:207:51
         assign pe_array_RightShift_32Sx6U_32S_4_515_out1 = {{ 63 {mac_acc_4_31[31]}}, mac_acc_4_31} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_388
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_388_out1 = {{ 63 {mac_acc_5_0[31]}}, mac_acc_5_0} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_390
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_390_out1 = {{ 63 {mac_acc_5_1[31]}}, mac_acc_5_1} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_392
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_392_out1 = {{ 63 {mac_acc_5_2[31]}}, mac_acc_5_2} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_394
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_394_out1 = {{ 63 {mac_acc_5_3[31]}}, mac_acc_5_3} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_396
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_396_out1 = {{ 63 {mac_acc_5_4[31]}}, mac_acc_5_4} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_398
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_398_out1 = {{ 63 {mac_acc_5_5[31]}}, mac_acc_5_5} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_400
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_400_out1 = {{ 63 {mac_acc_5_6[31]}}, mac_acc_5_6} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_402
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_402_out1 = {{ 63 {mac_acc_5_7[31]}}, mac_acc_5_7} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_404
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_404_out1 = {{ 63 {mac_acc_5_8[31]}}, mac_acc_5_8} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_384
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_384_out1 = {{ 63 {mac_acc_5_9[31]}}, mac_acc_5_9} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_380
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_380_out1 = {{ 63 {mac_acc_5_10[31]}}, mac_acc_5_10} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_376
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_376_out1 = {{ 63 {mac_acc_5_11[31]}}, mac_acc_5_11} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_372
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_372_out1 = {{ 63 {mac_acc_5_12[31]}}, mac_acc_5_12} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_368
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_368_out1 = {{ 63 {mac_acc_5_13[31]}}, mac_acc_5_13} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_364
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_364_out1 = {{ 63 {mac_acc_5_14[31]}}, mac_acc_5_14} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_360
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_360_out1 = {{ 63 {mac_acc_5_15[31]}}, mac_acc_5_15} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_356
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_356_out1 = {{ 63 {mac_acc_5_16[31]}}, mac_acc_5_16} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_358
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_358_out1 = {{ 63 {mac_acc_5_17[31]}}, mac_acc_5_17} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_362
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_362_out1 = {{ 63 {mac_acc_5_18[31]}}, mac_acc_5_18} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_366
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_366_out1 = {{ 63 {mac_acc_5_19[31]}}, mac_acc_5_19} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_370
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_370_out1 = {{ 63 {mac_acc_5_20[31]}}, mac_acc_5_20} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_374
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_374_out1 = {{ 63 {mac_acc_5_21[31]}}, mac_acc_5_21} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_378
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_378_out1 = {{ 63 {mac_acc_5_22[31]}}, mac_acc_5_22} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_382
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_382_out1 = {{ 63 {mac_acc_5_23[31]}}, mac_acc_5_23} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_386
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_386_out1 = {{ 63 {mac_acc_5_24[31]}}, mac_acc_5_24} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_406
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_406_out1 = {{ 63 {mac_acc_5_25[31]}}, mac_acc_5_25} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_408
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_408_out1 = {{ 63 {mac_acc_5_26[31]}}, mac_acc_5_26} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_410
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_410_out1 = {{ 63 {mac_acc_5_27[31]}}, mac_acc_5_27} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_412
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_412_out1 = {{ 63 {mac_acc_5_28[31]}}, mac_acc_5_28} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_414
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_414_out1 = {{ 63 {mac_acc_5_29[31]}}, mac_acc_5_29} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_416
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_416_out1 = {{ 63 {mac_acc_5_30[31]}}, mac_acc_5_30} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_418
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:215:51
         assign pe_array_RightShift_32Sx6U_32S_4_418_out1 = {{ 63 {mac_acc_5_31[31]}}, mac_acc_5_31} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_4
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_4_out1 = {{ 63 {mac_acc_6_0[31]}}, mac_acc_6_0} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_5
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_5_out1 = {{ 63 {mac_acc_6_1[31]}}, mac_acc_6_1} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_6
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_6_out1 = {{ 63 {mac_acc_6_2[31]}}, mac_acc_6_2} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_7
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_7_out1 = {{ 63 {mac_acc_6_3[31]}}, mac_acc_6_3} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_8
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_8_out1 = {{ 63 {mac_acc_6_4[31]}}, mac_acc_6_4} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_9
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_9_out1 = {{ 63 {mac_acc_6_5[31]}}, mac_acc_6_5} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_10
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_10_out1 = {{ 63 {mac_acc_6_6[31]}}, mac_acc_6_6} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_11
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_11_out1 = {{ 63 {mac_acc_6_7[31]}}, mac_acc_6_7} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_12
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_12_out1 = {{ 63 {mac_acc_6_8[31]}}, mac_acc_6_8} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_13
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_13_out1 = {{ 63 {mac_acc_6_9[31]}}, mac_acc_6_9} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_14
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_14_out1 = {{ 63 {mac_acc_6_10[31]}}, mac_acc_6_10} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_15
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_15_out1 = {{ 63 {mac_acc_6_11[31]}}, mac_acc_6_11} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_16
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_16_out1 = {{ 63 {mac_acc_6_12[31]}}, mac_acc_6_12} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_17
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_17_out1 = {{ 63 {mac_acc_6_13[31]}}, mac_acc_6_13} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_18
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_18_out1 = {{ 63 {mac_acc_6_14[31]}}, mac_acc_6_14} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_19
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_19_out1 = {{ 63 {mac_acc_6_15[31]}}, mac_acc_6_15} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_20
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_20_out1 = {{ 63 {mac_acc_6_16[31]}}, mac_acc_6_16} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_21
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_21_out1 = {{ 63 {mac_acc_6_17[31]}}, mac_acc_6_17} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_22
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_22_out1 = {{ 63 {mac_acc_6_18[31]}}, mac_acc_6_18} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_23
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_23_out1 = {{ 63 {mac_acc_6_19[31]}}, mac_acc_6_19} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_24
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_24_out1 = {{ 63 {mac_acc_6_20[31]}}, mac_acc_6_20} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_25
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_25_out1 = {{ 63 {mac_acc_6_21[31]}}, mac_acc_6_21} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_26
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_26_out1 = {{ 63 {mac_acc_6_22[31]}}, mac_acc_6_22} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_27
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_27_out1 = {{ 63 {mac_acc_6_23[31]}}, mac_acc_6_23} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_28
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_28_out1 = {{ 63 {mac_acc_6_24[31]}}, mac_acc_6_24} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_29
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_29_out1 = {{ 63 {mac_acc_6_25[31]}}, mac_acc_6_25} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_30
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_30_out1 = {{ 63 {mac_acc_6_26[31]}}, mac_acc_6_26} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_31
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_31_out1 = {{ 63 {mac_acc_6_27[31]}}, mac_acc_6_27} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_32
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_32_out1 = {{ 63 {mac_acc_6_28[31]}}, mac_acc_6_28} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_33
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_33_out1 = {{ 63 {mac_acc_6_29[31]}}, mac_acc_6_29} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_34
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_34_out1 = {{ 63 {mac_acc_6_30[31]}}, mac_acc_6_30} >> mac_shift_len[5:0];

         // rtl_instance:pe_array/pe_array_RightShift_32Sx6U_32S_4_35
         // Resource=pe_array_RightShift_32Sx6U_32S_4, Function=rs : Inputs=32S,6 Outputs=32S
         // Implements 1 operation(s)
         // at: pe_array.h:223:51
         assign pe_array_RightShift_32Sx6U_32S_4_35_out1 = {{ 63 {mac_acc_6_31[31]}}, mac_acc_6_31} >> mac_shift_len[5:0];

         // rtl_process:pe_array/drive_pe_data_valid
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_pe_data_valid
         // at: pe_array.h:154:7
         // at: pe_array.h:160:7
         always @(posedge clk or negedge rstn)
          begin :drive_pe_data_valid
            if (rstn == 1'b0) begin
               // op:_pe_data_valid/OP1355
               pe_data_valid <= 1'd0;
            end
            else begin
               // op:_pe_data_valid/OP1360
               pe_data_valid <= pe_array_N_Muxb_1_2_2_4_548_out1;
            end
         end

         // rtl_instance:pe_array/pe_array_N_Muxb_1_2_2_4
         always @(src_vld or enable or check_overflow_en)
          begin :pe_array_N_Muxb_1_2_2_4_548
            if (enable) begin
               pe_array_N_Muxb_1_2_2_4_548_out1 = check_overflow_en;
            end
            else begin
               pe_array_N_Muxb_1_2_2_4_548_out1 = src_vld;
            end
         end

         // rtl_process:pe_array/drive_clear_7d
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_clear_7d
         // at: pe_array.h:232:99
         // at: pe_array.h:219:14
         // at: pe_array.h:92:5
         // at: pe_array.h:136:5
         // at: pe_array.h:137:14
         // at: pe_array.h:114:5
         always @(posedge clk or negedge rstn)
          begin :drive_clear_7d
            if (rstn == 1'b0) begin
               // op:_delay/OP1370
               clear_7d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1513
                     clear_7d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1426
                     clear_7d <= clear_6d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_clear_6d
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_clear_6d
         // at: pe_array.h:232:87
         // at: pe_array.h:211:14
         // at: pe_array.h:91:5
         // at: pe_array.h:135:5
         // at: pe_array.h:136:14
         // at: pe_array.h:113:5
         always @(posedge clk or negedge rstn)
          begin :drive_clear_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP1369
               clear_6d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1512
                     clear_6d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1424
                     clear_6d <= clear_5d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_clear_5d
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_clear_5d
         // at: pe_array.h:232:75
         // at: pe_array.h:203:14
         // at: pe_array.h:90:5
         // at: pe_array.h:134:5
         // at: pe_array.h:135:14
         // at: pe_array.h:112:5
         always @(posedge clk or negedge rstn)
          begin :drive_clear_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP1368
               clear_5d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1511
                     clear_5d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1422
                     clear_5d <= clear_4d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_clear_4d
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_clear_4d
         // at: pe_array.h:232:63
         // at: pe_array.h:195:14
         // at: pe_array.h:89:5
         // at: pe_array.h:133:5
         // at: pe_array.h:134:14
         // at: pe_array.h:111:5
         always @(posedge clk or negedge rstn)
          begin :drive_clear_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP1367
               clear_4d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1510
                     clear_4d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1420
                     clear_4d <= clear_3d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_clear_3d
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_clear_3d
         // at: pe_array.h:232:51
         // at: pe_array.h:187:14
         // at: pe_array.h:88:5
         // at: pe_array.h:132:5
         // at: pe_array.h:133:14
         // at: pe_array.h:110:5
         always @(posedge clk or negedge rstn)
          begin :drive_clear_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP1366
               clear_3d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1509
                     clear_3d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1418
                     clear_3d <= clear_2d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_clear_2d
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_clear_2d
         // at: pe_array.h:232:39
         // at: pe_array.h:179:14
         // at: pe_array.h:87:5
         // at: pe_array.h:131:5
         // at: pe_array.h:132:14
         // at: pe_array.h:109:5
         always @(posedge clk or negedge rstn)
          begin :drive_clear_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP1365
               clear_2d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1508
                     clear_2d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1416
                     clear_2d <= clear_1d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_clear_1d
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_clear_1d
         // at: pe_array.h:232:27
         // at: pe_array.h:171:14
         // at: pe_array.h:86:5
         // at: pe_array.h:130:5
         // at: pe_array.h:131:14
         // at: pe_array.h:108:5
         always @(posedge clk or negedge rstn)
          begin :drive_clear_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP1364
               clear_1d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1507
                     clear_1d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1414
                     clear_1d <= clear;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_src_vld_1d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_src_vld_1d
         // at: pe_array.h:94:5
         // at: pe_array.h:138:5
         // at: pe_array.h:116:5
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP1372
               src_vld_1d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1515
                     src_vld_1d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1430
                     src_vld_1d <= src_vld;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_src_vld_2d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_src_vld_2d
         // at: pe_array.h:95:5
         // at: pe_array.h:139:5
         // at: pe_array.h:117:5
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP1373
               src_vld_2d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1516
                     src_vld_2d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1432
                     src_vld_2d <= src_vld_1d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_src_vld_3d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_src_vld_3d
         // at: pe_array.h:96:5
         // at: pe_array.h:140:5
         // at: pe_array.h:118:5
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP1374
               src_vld_3d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1517
                     src_vld_3d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1434
                     src_vld_3d <= src_vld_2d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_src_vld_4d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_src_vld_4d
         // at: pe_array.h:97:5
         // at: pe_array.h:141:5
         // at: pe_array.h:119:5
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP1375
               src_vld_4d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1518
                     src_vld_4d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1436
                     src_vld_4d <= src_vld_3d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_src_vld_5d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_src_vld_5d
         // at: pe_array.h:98:5
         // at: pe_array.h:142:5
         // at: pe_array.h:120:5
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP1376
               src_vld_5d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1519
                     src_vld_5d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1438
                     src_vld_5d <= src_vld_4d;
                  end
                  
               endcase

            end
         end

         // rtl_process:pe_array/drive_src_vld_6d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_src_vld_6d
         // at: pe_array.h:99:5
         // at: pe_array.h:143:5
         // at: pe_array.h:121:5
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP1377
               src_vld_6d <= 1'd0;
            end
            else begin
               case (init) 

                  1'b1:                   begin
                     // op:_delay/OP1520
                     src_vld_6d <= 1'd0;
                  end
                  
                  1'b0:                   begin
                     // op:_delay/OP1440
                     src_vld_6d <= src_vld_5d;
                  end
                  
               endcase

            end
         end


endmodule


