// Generated by stratus_hls 19.10-p100  (91500.011111)
// Mon Dec 14 15:00:56 2020
// from bias_addr_gen.cpp
#include "bias_addr_gen_rtl.h"

struct bias_addr_gen;
bias_addr_gen::bias_addr_gen(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rstn("rstn")
    ,init("init")
    ,out_feature_width("out_feature_width")
    ,out_feature_height("out_feature_height")
    ,out_feature_channel("out_feature_channel")
    ,bias_read_base_addr("bias_read_base_addr")
    ,bias_en("bias_en")
    ,start_rising("start_rising")
    ,data_en("data_en")
    ,bias_addr("bias_addr")
    ,bias_addr_valid("bias_addr_valid")
    ,of_enable_4d("of_enable_4d")
    ,of_enable_3d("of_enable_3d")
    ,of_enable_2d("of_enable_2d")
    ,of_enable_1d("of_enable_1d")
    ,of_enable_5d("of_enable_5d")
    ,bias_addr_gen_Or_1Ux1U_1U_4_5_out1("bias_addr_gen_Or_1Ux1U_1U_4_5_out1")
    ,of_enable_6d("of_enable_6d")
    ,bias_addr_gen_And_1Ux1U_1U_4_6_out1("bias_addr_gen_And_1Ux1U_1U_4_6_out1")
    ,bias_addr_gen_EqSubi1u16u16_1_7_out1("bias_addr_gen_EqSubi1u16u16_1_7_out1")
    ,bias_addr_gen_MuxAdd2i1u16u16u1_4_11_out1("bias_addr_gen_MuxAdd2i1u16u16u1_4_11_out1")
    ,bias_addr_gen_And_1Ux1U_1U_1_9_out1("bias_addr_gen_And_1Ux1U_1U_1_9_out1")
    ,bias_addr_gen_Or_1Ux1U_1U_4_10_out1("bias_addr_gen_Or_1Ux1U_1U_4_10_out1")
    ,bias_addr_gen_Muxi0u16u1_4_12_out1("bias_addr_gen_Muxi0u16u1_4_12_out1")
    ,ox_cnt("ox_cnt")
    ,bias_addr_gen_EqSubi1u16u16_1_13_out1("bias_addr_gen_EqSubi1u16u16_1_13_out1")
    ,bias_addr_gen_MuxAdd2i1u16u16u1_4_16_out1("bias_addr_gen_MuxAdd2i1u16u16u1_4_16_out1")
    ,bias_addr_gen_And_1Ux1U_1U_1_8_out1("bias_addr_gen_And_1Ux1U_1U_1_8_out1")
    ,bias_addr_gen_Or_1Ux1U_1U_4_15_out1("bias_addr_gen_Or_1Ux1U_1U_4_15_out1")
    ,bias_addr_gen_Muxi0u16u1_4_17_out1("bias_addr_gen_Muxi0u16u1_4_17_out1")
    ,oy_cnt("oy_cnt")
    ,bias_addr_gen_EqSubi1u16u16_1_18_out1("bias_addr_gen_EqSubi1u16u16_1_18_out1")
    ,bias_addr_gen_MuxAdd2i1u16u16u1_4_21_out1("bias_addr_gen_MuxAdd2i1u16u16u1_4_21_out1")
    ,bias_addr_gen_And_1Ux1U_1U_1_14_out1("bias_addr_gen_And_1Ux1U_1U_1_14_out1")
    ,bias_addr_gen_Or_1Ux1U_1U_4_20_out1("bias_addr_gen_Or_1Ux1U_1U_4_20_out1")
    ,bias_addr_gen_And_1Ux1U_1U_1_19_out1("bias_addr_gen_And_1Ux1U_1U_1_19_out1")
    ,bias_addr_gen_Muxi0u16u1_4_22_out1("bias_addr_gen_Muxi0u16u1_4_22_out1")
    ,of_cnt_max("of_cnt_max")
    ,oy_cnt_max("oy_cnt_max")
    ,ox_cnt_max("ox_cnt_max")
    ,bias_addr_gen_Add_32Ux14U_32U_4_3_out1("bias_addr_gen_Add_32Ux14U_32U_4_3_out1")
    ,bias_addr_gen_Add_32Ux14U_32U_4_3_in1("bias_addr_gen_Add_32Ux14U_32U_4_3_in1")
    ,of_cnt("of_cnt")
    ,bias_addr_gen_N_Mux_32_2_12_4_4_out1("bias_addr_gen_N_Mux_32_2_12_4_4_out1")
    ,bias_addr_update("bias_addr_update")
    ,bias_addr_gen_Not_1U_1U_4_1_out1("bias_addr_gen_Not_1U_1U_4_1_out1")
    ,bias_addr_gen_And_1Ux1U_1U_4_2_out1("bias_addr_gen_And_1Ux1U_1U_4_2_out1")
{
  SC_METHOD(drive_bias_addr_valid);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bias_addr_gen_Not_1U_1U_4_1);
  sensitive << ( init );

  SC_METHOD(bias_addr_gen_And_1Ux1U_1U_4_2);
  sensitive << ( bias_addr_update );
  sensitive << ( bias_addr_gen_Not_1U_1U_4_1_out1 );

  SC_METHOD(drive_bias_addr);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_bias_addr_gen_Add_32Ux14U_32U_4_3_in1);
  sensitive << ( of_cnt );

  SC_METHOD(bias_addr_gen_Add_32Ux14U_32U_4_3);
  sensitive << ( bias_addr_gen_Add_32Ux14U_32U_4_3_in1 );
  sensitive << ( bias_read_base_addr );

  SC_METHOD(bias_addr_gen_N_Mux_32_2_12_4_4);
  sensitive << ( bias_en );
  sensitive << ( bias_addr_gen_Add_32Ux14U_32U_4_3_out1 );
  sensitive << ( bias_addr );

  SC_METHOD(drive_ox_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_oy_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_of_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_of_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bias_addr_gen_Or_1Ux1U_1U_4_20);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_19_out1 );
  sensitive << ( init );

  SC_METHOD(bias_addr_gen_MuxAdd2i1u16u16u1_4_21);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_14_out1 );
  sensitive << ( of_cnt );

  SC_METHOD(bias_addr_gen_Muxi0u16u1_4_22);
  sensitive << ( bias_addr_gen_Or_1Ux1U_1U_4_20_out1 );
  sensitive << ( bias_addr_gen_MuxAdd2i1u16u16u1_4_21_out1 );

  SC_METHOD(bias_addr_gen_EqSubi1u16u16_1_18);
  sensitive << ( of_cnt_max );
  sensitive << ( of_cnt );

  SC_METHOD(bias_addr_gen_And_1Ux1U_1U_1_19);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_14_out1 );
  sensitive << ( bias_addr_gen_EqSubi1u16u16_1_18_out1 );

  SC_METHOD(drive_oy_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bias_addr_gen_Or_1Ux1U_1U_4_15);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_14_out1 );
  sensitive << ( init );

  SC_METHOD(bias_addr_gen_MuxAdd2i1u16u16u1_4_16);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_8_out1 );
  sensitive << ( oy_cnt );

  SC_METHOD(bias_addr_gen_Muxi0u16u1_4_17);
  sensitive << ( bias_addr_gen_Or_1Ux1U_1U_4_15_out1 );
  sensitive << ( bias_addr_gen_MuxAdd2i1u16u16u1_4_16_out1 );

  SC_METHOD(bias_addr_gen_EqSubi1u16u16_1_13);
  sensitive << ( oy_cnt_max );
  sensitive << ( oy_cnt );

  SC_METHOD(bias_addr_gen_And_1Ux1U_1U_1_14);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_8_out1 );
  sensitive << ( bias_addr_gen_EqSubi1u16u16_1_13_out1 );

  SC_METHOD(drive_ox_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bias_addr_gen_Or_1Ux1U_1U_4_10);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_8_out1 );
  sensitive << ( init );

  SC_METHOD(bias_addr_gen_MuxAdd2i1u16u16u1_4_11);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_9_out1 );
  sensitive << ( ox_cnt );

  SC_METHOD(bias_addr_gen_Muxi0u16u1_4_12);
  sensitive << ( bias_addr_gen_Or_1Ux1U_1U_4_10_out1 );
  sensitive << ( bias_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 );

  SC_METHOD(bias_addr_gen_EqSubi1u16u16_1_7);
  sensitive << ( ox_cnt_max );
  sensitive << ( ox_cnt );

  SC_METHOD(bias_addr_gen_And_1Ux1U_1U_1_8);
  sensitive << ( bias_addr_gen_And_1Ux1U_1U_1_9_out1 );
  sensitive << ( bias_addr_gen_EqSubi1u16u16_1_7_out1 );

  SC_METHOD(bias_addr_gen_And_1Ux1U_1U_1_9);
  sensitive << ( bias_en );
  sensitive << ( data_en );

  SC_METHOD(drive_bias_addr_update);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bias_addr_gen_Or_1Ux1U_1U_4_5);
  sensitive << ( of_enable_6d );
  sensitive << ( start_rising );

  SC_METHOD(bias_addr_gen_And_1Ux1U_1U_4_6);
  sensitive << ( bias_en );
  sensitive << ( bias_addr_gen_Or_1Ux1U_1U_4_5_out1 );

  SC_METHOD(drive_of_enable_6d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_of_enable_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_of_enable_2d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_of_enable_3d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_of_enable_4d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_of_enable_5d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

}
// resource: regr_ac_1
void bias_addr_gen::drive_bias_addr_valid(){
  if ( (rstn.read() == 0ULL) ) {
    bias_addr_valid = 0ULL;
  } else {
    bias_addr_valid = (sc_uint<1> ) (bias_addr_gen_And_1Ux1U_1U_4_2_out1.read())
    ;
  }
}
// resource: bias_addr_gen_Not_1U_1U_4  instance: bias_addr_gen_Not_1U_1U_4_1
void bias_addr_gen::bias_addr_gen_Not_1U_1U_4_1(){
  bias_addr_gen_Not_1U_1U_4_1_out1 = !init.read();
}
// resource: bias_addr_gen_And_1Ux1U_1U_4  instance: bias_addr_gen_And_1Ux1U_1U_4_2
void bias_addr_gen::bias_addr_gen_And_1Ux1U_1U_4_2(){
  bias_addr_gen_And_1Ux1U_1U_4_2_out1 = (sc_uint<1> ) (
                                        bias_addr_gen_Not_1U_1U_4_1_out1.read()
                                         & (sc_uint<1> )bias_addr_update.read())
  ;
}
// resource: regr_ac_32
void bias_addr_gen::drive_bias_addr(){
  if ( (rstn.read() == 0ULL) ) {
    bias_addr = 0ULL;
  } else {
    bias_addr = bias_addr_gen_N_Mux_32_2_12_4_4_out1.read();
  }
}
void bias_addr_gen::drive_bias_addr_gen_Add_32Ux14U_32U_4_3_in1(){
  bias_addr_gen_Add_32Ux14U_32U_4_3_in1 = (sc_uint<14> ) (of_cnt.read().range(15
                                          ,2));
}
// resource: bias_addr_gen_Add_32Ux14U_32U_4  instance: bias_addr_gen_Add_32Ux14U_32U_4_3
void bias_addr_gen::bias_addr_gen_Add_32Ux14U_32U_4_3(){
  bias_addr_gen_Add_32Ux14U_32U_4_3_out1 = (bias_read_base_addr.read() + 
                                           bias_addr_gen_Add_32Ux14U_32U_4_3_in1
                                           .read());
}
// resource: bias_addr_gen_N_Mux_32_2_12_4
void bias_addr_gen::bias_addr_gen_N_Mux_32_2_12_4_4(){
  if ( bias_en.read() ) {
    bias_addr_gen_N_Mux_32_2_12_4_4_out1 = bias_addr_gen_Add_32Ux14U_32U_4_3_out1
                                           .read();
  } else {
    bias_addr_gen_N_Mux_32_2_12_4_4_out1 = bias_addr.read();
  }
}
// resource: regr_16
void bias_addr_gen::drive_ox_cnt_max(){
  ox_cnt_max = out_feature_width.read();
}
// resource: regr_16
void bias_addr_gen::drive_oy_cnt_max(){
  oy_cnt_max = out_feature_height.read();
}
// resource: regr_16
void bias_addr_gen::drive_of_cnt_max(){
  of_cnt_max = out_feature_channel.read();
}
// resource: regr_ac_16
void bias_addr_gen::drive_of_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    of_cnt = 0ULL;
  } else {
    of_cnt = bias_addr_gen_Muxi0u16u1_4_22_out1.read();
  }
}
// resource: bias_addr_gen_Or_1Ux1U_1U_4  instance: bias_addr_gen_Or_1Ux1U_1U_4_20
void bias_addr_gen::bias_addr_gen_Or_1Ux1U_1U_4_20(){
  bias_addr_gen_Or_1Ux1U_1U_4_20_out1 = (sc_uint<1> )init.read() | 
                                        bias_addr_gen_And_1Ux1U_1U_1_19_out1
                                        .read();
}
// resource: bias_addr_gen_MuxAdd2i1u16u16u1_4
void bias_addr_gen::bias_addr_gen_MuxAdd2i1u16u16u1_4_21(){
  if ( bias_addr_gen_And_1Ux1U_1U_1_14_out1.read() ) {
    bias_addr_gen_MuxAdd2i1u16u16u1_4_21_out1 = (of_cnt.read() + 1ULL);
  } else {
    bias_addr_gen_MuxAdd2i1u16u16u1_4_21_out1 = of_cnt.read();
  }
}
// resource: bias_addr_gen_Muxi0u16u1_4
void bias_addr_gen::bias_addr_gen_Muxi0u16u1_4_22(){
  if ( bias_addr_gen_Or_1Ux1U_1U_4_20_out1.read() ) {
    bias_addr_gen_Muxi0u16u1_4_22_out1 = 0ULL;
  } else {
    bias_addr_gen_Muxi0u16u1_4_22_out1 = bias_addr_gen_MuxAdd2i1u16u16u1_4_21_out1
                                         .read();
  }
}
// resource: bias_addr_gen_EqSubi1u16u16_1  instance: bias_addr_gen_EqSubi1u16u16_1_18
void bias_addr_gen::bias_addr_gen_EqSubi1u16u16_1_18(){
  bias_addr_gen_EqSubi1u16u16_1_18_out1 = ((sc_int<17> )of_cnt.read() == 
                                          of_cnt_max.read() - 1ULL);
}
// resource: bias_addr_gen_And_1Ux1U_1U_1  instance: bias_addr_gen_And_1Ux1U_1U_1_19
void bias_addr_gen::bias_addr_gen_And_1Ux1U_1U_1_19(){
  bias_addr_gen_And_1Ux1U_1U_1_19_out1 = (sc_uint<1> ) ((sc_uint<1> )
                                         bias_addr_gen_EqSubi1u16u16_1_18_out1
                                         .read() & 
                                         bias_addr_gen_And_1Ux1U_1U_1_14_out1
                                         .read());
}
// resource: regr_ac_16
void bias_addr_gen::drive_oy_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    oy_cnt = 0ULL;
  } else {
    oy_cnt = bias_addr_gen_Muxi0u16u1_4_17_out1.read();
  }
}
// resource: bias_addr_gen_Or_1Ux1U_1U_4  instance: bias_addr_gen_Or_1Ux1U_1U_4_15
void bias_addr_gen::bias_addr_gen_Or_1Ux1U_1U_4_15(){
  bias_addr_gen_Or_1Ux1U_1U_4_15_out1 = (sc_uint<1> )init.read() | 
                                        bias_addr_gen_And_1Ux1U_1U_1_14_out1
                                        .read();
}
// resource: bias_addr_gen_MuxAdd2i1u16u16u1_4
void bias_addr_gen::bias_addr_gen_MuxAdd2i1u16u16u1_4_16(){
  if ( bias_addr_gen_And_1Ux1U_1U_1_8_out1.read() ) {
    bias_addr_gen_MuxAdd2i1u16u16u1_4_16_out1 = (oy_cnt.read() + 1ULL);
  } else {
    bias_addr_gen_MuxAdd2i1u16u16u1_4_16_out1 = oy_cnt.read();
  }
}
// resource: bias_addr_gen_Muxi0u16u1_4
void bias_addr_gen::bias_addr_gen_Muxi0u16u1_4_17(){
  if ( bias_addr_gen_Or_1Ux1U_1U_4_15_out1.read() ) {
    bias_addr_gen_Muxi0u16u1_4_17_out1 = 0ULL;
  } else {
    bias_addr_gen_Muxi0u16u1_4_17_out1 = bias_addr_gen_MuxAdd2i1u16u16u1_4_16_out1
                                         .read();
  }
}
// resource: bias_addr_gen_EqSubi1u16u16_1  instance: bias_addr_gen_EqSubi1u16u16_1_13
void bias_addr_gen::bias_addr_gen_EqSubi1u16u16_1_13(){
  bias_addr_gen_EqSubi1u16u16_1_13_out1 = ((sc_int<17> )oy_cnt.read() == 
                                          oy_cnt_max.read() - 1ULL);
}
// resource: bias_addr_gen_And_1Ux1U_1U_1  instance: bias_addr_gen_And_1Ux1U_1U_1_14
void bias_addr_gen::bias_addr_gen_And_1Ux1U_1U_1_14(){
  bias_addr_gen_And_1Ux1U_1U_1_14_out1 = (sc_uint<1> ) ((sc_uint<1> )
                                         bias_addr_gen_EqSubi1u16u16_1_13_out1
                                         .read() & 
                                         bias_addr_gen_And_1Ux1U_1U_1_8_out1
                                         .read());
}
// resource: regr_ac_16
void bias_addr_gen::drive_ox_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    ox_cnt = 0ULL;
  } else {
    ox_cnt = bias_addr_gen_Muxi0u16u1_4_12_out1.read();
  }
}
// resource: bias_addr_gen_Or_1Ux1U_1U_4  instance: bias_addr_gen_Or_1Ux1U_1U_4_10
void bias_addr_gen::bias_addr_gen_Or_1Ux1U_1U_4_10(){
  bias_addr_gen_Or_1Ux1U_1U_4_10_out1 = (sc_uint<1> )init.read() | 
                                        bias_addr_gen_And_1Ux1U_1U_1_8_out1
                                        .read();
}
// resource: bias_addr_gen_MuxAdd2i1u16u16u1_4
void bias_addr_gen::bias_addr_gen_MuxAdd2i1u16u16u1_4_11(){
  if ( bias_addr_gen_And_1Ux1U_1U_1_9_out1.read() ) {
    bias_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 = (ox_cnt.read() + 1ULL);
  } else {
    bias_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 = ox_cnt.read();
  }
}
// resource: bias_addr_gen_Muxi0u16u1_4
void bias_addr_gen::bias_addr_gen_Muxi0u16u1_4_12(){
  if ( bias_addr_gen_Or_1Ux1U_1U_4_10_out1.read() ) {
    bias_addr_gen_Muxi0u16u1_4_12_out1 = 0ULL;
  } else {
    bias_addr_gen_Muxi0u16u1_4_12_out1 = bias_addr_gen_MuxAdd2i1u16u16u1_4_11_out1
                                         .read();
  }
}
// resource: bias_addr_gen_EqSubi1u16u16_1  instance: bias_addr_gen_EqSubi1u16u16_1_7
void bias_addr_gen::bias_addr_gen_EqSubi1u16u16_1_7(){
  bias_addr_gen_EqSubi1u16u16_1_7_out1 = ((sc_int<17> )ox_cnt.read() == 
                                         ox_cnt_max.read() - 1ULL);
}
// resource: bias_addr_gen_And_1Ux1U_1U_1  instance: bias_addr_gen_And_1Ux1U_1U_1_8
void bias_addr_gen::bias_addr_gen_And_1Ux1U_1U_1_8(){
  bias_addr_gen_And_1Ux1U_1U_1_8_out1 = (sc_uint<1> ) ((sc_uint<1> )
                                        bias_addr_gen_EqSubi1u16u16_1_7_out1
                                        .read() & 
                                        bias_addr_gen_And_1Ux1U_1U_1_9_out1
                                        .read());
}
// resource: bias_addr_gen_And_1Ux1U_1U_1  instance: bias_addr_gen_And_1Ux1U_1U_1_9
void bias_addr_gen::bias_addr_gen_And_1Ux1U_1U_1_9(){
  bias_addr_gen_And_1Ux1U_1U_1_9_out1 = (sc_uint<1> ) (data_en.read() & bias_en
                                        .read());
}
// resource: regr_ac_1
void bias_addr_gen::drive_bias_addr_update(){
  if ( (rstn.read() == 0ULL) ) {
    bias_addr_update = 0ULL;
  } else {
    bias_addr_update = (sc_uint<1> ) (bias_addr_gen_And_1Ux1U_1U_4_6_out1.read()
                       );
  }
}
// resource: bias_addr_gen_Or_1Ux1U_1U_4  instance: bias_addr_gen_Or_1Ux1U_1U_4_5
void bias_addr_gen::bias_addr_gen_Or_1Ux1U_1U_4_5(){
  bias_addr_gen_Or_1Ux1U_1U_4_5_out1 = start_rising.read() | of_enable_6d.read()
  ;
}
// resource: bias_addr_gen_And_1Ux1U_1U_4  instance: bias_addr_gen_And_1Ux1U_1U_4_6
void bias_addr_gen::bias_addr_gen_And_1Ux1U_1U_4_6(){
  bias_addr_gen_And_1Ux1U_1U_4_6_out1 = (sc_uint<1> ) (
                                        bias_addr_gen_Or_1Ux1U_1U_4_5_out1
                                        .read() & (sc_uint<1> )bias_en.read());
}
// resource: regr_ac_1
void bias_addr_gen::drive_of_enable_6d(){
  if ( (rstn.read() == 0ULL) ) {
    of_enable_6d = 0ULL;
  } else {
    of_enable_6d = of_enable_5d.read();
  }
}
// resource: regr_ac_1
void bias_addr_gen::drive_of_enable_1d(){
  if ( (rstn.read() == 0ULL) ) {
    of_enable_1d = 0ULL;
  } else {
    of_enable_1d = bias_addr_gen_And_1Ux1U_1U_1_14_out1.read();
  }
}
// resource: regr_ac_1
void bias_addr_gen::drive_of_enable_2d(){
  if ( (rstn.read() == 0ULL) ) {
    of_enable_2d = 0ULL;
  } else {
    of_enable_2d = of_enable_1d.read();
  }
}
// resource: regr_ac_1
void bias_addr_gen::drive_of_enable_3d(){
  if ( (rstn.read() == 0ULL) ) {
    of_enable_3d = 0ULL;
  } else {
    of_enable_3d = of_enable_2d.read();
  }
}
// resource: regr_ac_1
void bias_addr_gen::drive_of_enable_4d(){
  if ( (rstn.read() == 0ULL) ) {
    of_enable_4d = 0ULL;
  } else {
    of_enable_4d = of_enable_3d.read();
  }
}
// resource: regr_ac_1
void bias_addr_gen::drive_of_enable_5d(){
  if ( (rstn.read() == 0ULL) ) {
    of_enable_5d = 0ULL;
  } else {
    of_enable_5d = of_enable_4d.read();
  }
}
