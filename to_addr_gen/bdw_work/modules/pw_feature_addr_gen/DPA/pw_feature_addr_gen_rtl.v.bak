// Generated by stratus_hls 19.10-p100  (91500.011111)
// Tue Jan 26 19:10:06 2021
// from pw_feature_addr_gen.cpp

`timescale 1ps / 1ps

      
module pw_feature_addr_gen(clk, rstn, stop, start, start_rising, systolic_en, systolic_depth, feature_width, feature_height, feature_channel, out_feature_width, out_feature_height, out_feature_channel, filter_width, filter_height, filter_channel, filter_number, read_feature_base_addr, pw_feature_addr, pw_feature_addr_valid, pw_feature_data_valid, pw_cache_en, pw_feature_data_sel, pw_addr_if_start, systolic_sel_11d);

      input clk;
      input rstn;
      input stop;
      input [7:0] start;
      input start_rising;
      input [7:0] systolic_en;
      input [7:0] systolic_depth;
      input [15:0] feature_width;
      input [15:0] feature_height;
      input [15:0] feature_channel;
      input [15:0] out_feature_width;
      input [15:0] out_feature_height;
      input [15:0] out_feature_channel;
      input [15:0] filter_width;
      input [15:0] filter_height;
      input [15:0] filter_channel;
      input [15:0] filter_number;
      input [31:0] read_feature_base_addr;
      output [31:0] pw_feature_addr;
      reg [31:0] pw_feature_addr;
      output pw_feature_addr_valid;
      reg pw_feature_addr_valid;
      output pw_feature_data_valid;
      reg pw_feature_data_valid;
      output pw_cache_en;
      reg pw_cache_en;
      output [15:0] pw_feature_data_sel;
      output pw_addr_if_start;
      reg pw_addr_if_start;
      output [7:0] systolic_sel_11d;
      reg [7:0] systolic_sel_11d;
      /*signed*/wire[3:0] pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_4_41_out1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_4_40_out1;
      wire pw_feature_addr_gen_Eqi1u16_4_39_out1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_4_38_out1;
      wire pw_feature_addr_gen_AndReduction_4S_1U_1_35_out1;
      wire pw_feature_addr_gen_Not_1U_1U_4_37_out1;
      wire pw_feature_addr_gen_Eqi1u16_4_36_out1;
      wire pw_feature_addr_gen_Or_1Ux1U_1U_4_42_out1;
      reg enable;
      wire pw_feature_addr_gen_Not_1U_1U_4_7_out1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_4_8_out1;
      wire[15:0] pw_feature_addr_gen_Mul_16Ux16U_16U_4_6_out1;
      reg[15:0] if_cnt_max;
      wire pw_feature_addr_gen_EqSubi1u16u16_1_9_out1;
      reg[15:0] pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1;
      reg[15:0] pw_feature_addr_gen_Muxi0u16u1_4_12_out1;
      wire pw_feature_addr_gen_EqSubu8u16u16_1_22_out1;
      reg[15:0] pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1;
      wire[15:0] pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1;
      reg[15:0] pw_feature_addr_gen_Muxi0u16u1_4_26_out1;
      reg[15:0] oy_cnt_max;
      wire pw_feature_addr_gen_EqSubi1u16u16_1_27_out1;
      reg[15:0] pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1;
      reg[15:0] pw_feature_addr_gen_Muxi0u16u1_4_30_out1;
      reg[15:0] of_cnt_max;
      wire pw_feature_addr_gen_EqSubi32u16u16_1_31_out1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1;
      reg[15:0] pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1;
      reg[15:0] pw_feature_addr_gen_Muxi0u16u1_4_34_out1;
      reg[15:0] of_cnt;
      reg[15:0] ox_cnt;
      reg[15:0] oy_cnt;
      reg[10:0] if_pos_up_slice;
      reg[15:0] cnt_max;
      reg[15:0] oy_pos;
      reg[15:0] ox_cnt_max;
      wire[31:0] pw_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1;
      reg[15:0] ox_pos;
      wire[31:0] pw_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1;
      wire[31:0] pw_feature_addr_gen_Add_32Ux8U_32U_4_3_out1;
      reg[31:0] sum_oy;
      reg[31:0] sum_sys;
      reg[31:0] sum_if;
      reg[15:0] sum_ox_slice;
      wire[31:0] pw_feature_addr_gen_Add_32Ux32U_32U_1_1_out1;
      wire[31:0] pw_feature_addr_gen_Add3u32u32u32_1_2_out1;
      reg[31:0] tmp_pw_feature_addr;
      reg pw_feature_addr_valid_4d;
      reg pw_feature_addr_valid_3d;
      reg pw_feature_addr_valid_2d;
      reg pw_feature_addr_valid_1d;
      reg[7:0] systolic_sel_9d;
      reg[7:0] systolic_sel_8d;
      reg[7:0] systolic_sel_7d;
      reg[7:0] systolic_sel_6d;
      reg[7:0] systolic_sel_5d;
      reg[7:0] systolic_sel_4d;
      reg[7:0] systolic_sel_3d;
      reg[7:0] systolic_sel_2d;
      reg[7:0] systolic_sel_1d;
      reg if_clear_9d;
      reg if_clear_8d;
      reg if_clear_7d;
      reg if_clear_6d;
      reg if_clear_5d;
      reg if_clear_4d;
      reg if_clear_3d;
      reg if_clear_2d;
      wire pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1;
      reg if_clear_1d;
      reg[4:0] if_cnt_8d_slice;
      reg[4:0] if_cnt_7d_slice;
      reg[4:0] if_cnt_6d_slice;
      reg[4:0] if_cnt_5d_slice;
      reg[4:0] if_cnt_4d_slice;
      reg[4:0] if_cnt_3d_slice;
      reg[4:0] if_cnt_2d_slice;
      reg[4:0] if_cnt_1d_slice;
      reg run_8d;
      reg run_7d;
      reg run_6d;
      reg run_5d;
      reg run_4d;
      reg run_1d;
      reg run_2d;
      reg run_9d;
      reg pw_feature_addr_valid_5d;
      reg[4:0] if_cnt_9d_slice;
      reg if_clear_10d;
      reg[7:0] systolic_sel_10d;
      reg run_3d;
      reg run_10d;
      reg pw_feature_addr_valid_6d;
      reg[4:0] if_cnt_10d_slice;
      reg[4:0] pw_feature_data_sel_slice;
      reg if_clear_11d;
      wire pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16_out1;
      reg run;
      wire pw_feature_addr_gen_And_1Ux1U_1U_4_15_out1;
      reg[15:0] if_cnt;
      wire pw_feature_addr_gen_Eqi31u5_1_14_out1;
      wire pw_feature_addr_gen_OrReduction_8U_1U_1_13_out1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1;
      reg[7:0] pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1;
      wire pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1;
      wire[7:0] pw_feature_addr_gen_Add2i1u8_4_19_out1;
      reg[7:0] pw_feature_addr_gen_Muxi0u8u1_4_21_out1;
      reg[7:0] systolic_sel;

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_systolic_sel
         // at: pw_feature_addr_gen.h:434:7
         // at: pw_feature_addr_gen.h:430:7
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel
            if (rstn == 1'b0) begin
               // op:_systolic_sel_counter/OP329
               systolic_sel <= 8'd000;
            end
            else begin
               // op:_systolic_sel_counter/OP337
               systolic_sel <= pw_feature_addr_gen_Muxi0u8u1_4_21_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Add2i1u8_4_19
         // Resource=pw_feature_addr_gen_Add2i1u8_4, Function=add : Inputs=8 Outputs=8
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:434:42
         assign pw_feature_addr_gen_Add2i1u8_4_19_out1 = systolic_sel + 8'd001;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_N_Mux_8_2_20_4
         always @(systolic_sel or pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1 or pw_feature_addr_gen_Add2i1u8_4_19_out1)
          begin :pw_feature_addr_gen_N_Mux_8_2_20_4_20
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1) begin
               pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1 = pw_feature_addr_gen_Add2i1u8_4_19_out1;
            end
            else begin
               pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1 = systolic_sel;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Muxi0u8u1_4
         always @(pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1 or pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1)
          begin :pw_feature_addr_gen_Muxi0u8u1_4_21
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1) begin
               pw_feature_addr_gen_Muxi0u8u1_4_21_out1 = 8'd000;
            end
            else begin
               pw_feature_addr_gen_Muxi0u8u1_4_21_out1 = pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_OrReduction_8U_1U_1_13
         // Resource=pw_feature_addr_gen_OrReduction_8U_1U_1, Function=or : Inputs=8 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:424:46
         assign pw_feature_addr_gen_OrReduction_8U_1U_1_13_out1 = (|systolic_en);

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Eqi31u5_1_14
         // Resource=pw_feature_addr_gen_Eqi31u5_1, Function=eq : Inputs=5 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:425:75
         assign pw_feature_addr_gen_Eqi31u5_1_14_out1 = if_cnt[4:0] == 5'd31;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_4_15
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:424:46
         assign pw_feature_addr_gen_And_1Ux1U_1U_4_15_out1 = pw_feature_addr_gen_OrReduction_8U_1U_1_13_out1 & run;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16
         // Resource=pw_feature_addr_gen_LessThan_8Ux8U_1U_1, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:424:84
         assign pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16_out1 = systolic_sel < systolic_depth;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_1_17
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:425:45
         assign pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1 = pw_feature_addr_gen_Eqi31u5_1_14_out1 & run;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_1_18
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:424:60
         assign pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1 = pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16_out1 & pw_feature_addr_gen_And_1Ux1U_1U_4_15_out1;

         // rtl_process:pw_feature_addr_gen/drive_pw_addr_if_start
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_pw_addr_if_start
         // at: pw_feature_addr_gen.h:417:7
         // at: pw_feature_addr_gen.h:420:7
         always @(posedge clk or negedge rstn)
          begin :drive_pw_addr_if_start
            if (rstn == 1'b0) begin
               // op:_addr_if_start/OP0
               pw_addr_if_start <= 1'd0;
            end
            else begin
               // op:_addr_if_start/OP2
               pw_addr_if_start <= if_clear_11d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_data_sel_slice
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_pw_feature_data_sel_slice
         // at: pw_feature_addr_gen.h:409:7
         // at: pw_feature_addr_gen.h:412:7
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_data_sel_slice
            if (rstn == 1'b0) begin
               // op:_pw_feature_data_sel/OP3
               pw_feature_data_sel_slice <= 5'd00;
            end
            else begin
               // op:_pw_feature_data_sel/OP5
               pw_feature_data_sel_slice <= if_cnt_10d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_data_valid
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_pw_feature_data_valid
         // at: pw_feature_addr_gen.h:401:7
         // at: pw_feature_addr_gen.h:404:7
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_data_valid
            if (rstn == 1'b0) begin
               // op:_pw_feature_data_valid/OP6
               pw_feature_data_valid <= 1'd0;
            end
            else begin
               // op:_pw_feature_data_valid/OP8
               pw_feature_data_valid <= pw_feature_addr_valid_6d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_cache_en
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_pw_cache_en
         // at: pw_feature_addr_gen.h:392:7
         // at: pw_feature_addr_gen.h:395:7
         always @(posedge clk or negedge rstn)
          begin :drive_pw_cache_en
            if (rstn == 1'b0) begin
               // op:_cache_en/OP9
               pw_cache_en <= 1'd0;
            end
            else begin
               // op:_cache_en/OP11
               pw_cache_en <= run_10d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr_valid
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pw_feature_addr_valid
         // at: pw_feature_addr_gen.h:274:8
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_addr_valid
            if (rstn == 1'b0) begin
               // op:_pw_feature_addr_valid/OP12
               pw_feature_addr_valid <= 1'd0;
            end
            else begin
               // op:_pw_feature_addr_valid/OP14
               pw_feature_addr_valid <= run_3d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_11d
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_systolic_sel_11d
         // at: pw_feature_addr_gen.h:318:7
         // at: pw_feature_addr_gen.h:370:7
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_11d
            if (rstn == 1'b0) begin
               // op:_delay/OP141
               systolic_sel_11d <= 8'd000;
            end
            else begin
               // op:_delay/OP250
               systolic_sel_11d <= systolic_sel_10d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_11d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_if_clear_11d
         // at: pw_feature_addr_gen.h:420:26
         // at: pw_feature_addr_gen.h:307:7
         // at: pw_feature_addr_gen.h:358:7
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_11d
            if (rstn == 1'b0) begin
               // op:_delay/OP130
               if_clear_11d <= 1'b0;
            end
            else begin
               // op:_delay/OP261
               if_clear_11d <= if_clear_10d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_10d_slice
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_if_cnt_10d_slice
         // at: pw_feature_addr_gen.h:412:29
         // at: pw_feature_addr_gen.h:296:7
         // at: pw_feature_addr_gen.h:347:7
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_10d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP119
               if_cnt_10d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP272
               if_cnt_10d_slice <= if_cnt_9d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr_valid_6d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_pw_feature_addr_valid_6d
         // at: pw_feature_addr_gen.h:404:31
         // at: pw_feature_addr_gen.h:324:7
         // at: pw_feature_addr_gen.h:376:7
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_addr_valid_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP147
               pw_feature_addr_valid_6d <= 1'd0;
            end
            else begin
               // op:_delay/OP244
               pw_feature_addr_valid_6d <= pw_feature_addr_valid_5d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_10d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_run_10d
         // at: pw_feature_addr_gen.h:395:21
         // at: pw_feature_addr_gen.h:286:7
         // at: pw_feature_addr_gen.h:337:7
         always @(posedge clk or negedge rstn)
          begin :drive_run_10d
            if (rstn == 1'b0) begin
               // op:_delay/OP109
               run_10d <= 1'b0;
            end
            else begin
               // op:_delay/OP282
               run_10d <= run_9d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_3d
         // at: pw_feature_addr_gen.h:387:31
         // at: pw_feature_addr_gen.h:279:7
         // at: pw_feature_addr_gen.h:330:7
         always @(posedge clk or negedge rstn)
          begin :drive_run_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP102
               run_3d <= 1'b0;
            end
            else begin
               // op:_delay/OP289
               run_3d <= run_2d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_1d
         // at: pw_feature_addr_gen.h:277:7
         // at: pw_feature_addr_gen.h:328:7
         // at: pw_feature_addr_gen.h:329:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP100
               run_1d <= 1'b0;
            end
            else begin
               // op:_delay/OP291
               run_1d <= run;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_2d
         // at: pw_feature_addr_gen.h:278:7
         // at: pw_feature_addr_gen.h:329:7
         // at: pw_feature_addr_gen.h:330:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP101
               run_2d <= 1'b0;
            end
            else begin
               // op:_delay/OP290
               run_2d <= run_1d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_4d
         // at: pw_feature_addr_gen.h:280:7
         // at: pw_feature_addr_gen.h:331:7
         // at: pw_feature_addr_gen.h:332:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP103
               run_4d <= 1'b0;
            end
            else begin
               // op:_delay/OP288
               run_4d <= run_3d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_5d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_5d
         // at: pw_feature_addr_gen.h:281:7
         // at: pw_feature_addr_gen.h:332:7
         // at: pw_feature_addr_gen.h:333:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP104
               run_5d <= 1'b0;
            end
            else begin
               // op:_delay/OP287
               run_5d <= run_4d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_6d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_6d
         // at: pw_feature_addr_gen.h:282:7
         // at: pw_feature_addr_gen.h:333:7
         // at: pw_feature_addr_gen.h:334:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP105
               run_6d <= 1'b0;
            end
            else begin
               // op:_delay/OP286
               run_6d <= run_5d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_7d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_7d
         // at: pw_feature_addr_gen.h:283:7
         // at: pw_feature_addr_gen.h:334:7
         // at: pw_feature_addr_gen.h:335:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_7d
            if (rstn == 1'b0) begin
               // op:_delay/OP106
               run_7d <= 1'b0;
            end
            else begin
               // op:_delay/OP285
               run_7d <= run_6d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_8d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_8d
         // at: pw_feature_addr_gen.h:284:7
         // at: pw_feature_addr_gen.h:335:7
         // at: pw_feature_addr_gen.h:336:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_8d
            if (rstn == 1'b0) begin
               // op:_delay/OP107
               run_8d <= 1'b0;
            end
            else begin
               // op:_delay/OP284
               run_8d <= run_7d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_run_9d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_9d
         // at: pw_feature_addr_gen.h:285:7
         // at: pw_feature_addr_gen.h:336:7
         // at: pw_feature_addr_gen.h:337:17
         always @(posedge clk or negedge rstn)
          begin :drive_run_9d
            if (rstn == 1'b0) begin
               // op:_delay/OP108
               run_9d <= 1'b0;
            end
            else begin
               // op:_delay/OP283
               run_9d <= run_8d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_1d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_1d_slice
         // at: pw_feature_addr_gen.h:287:7
         // at: pw_feature_addr_gen.h:338:7
         // at: pw_feature_addr_gen.h:339:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_1d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP110
               if_cnt_1d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP281
               if_cnt_1d_slice <= if_cnt[4:0];
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_2d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_2d_slice
         // at: pw_feature_addr_gen.h:288:7
         // at: pw_feature_addr_gen.h:339:7
         // at: pw_feature_addr_gen.h:340:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_2d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP111
               if_cnt_2d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP280
               if_cnt_2d_slice <= if_cnt_1d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_3d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_3d_slice
         // at: pw_feature_addr_gen.h:289:7
         // at: pw_feature_addr_gen.h:340:7
         // at: pw_feature_addr_gen.h:341:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_3d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP112
               if_cnt_3d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP279
               if_cnt_3d_slice <= if_cnt_2d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_4d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_4d_slice
         // at: pw_feature_addr_gen.h:290:7
         // at: pw_feature_addr_gen.h:341:7
         // at: pw_feature_addr_gen.h:342:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_4d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP113
               if_cnt_4d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP278
               if_cnt_4d_slice <= if_cnt_3d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_5d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_5d_slice
         // at: pw_feature_addr_gen.h:291:7
         // at: pw_feature_addr_gen.h:342:7
         // at: pw_feature_addr_gen.h:343:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_5d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP114
               if_cnt_5d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP277
               if_cnt_5d_slice <= if_cnt_4d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_6d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_6d_slice
         // at: pw_feature_addr_gen.h:292:7
         // at: pw_feature_addr_gen.h:343:7
         // at: pw_feature_addr_gen.h:344:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_6d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP115
               if_cnt_6d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP276
               if_cnt_6d_slice <= if_cnt_5d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_7d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_7d_slice
         // at: pw_feature_addr_gen.h:293:7
         // at: pw_feature_addr_gen.h:344:7
         // at: pw_feature_addr_gen.h:345:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_7d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP116
               if_cnt_7d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP275
               if_cnt_7d_slice <= if_cnt_6d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_8d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_8d_slice
         // at: pw_feature_addr_gen.h:294:7
         // at: pw_feature_addr_gen.h:345:7
         // at: pw_feature_addr_gen.h:346:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_8d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP117
               if_cnt_8d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP274
               if_cnt_8d_slice <= if_cnt_7d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_9d_slice
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_9d_slice
         // at: pw_feature_addr_gen.h:295:7
         // at: pw_feature_addr_gen.h:346:7
         // at: pw_feature_addr_gen.h:347:20
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_9d_slice
            if (rstn == 1'b0) begin
               // op:_delay/OP118
               if_cnt_9d_slice <= 5'd00;
            end
            else begin
               // op:_delay/OP273
               if_cnt_9d_slice <= if_cnt_8d_slice;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_1d
         // at: pw_feature_addr_gen.h:297:7
         // at: pw_feature_addr_gen.h:348:7
         // at: pw_feature_addr_gen.h:349:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP120
               if_clear_1d <= 1'b0;
            end
            else begin
               // op:_delay/OP271
               if_clear_1d <= pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_2d
         // at: pw_feature_addr_gen.h:298:7
         // at: pw_feature_addr_gen.h:349:7
         // at: pw_feature_addr_gen.h:350:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP121
               if_clear_2d <= 1'b0;
            end
            else begin
               // op:_delay/OP270
               if_clear_2d <= if_clear_1d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_3d
         // at: pw_feature_addr_gen.h:299:7
         // at: pw_feature_addr_gen.h:350:7
         // at: pw_feature_addr_gen.h:351:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP122
               if_clear_3d <= 1'b0;
            end
            else begin
               // op:_delay/OP269
               if_clear_3d <= if_clear_2d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_4d
         // at: pw_feature_addr_gen.h:300:7
         // at: pw_feature_addr_gen.h:351:7
         // at: pw_feature_addr_gen.h:352:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP123
               if_clear_4d <= 1'b0;
            end
            else begin
               // op:_delay/OP268
               if_clear_4d <= if_clear_3d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_5d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_5d
         // at: pw_feature_addr_gen.h:301:7
         // at: pw_feature_addr_gen.h:352:7
         // at: pw_feature_addr_gen.h:353:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP124
               if_clear_5d <= 1'b0;
            end
            else begin
               // op:_delay/OP267
               if_clear_5d <= if_clear_4d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_6d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_6d
         // at: pw_feature_addr_gen.h:302:7
         // at: pw_feature_addr_gen.h:353:7
         // at: pw_feature_addr_gen.h:354:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP125
               if_clear_6d <= 1'b0;
            end
            else begin
               // op:_delay/OP266
               if_clear_6d <= if_clear_5d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_7d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_7d
         // at: pw_feature_addr_gen.h:303:7
         // at: pw_feature_addr_gen.h:354:7
         // at: pw_feature_addr_gen.h:355:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_7d
            if (rstn == 1'b0) begin
               // op:_delay/OP126
               if_clear_7d <= 1'b0;
            end
            else begin
               // op:_delay/OP265
               if_clear_7d <= if_clear_6d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_8d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_8d
         // at: pw_feature_addr_gen.h:304:7
         // at: pw_feature_addr_gen.h:355:7
         // at: pw_feature_addr_gen.h:356:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_8d
            if (rstn == 1'b0) begin
               // op:_delay/OP127
               if_clear_8d <= 1'b0;
            end
            else begin
               // op:_delay/OP264
               if_clear_8d <= if_clear_7d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_9d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_9d
         // at: pw_feature_addr_gen.h:305:7
         // at: pw_feature_addr_gen.h:356:7
         // at: pw_feature_addr_gen.h:357:22
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_9d
            if (rstn == 1'b0) begin
               // op:_delay/OP128
               if_clear_9d <= 1'b0;
            end
            else begin
               // op:_delay/OP263
               if_clear_9d <= if_clear_8d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_if_clear_10d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_10d
         // at: pw_feature_addr_gen.h:306:7
         // at: pw_feature_addr_gen.h:357:7
         // at: pw_feature_addr_gen.h:358:22
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_10d
            if (rstn == 1'b0) begin
               // op:_delay/OP129
               if_clear_10d <= 1'b0;
            end
            else begin
               // op:_delay/OP262
               if_clear_10d <= if_clear_9d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_1d
         // at: pw_feature_addr_gen.h:252:49
         // at: pw_feature_addr_gen.h:308:7
         // at: pw_feature_addr_gen.h:360:7
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP131
               systolic_sel_1d <= 8'd000;
            end
            else begin
               // op:_delay/OP260
               systolic_sel_1d <= systolic_sel;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_2d
         // at: pw_feature_addr_gen.h:309:7
         // at: pw_feature_addr_gen.h:361:7
         // at: pw_feature_addr_gen.h:362:25
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP132
               systolic_sel_2d <= 8'd000;
            end
            else begin
               // op:_delay/OP259
               systolic_sel_2d <= systolic_sel_1d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_3d
         // at: pw_feature_addr_gen.h:310:7
         // at: pw_feature_addr_gen.h:362:7
         // at: pw_feature_addr_gen.h:363:25
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP133
               systolic_sel_3d <= 8'd000;
            end
            else begin
               // op:_delay/OP258
               systolic_sel_3d <= systolic_sel_2d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_4d
         // at: pw_feature_addr_gen.h:311:7
         // at: pw_feature_addr_gen.h:363:7
         // at: pw_feature_addr_gen.h:364:25
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP134
               systolic_sel_4d <= 8'd000;
            end
            else begin
               // op:_delay/OP257
               systolic_sel_4d <= systolic_sel_3d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_5d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_5d
         // at: pw_feature_addr_gen.h:312:7
         // at: pw_feature_addr_gen.h:364:7
         // at: pw_feature_addr_gen.h:365:25
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP135
               systolic_sel_5d <= 8'd000;
            end
            else begin
               // op:_delay/OP256
               systolic_sel_5d <= systolic_sel_4d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_6d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_6d
         // at: pw_feature_addr_gen.h:313:7
         // at: pw_feature_addr_gen.h:365:7
         // at: pw_feature_addr_gen.h:366:25
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP136
               systolic_sel_6d <= 8'd000;
            end
            else begin
               // op:_delay/OP255
               systolic_sel_6d <= systolic_sel_5d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_7d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_7d
         // at: pw_feature_addr_gen.h:314:7
         // at: pw_feature_addr_gen.h:366:7
         // at: pw_feature_addr_gen.h:367:25
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_7d
            if (rstn == 1'b0) begin
               // op:_delay/OP137
               systolic_sel_7d <= 8'd000;
            end
            else begin
               // op:_delay/OP254
               systolic_sel_7d <= systolic_sel_6d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_8d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_8d
         // at: pw_feature_addr_gen.h:315:7
         // at: pw_feature_addr_gen.h:367:7
         // at: pw_feature_addr_gen.h:368:25
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_8d
            if (rstn == 1'b0) begin
               // op:_delay/OP138
               systolic_sel_8d <= 8'd000;
            end
            else begin
               // op:_delay/OP253
               systolic_sel_8d <= systolic_sel_7d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_9d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_9d
         // at: pw_feature_addr_gen.h:316:7
         // at: pw_feature_addr_gen.h:368:7
         // at: pw_feature_addr_gen.h:369:26
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_9d
            if (rstn == 1'b0) begin
               // op:_delay/OP139
               systolic_sel_9d <= 8'd000;
            end
            else begin
               // op:_delay/OP252
               systolic_sel_9d <= systolic_sel_8d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_systolic_sel_10d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_systolic_sel_10d
         // at: pw_feature_addr_gen.h:317:7
         // at: pw_feature_addr_gen.h:369:7
         // at: pw_feature_addr_gen.h:370:26
         always @(posedge clk or negedge rstn)
          begin :drive_systolic_sel_10d
            if (rstn == 1'b0) begin
               // op:_delay/OP140
               systolic_sel_10d <= 8'd000;
            end
            else begin
               // op:_delay/OP251
               systolic_sel_10d <= systolic_sel_9d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr_valid_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_pw_feature_addr_valid_1d
         // at: pw_feature_addr_gen.h:319:7
         // at: pw_feature_addr_gen.h:371:7
         // at: pw_feature_addr_gen.h:372:34
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_addr_valid_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP142
               pw_feature_addr_valid_1d <= 1'd0;
            end
            else begin
               // op:_delay/OP249
               pw_feature_addr_valid_1d <= pw_feature_addr_valid;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr_valid_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_pw_feature_addr_valid_2d
         // at: pw_feature_addr_gen.h:320:7
         // at: pw_feature_addr_gen.h:372:7
         // at: pw_feature_addr_gen.h:373:34
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_addr_valid_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP143
               pw_feature_addr_valid_2d <= 1'd0;
            end
            else begin
               // op:_delay/OP248
               pw_feature_addr_valid_2d <= pw_feature_addr_valid_1d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr_valid_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_pw_feature_addr_valid_3d
         // at: pw_feature_addr_gen.h:321:7
         // at: pw_feature_addr_gen.h:373:7
         // at: pw_feature_addr_gen.h:374:34
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_addr_valid_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP144
               pw_feature_addr_valid_3d <= 1'd0;
            end
            else begin
               // op:_delay/OP247
               pw_feature_addr_valid_3d <= pw_feature_addr_valid_2d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr_valid_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_pw_feature_addr_valid_4d
         // at: pw_feature_addr_gen.h:322:7
         // at: pw_feature_addr_gen.h:374:7
         // at: pw_feature_addr_gen.h:375:34
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_addr_valid_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP145
               pw_feature_addr_valid_4d <= 1'd0;
            end
            else begin
               // op:_delay/OP246
               pw_feature_addr_valid_4d <= pw_feature_addr_valid_3d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr_valid_5d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_pw_feature_addr_valid_5d
         // at: pw_feature_addr_gen.h:323:7
         // at: pw_feature_addr_gen.h:375:7
         // at: pw_feature_addr_gen.h:376:34
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_addr_valid_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP146
               pw_feature_addr_valid_5d <= 1'd0;
            end
            else begin
               // op:_delay/OP245
               pw_feature_addr_valid_5d <= pw_feature_addr_valid_4d;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_pw_feature_addr
         // at: pw_feature_addr_gen.h:269:7
         // at: pw_feature_addr_gen.h:271:7
         always @(posedge clk or negedge rstn)
          begin :drive_pw_feature_addr
            if (rstn == 1'b0) begin
               // op:_pw_feature_addr/OP15
               pw_feature_addr <= 32'd0000000000;
            end
            else begin
               // op:_pw_feature_addr/OP17
               pw_feature_addr <= tmp_pw_feature_addr;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_tmp_pw_feature_addr
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_tmp_pw_feature_addr
         // at: pw_feature_addr_gen.h:271:25
         // at: pw_feature_addr_gen.h:260:7
         // at: pw_feature_addr_gen.h:263:7
         always @(posedge clk or negedge rstn)
          begin :drive_tmp_pw_feature_addr
            if (rstn == 1'b0) begin
               // op:_tmp_pw_feature_addr/OP18
               tmp_pw_feature_addr <= 32'd0000000000;
            end
            else begin
               // op:_tmp_pw_feature_addr/OP25
               tmp_pw_feature_addr <= pw_feature_addr_gen_Add3u32u32u32_1_2_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Add_32Ux32U_32U_1_1
         // Resource=pw_feature_addr_gen_Add_32Ux32U_32U_1, Function=add : Inputs=32,32 Outputs=32
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:263:43
         assign pw_feature_addr_gen_Add_32Ux32U_32U_1_1_out1 = sum_if + {16'd00000, sum_ox_slice};

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Add3u32u32u32_1_2
         // Resource=pw_feature_addr_gen_Add3u32u32u32_1, Function=add add : Inputs=32,32,32 Outputs=32
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:263:75
         assign pw_feature_addr_gen_Add3u32u32u32_1_2_out1 = pw_feature_addr_gen_Add_32Ux32U_32U_1_1_out1 + sum_oy + sum_sys;

         // rtl_process:pw_feature_addr_gen/drive_sum_sys
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_sum_sys
         // at: pw_feature_addr_gen.h:263:77
         // at: pw_feature_addr_gen.h:246:7
         // at: pw_feature_addr_gen.h:252:7
         always @(posedge clk or negedge rstn)
          begin :drive_sum_sys
            if (rstn == 1'b0) begin
               // op:_sum_pos/OP34
               sum_sys <= 32'd0000000000;
            end
            else begin
               // op:_sum_pos/OP43
               sum_sys <= pw_feature_addr_gen_Add_32Ux8U_32U_4_3_out1;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_sum_oy
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_sum_oy
         // at: pw_feature_addr_gen.h:263:61
         // at: pw_feature_addr_gen.h:245:7
         // at: pw_feature_addr_gen.h:251:7
         always @(posedge clk or negedge rstn)
          begin :drive_sum_oy
            if (rstn == 1'b0) begin
               // op:_sum_pos/OP33
               sum_oy <= 32'd0000000000;
            end
            else begin
               // op:_sum_pos/OP45
               sum_oy <= pw_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_sum_ox_slice
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_sum_ox_slice
         // at: pw_feature_addr_gen.h:263:45
         // at: pw_feature_addr_gen.h:244:7
         // at: pw_feature_addr_gen.h:250:7
         always @(posedge clk or negedge rstn)
          begin :drive_sum_ox_slice
            if (rstn == 1'b0) begin
               // op:_sum_pos/OP32
               sum_ox_slice <= 16'd00000;
            end
            else begin
               // op:_sum_pos/OP46
               sum_ox_slice <= ox_pos;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_sum_if
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_sum_if
         // at: pw_feature_addr_gen.h:263:29
         // at: pw_feature_addr_gen.h:243:7
         // at: pw_feature_addr_gen.h:249:7
         always @(posedge clk or negedge rstn)
          begin :drive_sum_if
            if (rstn == 1'b0) begin
               // op:_sum_pos/OP31
               sum_if <= 32'd0000000000;
            end
            else begin
               // op:_sum_pos/OP48
               sum_if <= pw_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Add_32Ux8U_32U_4_3
         // Resource=pw_feature_addr_gen_Add_32Ux8U_32U_4, Function=add : Inputs=32,8 Outputs=32
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:252:47
         assign pw_feature_addr_gen_Add_32Ux8U_32U_4_3_out1 = read_feature_base_addr + {24'b000000000000000000000000, systolic_sel_1d};

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Mul_16Ux16U_32U_1_4
         // Resource=pw_feature_addr_gen_Mul_16Ux16U_32U_1, Function=mul : Inputs=16,16 Outputs=32
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:251:30
         assign pw_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1 = {16'b0000000000000000, oy_pos}*{16'b0000000000000000, ox_cnt_max};

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Mul_16Ux16U_32U_1_5
         // Resource=pw_feature_addr_gen_Mul_16Ux16U_32U_1, Function=mul : Inputs=16,16 Outputs=32
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:249:33
         assign pw_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1 = {21'd0000000, if_pos_up_slice}*{16'b0000000000000000, cnt_max};

         // rtl_process:pw_feature_addr_gen/drive_oy_pos
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_oy_pos
         // at: pw_feature_addr_gen.h:251:16
         // at: pw_feature_addr_gen.h:235:7
         // at: pw_feature_addr_gen.h:237:7
         always @(posedge clk or negedge rstn)
          begin :drive_oy_pos
            if (rstn == 1'b0) begin
               // op:_oy_pos/OP55
               oy_pos <= 16'd00000;
            end
            else begin
               // op:_oy_pos/OP57
               oy_pos <= oy_cnt;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_ox_pos
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_ox_pos
         // at: pw_feature_addr_gen.h:250:16
         // at: pw_feature_addr_gen.h:228:7
         // at: pw_feature_addr_gen.h:230:7
         always @(posedge clk or negedge rstn)
          begin :drive_ox_pos
            if (rstn == 1'b0) begin
               // op:_ox_pos/OP58
               ox_pos <= 16'd00000;
            end
            else begin
               // op:_ox_pos/OP60
               ox_pos <= ox_cnt;
            end
         end

         // rtl_process:pw_feature_addr_gen/drive_of_cnt
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_of_cnt
         // at: pw_feature_addr_gen.h:206:39
         // at: pw_feature_addr_gen.h:211:7
         // at: pw_feature_addr_gen.h:216:7
         always @(posedge clk or negedge rstn)
          begin :drive_of_cnt
            if (rstn == 1'b0) begin
               // op:_of_counter/OP412
               of_cnt <= 16'd00000;
            end
            else begin
               // op:_of_counter/OP419
               of_cnt <= pw_feature_addr_gen_Muxi0u16u1_4_34_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_MuxAdd2i32u16u16u1_1
         always @(of_cnt or pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1)
          begin :pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1) begin
               pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1 = of_cnt + 16'd00032;
            end
            else begin
               pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1 = of_cnt;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Muxi0u16u1_4
         always @(pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1 or pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1)
          begin :pw_feature_addr_gen_Muxi0u16u1_4_34
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1) begin
               pw_feature_addr_gen_Muxi0u16u1_4_34_out1 = 16'd00000;
            end
            else begin
               pw_feature_addr_gen_Muxi0u16u1_4_34_out1 = pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_EqSubi32u16u16_1_31
         // Resource=pw_feature_addr_gen_EqSubi32u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:206:53
         assign pw_feature_addr_gen_EqSubi32u16u16_1_31_out1 = {1'b0, of_cnt} == {1'b0, of_cnt_max} - 17'd000032;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_1_32
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:206:35
         assign pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1 = pw_feature_addr_gen_EqSubi32u16u16_1_31_out1 & pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1;

         // rtl_process:pw_feature_addr_gen/drive_oy_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_oy_cnt
         // at: pw_feature_addr_gen.h:200:7
         // at: pw_feature_addr_gen.h:196:7
         always @(posedge clk or negedge rstn)
          begin :drive_oy_cnt
            if (rstn == 1'b0) begin
               // op:_oy_counter/OP387
               oy_cnt <= 16'd00000;
            end
            else begin
               // op:_oy_counter/OP394
               oy_cnt <= pw_feature_addr_gen_Muxi0u16u1_4_30_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_MuxAdd2i1u16u16u1_1
         always @(oy_cnt or pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1)
          begin :pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1) begin
               pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1 = oy_cnt + 16'd00001;
            end
            else begin
               pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1 = oy_cnt;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Muxi0u16u1_4
         always @(pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1 or pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1)
          begin :pw_feature_addr_gen_Muxi0u16u1_4_30
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1) begin
               pw_feature_addr_gen_Muxi0u16u1_4_30_out1 = 16'd00000;
            end
            else begin
               pw_feature_addr_gen_Muxi0u16u1_4_30_out1 = pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_EqSubi1u16u16_1_27
         // Resource=pw_feature_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:191:53
         assign pw_feature_addr_gen_EqSubi1u16u16_1_27_out1 = {1'b0, oy_cnt} == {1'b0, oy_cnt_max} - 17'd000001;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_1_28
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:191:35
         assign pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1 = pw_feature_addr_gen_EqSubi1u16u16_1_27_out1 & pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1;

         // rtl_process:pw_feature_addr_gen/drive_ox_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_ox_cnt
         // at: pw_feature_addr_gen.h:186:7
         // at: pw_feature_addr_gen.h:182:7
         always @(posedge clk or negedge rstn)
          begin :drive_ox_cnt
            if (rstn == 1'b0) begin
               // op:_ox_counter/OP358
               ox_cnt <= 16'd00000;
            end
            else begin
               // op:_ox_counter/OP367
               ox_cnt <= pw_feature_addr_gen_Muxi0u16u1_4_26_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Add_16Ux8U_16U_4_24
         // Resource=pw_feature_addr_gen_Add_16Ux8U_16U_4, Function=add : Inputs=16,8 Outputs=16
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:186:30
         assign pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1 = ox_cnt + {8'b00000000, systolic_depth};

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_N_Mux_16_2_27_4
         always @(ox_cnt or pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1 or pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1)
          begin :pw_feature_addr_gen_N_Mux_16_2_27_4_25
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1) begin
               pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1 = pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1;
            end
            else begin
               pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1 = ox_cnt;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Muxi0u16u1_4
         always @(pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1 or pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1)
          begin :pw_feature_addr_gen_Muxi0u16u1_4_26
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1) begin
               pw_feature_addr_gen_Muxi0u16u1_4_26_out1 = 16'd00000;
            end
            else begin
               pw_feature_addr_gen_Muxi0u16u1_4_26_out1 = pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_EqSubu8u16u16_1_22
         // Resource=pw_feature_addr_gen_EqSubu8u16u16_1, Function=sub eq : Inputs=16,16,8 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:177:53
         assign pw_feature_addr_gen_EqSubu8u16u16_1_22_out1 = {1'b0, ox_cnt} == {1'b0, ox_cnt_max} - {9'b000000000, systolic_depth};

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_1_23
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:177:35
         assign pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1 = pw_feature_addr_gen_EqSubu8u16u16_1_22_out1 & pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1;

         // rtl_process:pw_feature_addr_gen/drive_if_cnt
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt
         // at: pw_feature_addr_gen.h:172:7
         // at: pw_feature_addr_gen.h:168:7
         // at: pw_feature_addr_gen.h:425:49
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt
            if (rstn == 1'b0) begin
               // op:_if_counter/OP292
               if_cnt <= 16'd00000;
            end
            else begin
               // op:_if_counter/OP299
               if_cnt <= pw_feature_addr_gen_Muxi0u16u1_4_12_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_MuxAdd2i1u16u16u1_4
         always @(run or if_cnt)
          begin :pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11
            if (run) begin
               pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 = if_cnt + 16'd00001;
            end
            else begin
               pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 = if_cnt;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Muxi0u16u1_4
         always @(pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1 or pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1)
          begin :pw_feature_addr_gen_Muxi0u16u1_4_12
            if (pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1) begin
               pw_feature_addr_gen_Muxi0u16u1_4_12_out1 = 16'd00000;
            end
            else begin
               pw_feature_addr_gen_Muxi0u16u1_4_12_out1 = pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_EqSubi1u16u16_1_9
         // Resource=pw_feature_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:163:53
         assign pw_feature_addr_gen_EqSubi1u16u16_1_9_out1 = {1'b0, if_cnt} == {1'b0, if_cnt_max} - 17'd000001;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_1_10
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:163:35
         assign pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1 = pw_feature_addr_gen_EqSubi1u16u16_1_9_out1 & run;

         // rtl_process:pw_feature_addr_gen/drive_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_cnt_max
         // at: pw_feature_addr_gen.h:249:35
         // at: pw_feature_addr_gen.h:155:5
         always @(posedge clk)
          begin :drive_cnt_max
            // op:_set_max_num/OP72
            cnt_max <= pw_feature_addr_gen_Mul_16Ux16U_16U_4_6_out1;
         end

         // rtl_process:pw_feature_addr_gen/drive_if_pos_up_slice
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_if_pos_up_slice
         // at: pw_feature_addr_gen.h:249:16
         // at: pw_feature_addr_gen.h:157:5
         always @(posedge clk)
          begin :drive_if_pos_up_slice
            // op:_set_max_num/OP70
            if_pos_up_slice <= if_cnt[15:5];
         end

         // rtl_process:pw_feature_addr_gen/drive_ox_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_ox_cnt_max
         // at: pw_feature_addr_gen.h:251:32
         // at: pw_feature_addr_gen.h:152:5
         // at: pw_feature_addr_gen.h:177:56
         always @(posedge clk)
          begin :drive_ox_cnt_max
            // op:_set_max_num/OP75
            ox_cnt_max <= out_feature_width;
         end

         // rtl_process:pw_feature_addr_gen/drive_of_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_of_cnt_max
         // at: pw_feature_addr_gen.h:154:5
         // at: pw_feature_addr_gen.h:206:56
         always @(posedge clk)
          begin :drive_of_cnt_max
            // op:_set_max_num/OP73
            of_cnt_max <= out_feature_channel;
         end

         // rtl_process:pw_feature_addr_gen/drive_oy_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_oy_cnt_max
         // at: pw_feature_addr_gen.h:153:5
         // at: pw_feature_addr_gen.h:191:56
         always @(posedge clk)
          begin :drive_oy_cnt_max
            // op:_set_max_num/OP74
            oy_cnt_max <= out_feature_height;
         end

         // rtl_process:pw_feature_addr_gen/drive_if_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_if_cnt_max
         // at: pw_feature_addr_gen.h:151:5
         // at: pw_feature_addr_gen.h:163:56
         always @(posedge clk)
          begin :drive_if_cnt_max
            // op:_set_max_num/OP76
            if_cnt_max <= feature_channel;
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Mul_16Ux16U_16U_4_6
         // Resource=pw_feature_addr_gen_Mul_16Ux16U_16U_4, Function=mul : Inputs=16,16 Outputs=16
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:155:33
         assign pw_feature_addr_gen_Mul_16Ux16U_16U_4_6_out1 = ox_cnt_max*oy_cnt_max;

         // rtl_process:pw_feature_addr_gen/drive_run
         // Sharing or Control mux
         // Sharing/Controlling 8 operation(s) on drive_run
         // at: pw_feature_addr_gen.h:162:5
         // at: pw_feature_addr_gen.h:171:14
         // at: pw_feature_addr_gen.h:425:27
         // at: pw_feature_addr_gen.h:142:7
         // at: pw_feature_addr_gen.h:146:7
         // at: pw_feature_addr_gen.h:162:17
         // at: pw_feature_addr_gen.h:328:16
         // at: pw_feature_addr_gen.h:424:49
         always @(posedge clk or negedge rstn)
          begin :drive_run
            if (rstn == 1'b0) begin
               // op:_run/OP79
               run <= 1'b0;
            end
            else begin
               // op:_run/OP84
               run <= pw_feature_addr_gen_And_1Ux1U_1U_4_8_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Not_1U_1U_4_7
         // Resource=pw_feature_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:143:10
         assign pw_feature_addr_gen_Not_1U_1U_4_7_out1 = !stop;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_4_8
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:143:10
         assign pw_feature_addr_gen_And_1Ux1U_1U_4_8_out1 = pw_feature_addr_gen_Not_1U_1U_4_7_out1 & enable;

         // rtl_process:pw_feature_addr_gen/drive_enable
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_enable
         // at: pw_feature_addr_gen.h:146:13
         // at: pw_feature_addr_gen.h:133:7
         // at: pw_feature_addr_gen.h:137:7
         always @(posedge clk or negedge rstn)
          begin :drive_enable
            if (rstn == 1'b0) begin
               // op:_enable/OP432
               enable <= 1'b0;
            end
            else begin
               // op:_enable/OP446
               enable <= pw_feature_addr_gen_Or_1Ux1U_1U_4_42_out1;
            end
         end

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Eqi1u16_4_36
         // Resource=pw_feature_addr_gen_Eqi1u16_4, Function=eq : Inputs=16 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:134:62
         assign pw_feature_addr_gen_Eqi1u16_4_36_out1 = filter_width == 16'd00001;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Not_1U_1U_4_37
         // Resource=pw_feature_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:136:10
         assign pw_feature_addr_gen_Not_1U_1U_4_37_out1 = !pw_feature_addr_gen_AndReduction_4S_1U_1_35_out1;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_4_38
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:134:39
         assign pw_feature_addr_gen_And_1Ux1U_1U_4_38_out1 = pw_feature_addr_gen_Eqi1u16_4_36_out1 & start_rising;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Eqi1u16_4_39
         // Resource=pw_feature_addr_gen_Eqi1u16_4, Function=eq : Inputs=16 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:134:91
         assign pw_feature_addr_gen_Eqi1u16_4_39_out1 = filter_height == 16'd00001;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_4_40
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:136:10
         assign pw_feature_addr_gen_And_1Ux1U_1U_4_40_out1 = pw_feature_addr_gen_Not_1U_1U_4_37_out1 & enable;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_And_1Ux1U_1U_4_41
         // Resource=pw_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:134:67
         assign pw_feature_addr_gen_And_1Ux1U_1U_4_41_out1 = pw_feature_addr_gen_Eqi1u16_4_39_out1 & pw_feature_addr_gen_And_1Ux1U_1U_4_38_out1;

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_Or_1Ux1U_1U_4_42
         // Resource=pw_feature_addr_gen_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:134:10
         assign pw_feature_addr_gen_Or_1Ux1U_1U_4_42_out1 = pw_feature_addr_gen_And_1Ux1U_1U_4_41_out1 | pw_feature_addr_gen_And_1Ux1U_1U_4_40_out1;

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1
         // at: pw_feature_addr_gen.h:128:68
         assign pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1 = {{pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1, pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1}, {pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1, pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1}};

         // rtl_instance:pw_feature_addr_gen/pw_feature_addr_gen_AndReduction_4S_1U_1_35
         // Resource=pw_feature_addr_gen_AndReduction_4S_1U_1, Function=and : Inputs=4S Outputs=1
         // Implements 1 operation(s)
         // at: pw_feature_addr_gen.h:128:68
         assign pw_feature_addr_gen_AndReduction_4S_1U_1_35_out1 = (&pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1);

         // rtl_process:pw_feature_addr_gen/drive_pw_feature_data_sel
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_pw_feature_data_sel
         // at: pw_feature_addr_gen.h:409:7
         // at: pw_feature_addr_gen.h:412:7
         assign pw_feature_data_sel = {11'b00000000000, pw_feature_data_sel_slice};


endmodule


