// Generated by stratus_hls 19.10-p100  (91500.011111)
// Thu Jan 28 16:06:32 2021
// from pw_feature_addr_gen.cpp
#include "pw_feature_addr_gen_rtl.h"

struct pw_feature_addr_gen;
pw_feature_addr_gen::pw_feature_addr_gen(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rstn("rstn")
    ,stop("stop")
    ,start("start")
    ,start_rising("start_rising")
    ,systolic_en("systolic_en")
    ,systolic_depth("systolic_depth")
    ,feature_width("feature_width")
    ,feature_height("feature_height")
    ,feature_channel("feature_channel")
    ,out_feature_width("out_feature_width")
    ,out_feature_height("out_feature_height")
    ,out_feature_channel("out_feature_channel")
    ,filter_width("filter_width")
    ,filter_height("filter_height")
    ,filter_channel("filter_channel")
    ,filter_number("filter_number")
    ,read_feature_base_addr("read_feature_base_addr")
    ,pw_feature_addr("pw_feature_addr")
    ,pw_feature_addr_valid("pw_feature_addr_valid")
    ,pw_feature_data_valid("pw_feature_data_valid")
    ,pw_cache_en("pw_cache_en")
    ,pw_feature_data_sel("pw_feature_data_sel")
    ,pw_addr_if_start("pw_addr_if_start")
    ,systolic_sel_12d("systolic_sel_12d")
    ,pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1("pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_4_41_out1("pw_feature_addr_gen_And_1Ux1U_1U_4_41_out1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_4_40_out1("pw_feature_addr_gen_And_1Ux1U_1U_4_40_out1")
    ,pw_feature_addr_gen_Eqi1u16_4_39_out1("pw_feature_addr_gen_Eqi1u16_4_39_out1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_4_38_out1("pw_feature_addr_gen_And_1Ux1U_1U_4_38_out1")
    ,pw_feature_addr_gen_Not_1U_1U_4_37_out1("pw_feature_addr_gen_Not_1U_1U_4_37_out1")
    ,pw_feature_addr_gen_AndReduction_4S_1U_1_35_out1("pw_feature_addr_gen_AndReduction_4S_1U_1_35_out1")
    ,pw_feature_addr_gen_Eqi1u16_4_36_out1("pw_feature_addr_gen_Eqi1u16_4_36_out1")
    ,pw_feature_addr_gen_Or_1Ux1U_1U_4_42_out1("pw_feature_addr_gen_Or_1Ux1U_1U_4_42_out1")
    ,enable("enable")
    ,pw_feature_addr_gen_Not_1U_1U_4_7_out1("pw_feature_addr_gen_Not_1U_1U_4_7_out1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_4_8_out1("pw_feature_addr_gen_And_1Ux1U_1U_4_8_out1")
    ,pw_feature_addr_gen_Mul_16Ux16U_16U_4_6_out1("pw_feature_addr_gen_Mul_16Ux16U_16U_4_6_out1")
    ,pw_feature_addr_gen_EqSubi1u16u16_1_9_out1("pw_feature_addr_gen_EqSubi1u16u16_1_9_out1")
    ,if_cnt_max("if_cnt_max")
    ,pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1("pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1")
    ,pw_feature_addr_gen_Muxi0u16u1_4_12_out1("pw_feature_addr_gen_Muxi0u16u1_4_12_out1")
    ,pw_feature_addr_gen_EqSubu8u16u16_1_22_out1("pw_feature_addr_gen_EqSubu8u16u16_1_22_out1")
    ,pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1("pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1")
    ,pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1("pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1")
    ,pw_feature_addr_gen_Muxi0u16u1_4_26_out1("pw_feature_addr_gen_Muxi0u16u1_4_26_out1")
    ,pw_feature_addr_gen_EqSubi1u16u16_1_27_out1("pw_feature_addr_gen_EqSubi1u16u16_1_27_out1")
    ,oy_cnt_max("oy_cnt_max")
    ,pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1("pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1("pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1")
    ,pw_feature_addr_gen_Muxi0u16u1_4_30_out1("pw_feature_addr_gen_Muxi0u16u1_4_30_out1")
    ,pw_feature_addr_gen_EqSubi32u16u16_1_31_out1("pw_feature_addr_gen_EqSubi32u16u16_1_31_out1")
    ,of_cnt_max("of_cnt_max")
    ,pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1("pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1")
    ,pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1("pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1("pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1")
    ,pw_feature_addr_gen_Muxi0u16u1_4_34_out1("pw_feature_addr_gen_Muxi0u16u1_4_34_out1")
    ,of_cnt("of_cnt")
    ,ox_cnt("ox_cnt")
    ,oy_cnt("oy_cnt")
    ,cnt_max("cnt_max")
    ,if_pos_up_slice("if_pos_up_slice")
    ,ox_cnt_max("ox_cnt_max")
    ,oy_pos("oy_pos")
    ,pw_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1("pw_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1")
    ,ox_pos("ox_pos")
    ,pw_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1("pw_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1")
    ,pw_feature_addr_gen_Add_32Ux8U_32U_4_3_out1("pw_feature_addr_gen_Add_32Ux8U_32U_4_3_out1")
    ,sum_sys("sum_sys")
    ,sum_oy("sum_oy")
    ,pw_feature_addr_gen_Add_32Ux32U_32U_1_1_out1("pw_feature_addr_gen_Add_32Ux32U_32U_1_1_out1")
    ,sum_ox_slice("sum_ox_slice")
    ,sum_if("sum_if")
    ,pw_feature_addr_gen_Add3u32u32u32_1_2_out1("pw_feature_addr_gen_Add3u32u32u32_1_2_out1")
    ,tmp_pw_feature_addr("tmp_pw_feature_addr")
    ,pw_feature_addr_valid_4d("pw_feature_addr_valid_4d")
    ,pw_feature_addr_valid_3d("pw_feature_addr_valid_3d")
    ,pw_feature_addr_valid_2d("pw_feature_addr_valid_2d")
    ,pw_feature_addr_valid_1d("pw_feature_addr_valid_1d")
    ,systolic_sel_10d("systolic_sel_10d")
    ,systolic_sel_9d("systolic_sel_9d")
    ,systolic_sel_8d("systolic_sel_8d")
    ,systolic_sel_7d("systolic_sel_7d")
    ,systolic_sel_6d("systolic_sel_6d")
    ,systolic_sel_5d("systolic_sel_5d")
    ,systolic_sel_4d("systolic_sel_4d")
    ,systolic_sel_3d("systolic_sel_3d")
    ,systolic_sel_2d("systolic_sel_2d")
    ,systolic_sel_1d("systolic_sel_1d")
    ,if_clear_9d("if_clear_9d")
    ,if_clear_8d("if_clear_8d")
    ,if_clear_7d("if_clear_7d")
    ,if_clear_6d("if_clear_6d")
    ,if_clear_5d("if_clear_5d")
    ,if_clear_4d("if_clear_4d")
    ,if_clear_3d("if_clear_3d")
    ,if_clear_2d("if_clear_2d")
    ,pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1("pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1")
    ,if_clear_1d("if_clear_1d")
    ,if_cnt_8d_slice("if_cnt_8d_slice")
    ,if_cnt_7d_slice("if_cnt_7d_slice")
    ,if_cnt_6d_slice("if_cnt_6d_slice")
    ,if_cnt_5d_slice("if_cnt_5d_slice")
    ,if_cnt_4d_slice("if_cnt_4d_slice")
    ,if_cnt_3d_slice("if_cnt_3d_slice")
    ,if_cnt_2d_slice("if_cnt_2d_slice")
    ,if_cnt_1d_slice("if_cnt_1d_slice")
    ,run_8d("run_8d")
    ,run_7d("run_7d")
    ,run_6d("run_6d")
    ,run_5d("run_5d")
    ,run_4d("run_4d")
    ,run_1d("run_1d")
    ,run_2d("run_2d")
    ,run_9d("run_9d")
    ,pw_feature_addr_valid_5d("pw_feature_addr_valid_5d")
    ,if_cnt_9d_slice("if_cnt_9d_slice")
    ,if_clear_10d("if_clear_10d")
    ,systolic_sel_11d("systolic_sel_11d")
    ,run_3d("run_3d")
    ,run_10d("run_10d")
    ,pw_feature_addr_valid_6d("pw_feature_addr_valid_6d")
    ,if_cnt_10d_slice("if_cnt_10d_slice")
    ,pw_feature_data_sel_slice("pw_feature_data_sel_slice")
    ,if_clear_11d("if_clear_11d")
    ,pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16_out1("pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16_out1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_4_15_out1("pw_feature_addr_gen_And_1Ux1U_1U_4_15_out1")
    ,run("run")
    ,pw_feature_addr_gen_Eqi31u5_1_14_out1("pw_feature_addr_gen_Eqi31u5_1_14_out1")
    ,if_cnt("if_cnt")
    ,pw_feature_addr_gen_OrReduction_8U_1U_1_13_out1("pw_feature_addr_gen_OrReduction_8U_1U_1_13_out1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1("pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1")
    ,pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1("pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1")
    ,pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1("pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1")
    ,pw_feature_addr_gen_Add2i1u8_4_19_out1("pw_feature_addr_gen_Add2i1u8_4_19_out1")
    ,pw_feature_addr_gen_Muxi0u8u1_4_21_out1("pw_feature_addr_gen_Muxi0u8u1_4_21_out1")
    ,systolic_sel("systolic_sel")
{
  SC_METHOD(drive_systolic_sel);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_Add2i1u8_4_19);
  sensitive << ( systolic_sel );

  SC_METHOD(pw_feature_addr_gen_N_Mux_8_2_20_4_20);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1 );
  sensitive << ( pw_feature_addr_gen_Add2i1u8_4_19_out1 );
  sensitive << ( systolic_sel );

  SC_METHOD(pw_feature_addr_gen_Muxi0u8u1_4_21);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1 );
  sensitive << ( pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1 );

  SC_METHOD(pw_feature_addr_gen_OrReduction_8U_1U_1_13);
  sensitive << ( systolic_en );

  SC_METHOD(pw_feature_addr_gen_Eqi31u5_1_14);
  sensitive << ( if_cnt );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_4_15);
  sensitive << ( run );
  sensitive << ( pw_feature_addr_gen_OrReduction_8U_1U_1_13_out1 );

  SC_METHOD(pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16);
  sensitive << ( systolic_depth );
  sensitive << ( systolic_sel );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_1_17);
  sensitive << ( run );
  sensitive << ( pw_feature_addr_gen_Eqi31u5_1_14_out1 );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_1_18);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_4_15_out1 );
  sensitive << ( pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16_out1 );

  SC_METHOD(drive_pw_addr_if_start);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_data_sel_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_data_valid);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_cache_en);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_addr_valid);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_12d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_11d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_10d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_addr_valid_6d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_10d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_3d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_2d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_4d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_5d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_6d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_7d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_8d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_9d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_1d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_2d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_3d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_4d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_5d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_6d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_7d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_8d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_cnt_9d_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_2d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_3d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_4d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_5d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_6d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_7d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_8d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_9d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_clear_10d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_2d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_3d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_4d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_5d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_6d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_7d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_8d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_9d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_10d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_systolic_sel_11d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_addr_valid_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_addr_valid_2d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_addr_valid_3d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_addr_valid_4d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_addr_valid_5d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_pw_feature_addr);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_tmp_pw_feature_addr);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_Add_32Ux32U_32U_1_1);
  sensitive << ( sum_ox_slice );
  sensitive << ( sum_if );

  SC_METHOD(pw_feature_addr_gen_Add3u32u32u32_1_2);
  sensitive << ( sum_sys );
  sensitive << ( sum_oy );
  sensitive << ( pw_feature_addr_gen_Add_32Ux32U_32U_1_1_out1 );

  SC_METHOD(drive_sum_sys);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_sum_oy);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_sum_ox_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_sum_if);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_Add_32Ux8U_32U_4_3);
  sensitive << ( systolic_sel_1d );
  sensitive << ( read_feature_base_addr );

  SC_METHOD(pw_feature_addr_gen_Mul_16Ux16U_32U_1_4);
  sensitive << ( ox_cnt_max );
  sensitive << ( oy_pos );

  SC_METHOD(pw_feature_addr_gen_Mul_16Ux16U_32U_1_5);
  sensitive << ( cnt_max );
  sensitive << ( if_pos_up_slice );

  SC_METHOD(drive_oy_pos);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_ox_pos);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_of_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1 );
  sensitive << ( of_cnt );

  SC_METHOD(pw_feature_addr_gen_Muxi0u16u1_4_34);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1 );
  sensitive << ( pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1 );

  SC_METHOD(pw_feature_addr_gen_EqSubi32u16u16_1_31);
  sensitive << ( of_cnt_max );
  sensitive << ( of_cnt );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_1_32);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1 );
  sensitive << ( pw_feature_addr_gen_EqSubi32u16u16_1_31_out1 );

  SC_METHOD(drive_oy_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1 );
  sensitive << ( oy_cnt );

  SC_METHOD(pw_feature_addr_gen_Muxi0u16u1_4_30);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1 );
  sensitive << ( pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1 );

  SC_METHOD(pw_feature_addr_gen_EqSubi1u16u16_1_27);
  sensitive << ( oy_cnt_max );
  sensitive << ( oy_cnt );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_1_28);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1 );
  sensitive << ( pw_feature_addr_gen_EqSubi1u16u16_1_27_out1 );

  SC_METHOD(drive_ox_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_Add_16Ux8U_16U_4_24);
  sensitive << ( systolic_depth );
  sensitive << ( ox_cnt );

  SC_METHOD(pw_feature_addr_gen_N_Mux_16_2_27_4_25);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1 );
  sensitive << ( pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1 );
  sensitive << ( ox_cnt );

  SC_METHOD(pw_feature_addr_gen_Muxi0u16u1_4_26);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1 );
  sensitive << ( pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1 );

  SC_METHOD(pw_feature_addr_gen_EqSubu8u16u16_1_22);
  sensitive << ( systolic_depth );
  sensitive << ( ox_cnt_max );
  sensitive << ( ox_cnt );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_1_23);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1 );
  sensitive << ( pw_feature_addr_gen_EqSubu8u16u16_1_22_out1 );

  SC_METHOD(drive_if_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11);
  sensitive << ( run );
  sensitive << ( if_cnt );

  SC_METHOD(pw_feature_addr_gen_Muxi0u16u1_4_12);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1 );
  sensitive << ( pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 );

  SC_METHOD(pw_feature_addr_gen_EqSubi1u16u16_1_9);
  sensitive << ( if_cnt_max );
  sensitive << ( if_cnt );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_1_10);
  sensitive << ( run );
  sensitive << ( pw_feature_addr_gen_EqSubi1u16u16_1_9_out1 );

  SC_METHOD(drive_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_if_pos_up_slice);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_ox_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_of_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_oy_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_if_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_Mul_16Ux16U_16U_4_6);
  sensitive << ( oy_cnt_max );
  sensitive << ( ox_cnt_max );

  SC_METHOD(drive_run);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_Not_1U_1U_4_7);
  sensitive << ( stop );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_4_8);
  sensitive << ( enable );
  sensitive << ( pw_feature_addr_gen_Not_1U_1U_4_7_out1 );

  SC_METHOD(drive_enable);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(pw_feature_addr_gen_Eqi1u16_4_36);
  sensitive << ( filter_width );

  SC_METHOD(pw_feature_addr_gen_Not_1U_1U_4_37);
  sensitive << ( pw_feature_addr_gen_AndReduction_4S_1U_1_35_out1 );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_4_38);
  sensitive << ( start_rising );
  sensitive << ( pw_feature_addr_gen_Eqi1u16_4_36_out1 );

  SC_METHOD(pw_feature_addr_gen_Eqi1u16_4_39);
  sensitive << ( filter_height );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_4_40);
  sensitive << ( enable );
  sensitive << ( pw_feature_addr_gen_Not_1U_1U_4_37_out1 );

  SC_METHOD(pw_feature_addr_gen_And_1Ux1U_1U_4_41);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_4_38_out1 );
  sensitive << ( pw_feature_addr_gen_Eqi1u16_4_39_out1 );

  SC_METHOD(pw_feature_addr_gen_Or_1Ux1U_1U_4_42);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_4_40_out1 );
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_4_41_out1 );

  SC_METHOD(drive_pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1);
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1 );
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1 );
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1 );
  sensitive << ( pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1 );

  SC_METHOD(pw_feature_addr_gen_AndReduction_4S_1U_1_35);
  sensitive << ( pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1 );

  SC_METHOD(drive_pw_feature_data_sel);
  sensitive << ( pw_feature_data_sel_slice );

}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel = 0ULL;
  } else {
    systolic_sel = pw_feature_addr_gen_Muxi0u8u1_4_21_out1.read();
  }
}
// resource: pw_feature_addr_gen_Add2i1u8_4  instance: pw_feature_addr_gen_Add2i1u8_4_19
void pw_feature_addr_gen::pw_feature_addr_gen_Add2i1u8_4_19(){
  pw_feature_addr_gen_Add2i1u8_4_19_out1 = (systolic_sel.read() + 1ULL);
}
// resource: pw_feature_addr_gen_N_Mux_8_2_20_4
void pw_feature_addr_gen::pw_feature_addr_gen_N_Mux_8_2_20_4_20(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1.read() ) {
    pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1 = pw_feature_addr_gen_Add2i1u8_4_19_out1
                                                 .read();
  } else {
    pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1 = systolic_sel.read();
  }
}
// resource: pw_feature_addr_gen_Muxi0u8u1_4
void pw_feature_addr_gen::pw_feature_addr_gen_Muxi0u8u1_4_21(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1.read() ) {
    pw_feature_addr_gen_Muxi0u8u1_4_21_out1 = 0ULL;
  } else {
    pw_feature_addr_gen_Muxi0u8u1_4_21_out1 = pw_feature_addr_gen_N_Mux_8_2_20_4_20_out1
                                              .read();
  }
}
// resource: pw_feature_addr_gen_OrReduction_8U_1U_1  instance: pw_feature_addr_gen_OrReduction_8U_1U_1_13
void pw_feature_addr_gen::pw_feature_addr_gen_OrReduction_8U_1U_1_13(){
  pw_feature_addr_gen_OrReduction_8U_1U_1_13_out1 = (sc_uint<1> ) (((sc_uint<8>)
                                                    systolic_en.read())
                                                    .or_reduce());
}
// resource: pw_feature_addr_gen_Eqi31u5_1  instance: pw_feature_addr_gen_Eqi31u5_1_14
void pw_feature_addr_gen::pw_feature_addr_gen_Eqi31u5_1_14(){
  pw_feature_addr_gen_Eqi31u5_1_14_out1 = ((sc_uint<5> )if_cnt.read() == 31ULL);
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_4  instance: pw_feature_addr_gen_And_1Ux1U_1U_4_15
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_4_15(){
  pw_feature_addr_gen_And_1Ux1U_1U_4_15_out1 = (sc_uint<1> )pw_feature_addr_gen_OrReduction_8U_1U_1_13_out1
                                               .read() & run.read();
}
// resource: pw_feature_addr_gen_LessThan_8Ux8U_1U_1  instance: pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16
void pw_feature_addr_gen::pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16(){
  pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16_out1 = (sc_uint<1> ) (
                                                    (/*imp*/sc_uint<1>)(
                                                    systolic_sel.read() < 
                                                    systolic_depth.read()));
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_1  instance: pw_feature_addr_gen_And_1Ux1U_1U_1_17
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_1_17(){
  pw_feature_addr_gen_And_1Ux1U_1U_1_17_out1 = pw_feature_addr_gen_Eqi31u5_1_14_out1
                                               .read() & run.read();
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_1  instance: pw_feature_addr_gen_And_1Ux1U_1U_1_18
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_1_18(){
  pw_feature_addr_gen_And_1Ux1U_1U_1_18_out1 = (sc_uint<1> )pw_feature_addr_gen_LessThan_8Ux8U_1U_1_16_out1
                                               .read() & pw_feature_addr_gen_And_1Ux1U_1U_4_15_out1
                                               .read();
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_addr_if_start(){
  if ( (rstn.read() == 0ULL) ) {
    pw_addr_if_start = 0ULL;
  } else {
    pw_addr_if_start = (sc_uint<1> ) (if_clear_11d.read());
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_pw_feature_data_sel_slice(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_data_sel_slice = 0ULL;
  } else {
    pw_feature_data_sel_slice = if_cnt_10d_slice.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_feature_data_valid(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_data_valid = 0ULL;
  } else {
    pw_feature_data_valid = pw_feature_addr_valid_6d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_cache_en(){
  if ( (rstn.read() == 0ULL) ) {
    pw_cache_en = 0ULL;
  } else {
    pw_cache_en = (sc_uint<1> ) (run_10d.read());
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_feature_addr_valid(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_addr_valid = 0ULL;
  } else {
    pw_feature_addr_valid = (sc_uint<1> ) (run_3d.read());
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_12d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_12d = 0ULL;
  } else {
    systolic_sel_12d = systolic_sel_11d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_11d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_11d = 0ULL;
  } else {
    if_clear_11d = if_clear_10d.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_10d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_10d_slice = 0ULL;
  } else {
    if_cnt_10d_slice = if_cnt_9d_slice.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_feature_addr_valid_6d(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_addr_valid_6d = 0ULL;
  } else {
    pw_feature_addr_valid_6d = pw_feature_addr_valid_5d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_10d(){
  if ( (rstn.read() == 0ULL) ) {
    run_10d = 0ULL;
  } else {
    run_10d = run_9d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_3d(){
  if ( (rstn.read() == 0ULL) ) {
    run_3d = 0ULL;
  } else {
    run_3d = run_2d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_1d(){
  if ( (rstn.read() == 0ULL) ) {
    run_1d = 0ULL;
  } else {
    run_1d = run.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_2d(){
  if ( (rstn.read() == 0ULL) ) {
    run_2d = 0ULL;
  } else {
    run_2d = run_1d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_4d(){
  if ( (rstn.read() == 0ULL) ) {
    run_4d = 0ULL;
  } else {
    run_4d = run_3d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_5d(){
  if ( (rstn.read() == 0ULL) ) {
    run_5d = 0ULL;
  } else {
    run_5d = run_4d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_6d(){
  if ( (rstn.read() == 0ULL) ) {
    run_6d = 0ULL;
  } else {
    run_6d = run_5d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_7d(){
  if ( (rstn.read() == 0ULL) ) {
    run_7d = 0ULL;
  } else {
    run_7d = run_6d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_8d(){
  if ( (rstn.read() == 0ULL) ) {
    run_8d = 0ULL;
  } else {
    run_8d = run_7d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run_9d(){
  if ( (rstn.read() == 0ULL) ) {
    run_9d = 0ULL;
  } else {
    run_9d = run_8d.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_1d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_1d_slice = 0ULL;
  } else {
    if_cnt_1d_slice = (sc_uint<5> )if_cnt.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_2d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_2d_slice = 0ULL;
  } else {
    if_cnt_2d_slice = if_cnt_1d_slice.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_3d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_3d_slice = 0ULL;
  } else {
    if_cnt_3d_slice = if_cnt_2d_slice.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_4d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_4d_slice = 0ULL;
  } else {
    if_cnt_4d_slice = if_cnt_3d_slice.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_5d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_5d_slice = 0ULL;
  } else {
    if_cnt_5d_slice = if_cnt_4d_slice.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_6d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_6d_slice = 0ULL;
  } else {
    if_cnt_6d_slice = if_cnt_5d_slice.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_7d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_7d_slice = 0ULL;
  } else {
    if_cnt_7d_slice = if_cnt_6d_slice.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_8d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_8d_slice = 0ULL;
  } else {
    if_cnt_8d_slice = if_cnt_7d_slice.read();
  }
}
// resource: regr_ac_5
void pw_feature_addr_gen::drive_if_cnt_9d_slice(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt_9d_slice = 0ULL;
  } else {
    if_cnt_9d_slice = if_cnt_8d_slice.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_1d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_1d = 0ULL;
  } else {
    if_clear_1d = pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_2d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_2d = 0ULL;
  } else {
    if_clear_2d = if_clear_1d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_3d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_3d = 0ULL;
  } else {
    if_clear_3d = if_clear_2d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_4d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_4d = 0ULL;
  } else {
    if_clear_4d = if_clear_3d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_5d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_5d = 0ULL;
  } else {
    if_clear_5d = if_clear_4d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_6d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_6d = 0ULL;
  } else {
    if_clear_6d = if_clear_5d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_7d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_7d = 0ULL;
  } else {
    if_clear_7d = if_clear_6d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_8d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_8d = 0ULL;
  } else {
    if_clear_8d = if_clear_7d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_9d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_9d = 0ULL;
  } else {
    if_clear_9d = if_clear_8d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_if_clear_10d(){
  if ( (rstn.read() == 0ULL) ) {
    if_clear_10d = 0ULL;
  } else {
    if_clear_10d = if_clear_9d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_1d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_1d = 0ULL;
  } else {
    systolic_sel_1d = systolic_sel.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_2d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_2d = 0ULL;
  } else {
    systolic_sel_2d = systolic_sel_1d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_3d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_3d = 0ULL;
  } else {
    systolic_sel_3d = systolic_sel_2d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_4d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_4d = 0ULL;
  } else {
    systolic_sel_4d = systolic_sel_3d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_5d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_5d = 0ULL;
  } else {
    systolic_sel_5d = systolic_sel_4d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_6d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_6d = 0ULL;
  } else {
    systolic_sel_6d = systolic_sel_5d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_7d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_7d = 0ULL;
  } else {
    systolic_sel_7d = systolic_sel_6d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_8d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_8d = 0ULL;
  } else {
    systolic_sel_8d = systolic_sel_7d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_9d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_9d = 0ULL;
  } else {
    systolic_sel_9d = systolic_sel_8d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_10d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_10d = 0ULL;
  } else {
    systolic_sel_10d = systolic_sel_9d.read();
  }
}
// resource: regr_ac_8
void pw_feature_addr_gen::drive_systolic_sel_11d(){
  if ( (rstn.read() == 0ULL) ) {
    systolic_sel_11d = 0ULL;
  } else {
    systolic_sel_11d = systolic_sel_10d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_feature_addr_valid_1d(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_addr_valid_1d = 0ULL;
  } else {
    pw_feature_addr_valid_1d = pw_feature_addr_valid.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_feature_addr_valid_2d(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_addr_valid_2d = 0ULL;
  } else {
    pw_feature_addr_valid_2d = pw_feature_addr_valid_1d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_feature_addr_valid_3d(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_addr_valid_3d = 0ULL;
  } else {
    pw_feature_addr_valid_3d = pw_feature_addr_valid_2d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_feature_addr_valid_4d(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_addr_valid_4d = 0ULL;
  } else {
    pw_feature_addr_valid_4d = pw_feature_addr_valid_3d.read();
  }
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_pw_feature_addr_valid_5d(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_addr_valid_5d = 0ULL;
  } else {
    pw_feature_addr_valid_5d = pw_feature_addr_valid_4d.read();
  }
}
// resource: regr_ac_32
void pw_feature_addr_gen::drive_pw_feature_addr(){
  if ( (rstn.read() == 0ULL) ) {
    pw_feature_addr = 0ULL;
  } else {
    pw_feature_addr = tmp_pw_feature_addr.read();
  }
}
// resource: regr_ac_32
void pw_feature_addr_gen::drive_tmp_pw_feature_addr(){
  if ( (rstn.read() == 0ULL) ) {
    tmp_pw_feature_addr = 0ULL;
  } else {
    tmp_pw_feature_addr = pw_feature_addr_gen_Add3u32u32u32_1_2_out1.read();
  }
}
// resource: pw_feature_addr_gen_Add_32Ux32U_32U_1  instance: pw_feature_addr_gen_Add_32Ux32U_32U_1_1
void pw_feature_addr_gen::pw_feature_addr_gen_Add_32Ux32U_32U_1_1(){
  pw_feature_addr_gen_Add_32Ux32U_32U_1_1_out1 = (sum_if.read() + ( (
                                                 sc_uint<32> )(sc_bv<32>)(
                                                 (sc_bv<16>)(0ULL), 
                                                 (sc_bv<16>)(sum_ox_slice.read()
                                                 )) ));
}
// resource: pw_feature_addr_gen_Add3u32u32u32_1  instance: pw_feature_addr_gen_Add3u32u32u32_1_2
void pw_feature_addr_gen::pw_feature_addr_gen_Add3u32u32u32_1_2(){
  pw_feature_addr_gen_Add3u32u32u32_1_2_out1 = (( (pw_feature_addr_gen_Add_32Ux32U_32U_1_1_out1
                                               .read() + sum_oy.read()) ) + 
                                               sum_sys.read());
}
// resource: regr_ac_32
void pw_feature_addr_gen::drive_sum_sys(){
  if ( (rstn.read() == 0ULL) ) {
    sum_sys = 0ULL;
  } else {
    sum_sys = pw_feature_addr_gen_Add_32Ux8U_32U_4_3_out1.read();
  }
}
// resource: regr_ac_32
void pw_feature_addr_gen::drive_sum_oy(){
  if ( (rstn.read() == 0ULL) ) {
    sum_oy = 0ULL;
  } else {
    sum_oy = pw_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1.read();
  }
}
// resource: regr_ac_16
void pw_feature_addr_gen::drive_sum_ox_slice(){
  if ( (rstn.read() == 0ULL) ) {
    sum_ox_slice = 0ULL;
  } else {
    sum_ox_slice = ox_pos.read();
  }
}
// resource: regr_ac_32
void pw_feature_addr_gen::drive_sum_if(){
  if ( (rstn.read() == 0ULL) ) {
    sum_if = 0ULL;
  } else {
    sum_if = pw_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1.read();
  }
}
// resource: pw_feature_addr_gen_Add_32Ux8U_32U_4  instance: pw_feature_addr_gen_Add_32Ux8U_32U_4_3
void pw_feature_addr_gen::pw_feature_addr_gen_Add_32Ux8U_32U_4_3(){
  pw_feature_addr_gen_Add_32Ux8U_32U_4_3_out1 = (read_feature_base_addr.read()
                                                 + systolic_sel_1d.read());
}
// resource: pw_feature_addr_gen_Mul_16Ux16U_32U_1  instance: pw_feature_addr_gen_Mul_16Ux16U_32U_1_4
void pw_feature_addr_gen::pw_feature_addr_gen_Mul_16Ux16U_32U_1_4(){
  pw_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1 = oy_pos.read() * ox_cnt_max
                                                 .read();
}
// resource: pw_feature_addr_gen_Mul_16Ux16U_32U_1  instance: pw_feature_addr_gen_Mul_16Ux16U_32U_1_5
void pw_feature_addr_gen::pw_feature_addr_gen_Mul_16Ux16U_32U_1_5(){
  pw_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1 = ( (sc_uint<16> )(sc_bv<16>)(
                                                 (sc_bv<5>)(0ULL), 
                                                 (sc_bv<11>)(if_pos_up_slice
                                                 .read())) ) * cnt_max.read();
}
// resource: regr_ac_16
void pw_feature_addr_gen::drive_oy_pos(){
  if ( (rstn.read() == 0ULL) ) {
    oy_pos = 0ULL;
  } else {
    oy_pos = oy_cnt.read();
  }
}
// resource: regr_ac_16
void pw_feature_addr_gen::drive_ox_pos(){
  if ( (rstn.read() == 0ULL) ) {
    ox_pos = 0ULL;
  } else {
    ox_pos = ox_cnt.read();
  }
}
// resource: regr_ac_16
void pw_feature_addr_gen::drive_of_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    of_cnt = 0ULL;
  } else {
    of_cnt = pw_feature_addr_gen_Muxi0u16u1_4_34_out1.read();
  }
}
// resource: pw_feature_addr_gen_MuxAdd2i32u16u16u1_1
void pw_feature_addr_gen::pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1.read() ) {
    pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1 = (of_cnt.read() + 32ULL);
  } else {
    pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1 = of_cnt.read();
  }
}
// resource: pw_feature_addr_gen_Muxi0u16u1_4
void pw_feature_addr_gen::pw_feature_addr_gen_Muxi0u16u1_4_34(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1.read() ) {
    pw_feature_addr_gen_Muxi0u16u1_4_34_out1 = 0ULL;
  } else {
    pw_feature_addr_gen_Muxi0u16u1_4_34_out1 = pw_feature_addr_gen_MuxAdd2i32u16u16u1_1_33_out1
                                               .read();
  }
}
// resource: pw_feature_addr_gen_EqSubi32u16u16_1  instance: pw_feature_addr_gen_EqSubi32u16u16_1_31
void pw_feature_addr_gen::pw_feature_addr_gen_EqSubi32u16u16_1_31(){
  pw_feature_addr_gen_EqSubi32u16u16_1_31_out1 = ((sc_int<17> )of_cnt.read() == 
                                                 of_cnt_max.read() - 32ULL);
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_1  instance: pw_feature_addr_gen_And_1Ux1U_1U_1_32
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_1_32(){
  pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1 = pw_feature_addr_gen_EqSubi32u16u16_1_31_out1
                                               .read() & pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1
                                               .read();
}
// resource: regr_ac_16
void pw_feature_addr_gen::drive_oy_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    oy_cnt = 0ULL;
  } else {
    oy_cnt = pw_feature_addr_gen_Muxi0u16u1_4_30_out1.read();
  }
}
// resource: pw_feature_addr_gen_MuxAdd2i1u16u16u1_1
void pw_feature_addr_gen::pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1.read() ) {
    pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1 = (oy_cnt.read() + 1ULL);
  } else {
    pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1 = oy_cnt.read();
  }
}
// resource: pw_feature_addr_gen_Muxi0u16u1_4
void pw_feature_addr_gen::pw_feature_addr_gen_Muxi0u16u1_4_30(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1.read() ) {
    pw_feature_addr_gen_Muxi0u16u1_4_30_out1 = 0ULL;
  } else {
    pw_feature_addr_gen_Muxi0u16u1_4_30_out1 = pw_feature_addr_gen_MuxAdd2i1u16u16u1_1_29_out1
                                               .read();
  }
}
// resource: pw_feature_addr_gen_EqSubi1u16u16_1  instance: pw_feature_addr_gen_EqSubi1u16u16_1_27
void pw_feature_addr_gen::pw_feature_addr_gen_EqSubi1u16u16_1_27(){
  pw_feature_addr_gen_EqSubi1u16u16_1_27_out1 = ((sc_int<17> )oy_cnt.read() == 
                                                oy_cnt_max.read() - 1ULL);
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_1  instance: pw_feature_addr_gen_And_1Ux1U_1U_1_28
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_1_28(){
  pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1 = pw_feature_addr_gen_EqSubi1u16u16_1_27_out1
                                               .read() & pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1
                                               .read();
}
// resource: regr_ac_16
void pw_feature_addr_gen::drive_ox_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    ox_cnt = 0ULL;
  } else {
    ox_cnt = pw_feature_addr_gen_Muxi0u16u1_4_26_out1.read();
  }
}
// resource: pw_feature_addr_gen_Add_16Ux8U_16U_4  instance: pw_feature_addr_gen_Add_16Ux8U_16U_4_24
void pw_feature_addr_gen::pw_feature_addr_gen_Add_16Ux8U_16U_4_24(){
  pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1 = (ox_cnt.read() + systolic_depth
                                                 .read());
}
// resource: pw_feature_addr_gen_N_Mux_16_2_27_4
void pw_feature_addr_gen::pw_feature_addr_gen_N_Mux_16_2_27_4_25(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1.read() ) {
    pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1 = pw_feature_addr_gen_Add_16Ux8U_16U_4_24_out1
                                                  .read();
  } else {
    pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1 = ox_cnt.read();
  }
}
// resource: pw_feature_addr_gen_Muxi0u16u1_4
void pw_feature_addr_gen::pw_feature_addr_gen_Muxi0u16u1_4_26(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1.read() ) {
    pw_feature_addr_gen_Muxi0u16u1_4_26_out1 = 0ULL;
  } else {
    pw_feature_addr_gen_Muxi0u16u1_4_26_out1 = pw_feature_addr_gen_N_Mux_16_2_27_4_25_out1
                                               .read();
  }
}
// resource: pw_feature_addr_gen_EqSubu8u16u16_1  instance: pw_feature_addr_gen_EqSubu8u16u16_1_22
void pw_feature_addr_gen::pw_feature_addr_gen_EqSubu8u16u16_1_22(){
  pw_feature_addr_gen_EqSubu8u16u16_1_22_out1 = ((sc_int<17> )ox_cnt.read() == 
                                                ox_cnt_max.read() - 
                                                systolic_depth.read());
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_1  instance: pw_feature_addr_gen_And_1Ux1U_1U_1_23
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_1_23(){
  pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1 = pw_feature_addr_gen_EqSubu8u16u16_1_22_out1
                                               .read() & pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1
                                               .read();
}
// resource: regr_ac_16
void pw_feature_addr_gen::drive_if_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt = 0ULL;
  } else {
    if_cnt = pw_feature_addr_gen_Muxi0u16u1_4_12_out1.read();
  }
}
// resource: pw_feature_addr_gen_MuxAdd2i1u16u16u1_4
void pw_feature_addr_gen::pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11(){
  if ( run.read() ) {
    pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 = (if_cnt.read() + 1ULL);
  } else {
    pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 = if_cnt.read();
  }
}
// resource: pw_feature_addr_gen_Muxi0u16u1_4
void pw_feature_addr_gen::pw_feature_addr_gen_Muxi0u16u1_4_12(){
  if ( pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1.read() ) {
    pw_feature_addr_gen_Muxi0u16u1_4_12_out1 = 0ULL;
  } else {
    pw_feature_addr_gen_Muxi0u16u1_4_12_out1 = pw_feature_addr_gen_MuxAdd2i1u16u16u1_4_11_out1
                                               .read();
  }
}
// resource: pw_feature_addr_gen_EqSubi1u16u16_1  instance: pw_feature_addr_gen_EqSubi1u16u16_1_9
void pw_feature_addr_gen::pw_feature_addr_gen_EqSubi1u16u16_1_9(){
  pw_feature_addr_gen_EqSubi1u16u16_1_9_out1 = ((sc_int<17> )if_cnt.read() == 
                                               if_cnt_max.read() - 1ULL);
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_1  instance: pw_feature_addr_gen_And_1Ux1U_1U_1_10
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_1_10(){
  pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1 = pw_feature_addr_gen_EqSubi1u16u16_1_9_out1
                                               .read() & run.read();
}
// resource: regr_16
void pw_feature_addr_gen::drive_cnt_max(){
  cnt_max = pw_feature_addr_gen_Mul_16Ux16U_16U_4_6_out1.read();
}
// resource: regr_11
void pw_feature_addr_gen::drive_if_pos_up_slice(){
  if_pos_up_slice = (sc_uint<11> ) (if_cnt.read().range(15,5));
}
// resource: regr_16
void pw_feature_addr_gen::drive_ox_cnt_max(){
  ox_cnt_max = out_feature_width.read();
}
// resource: regr_16
void pw_feature_addr_gen::drive_of_cnt_max(){
  of_cnt_max = out_feature_channel.read();
}
// resource: regr_16
void pw_feature_addr_gen::drive_oy_cnt_max(){
  oy_cnt_max = out_feature_height.read();
}
// resource: regr_16
void pw_feature_addr_gen::drive_if_cnt_max(){
  if_cnt_max = feature_channel.read();
}
// resource: pw_feature_addr_gen_Mul_16Ux16U_16U_4  instance: pw_feature_addr_gen_Mul_16Ux16U_16U_4_6
void pw_feature_addr_gen::pw_feature_addr_gen_Mul_16Ux16U_16U_4_6(){
  pw_feature_addr_gen_Mul_16Ux16U_16U_4_6_out1 = ox_cnt_max.read() * oy_cnt_max
                                                 .read();
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_run(){
  if ( (rstn.read() == 0ULL) ) {
    run = 0ULL;
  } else {
    run = pw_feature_addr_gen_And_1Ux1U_1U_4_8_out1.read();
  }
}
// resource: pw_feature_addr_gen_Not_1U_1U_4  instance: pw_feature_addr_gen_Not_1U_1U_4_7
void pw_feature_addr_gen::pw_feature_addr_gen_Not_1U_1U_4_7(){
  pw_feature_addr_gen_Not_1U_1U_4_7_out1 = !stop.read();
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_4  instance: pw_feature_addr_gen_And_1Ux1U_1U_4_8
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_4_8(){
  pw_feature_addr_gen_And_1Ux1U_1U_4_8_out1 = (sc_uint<1> )pw_feature_addr_gen_Not_1U_1U_4_7_out1
                                              .read() & enable.read();
}
// resource: regr_ac_1
void pw_feature_addr_gen::drive_enable(){
  if ( (rstn.read() == 0ULL) ) {
    enable = 0ULL;
  } else {
    enable = pw_feature_addr_gen_Or_1Ux1U_1U_4_42_out1.read();
  }
}
// resource: pw_feature_addr_gen_Eqi1u16_4  instance: pw_feature_addr_gen_Eqi1u16_4_36
void pw_feature_addr_gen::pw_feature_addr_gen_Eqi1u16_4_36(){
  pw_feature_addr_gen_Eqi1u16_4_36_out1 = (filter_width.read() == 1ULL);
}
// resource: pw_feature_addr_gen_Not_1U_1U_4  instance: pw_feature_addr_gen_Not_1U_1U_4_37
void pw_feature_addr_gen::pw_feature_addr_gen_Not_1U_1U_4_37(){
  pw_feature_addr_gen_Not_1U_1U_4_37_out1 = !pw_feature_addr_gen_AndReduction_4S_1U_1_35_out1
                                            .read();
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_4  instance: pw_feature_addr_gen_And_1Ux1U_1U_4_38
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_4_38(){
  pw_feature_addr_gen_And_1Ux1U_1U_4_38_out1 = (sc_uint<1> )pw_feature_addr_gen_Eqi1u16_4_36_out1
                                               .read() & start_rising.read();
}
// resource: pw_feature_addr_gen_Eqi1u16_4  instance: pw_feature_addr_gen_Eqi1u16_4_39
void pw_feature_addr_gen::pw_feature_addr_gen_Eqi1u16_4_39(){
  pw_feature_addr_gen_Eqi1u16_4_39_out1 = (filter_height.read() == 1ULL);
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_4  instance: pw_feature_addr_gen_And_1Ux1U_1U_4_40
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_4_40(){
  pw_feature_addr_gen_And_1Ux1U_1U_4_40_out1 = (sc_uint<1> )pw_feature_addr_gen_Not_1U_1U_4_37_out1
                                               .read() & enable.read();
}
// resource: pw_feature_addr_gen_And_1Ux1U_1U_4  instance: pw_feature_addr_gen_And_1Ux1U_1U_4_41
void pw_feature_addr_gen::pw_feature_addr_gen_And_1Ux1U_1U_4_41(){
  pw_feature_addr_gen_And_1Ux1U_1U_4_41_out1 = (sc_uint<1> )pw_feature_addr_gen_Eqi1u16_4_39_out1
                                               .read() & pw_feature_addr_gen_And_1Ux1U_1U_4_38_out1
                                               .read();
}
// resource: pw_feature_addr_gen_Or_1Ux1U_1U_4  instance: pw_feature_addr_gen_Or_1Ux1U_1U_4_42
void pw_feature_addr_gen::pw_feature_addr_gen_Or_1Ux1U_1U_4_42(){
  pw_feature_addr_gen_Or_1Ux1U_1U_4_42_out1 = pw_feature_addr_gen_And_1Ux1U_1U_4_41_out1
                                              .read() | pw_feature_addr_gen_And_1Ux1U_1U_4_40_out1
                                              .read();
}
void pw_feature_addr_gen::drive_pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1(){
  pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1 = (sc_int<4> ) (( (sc_uint<4> 
                                                    )(sc_bv<4>)((sc_bv<2>)(
                                                    (sc_bv<1>)(pw_feature_addr_gen_And_1Ux1U_1U_1_10_out1
                                                    .read()), 
                                                    (sc_bv<1>)(pw_feature_addr_gen_And_1Ux1U_1U_1_23_out1
                                                    .read())), 
                                                    (sc_bv<2>)((sc_bv<1>)(pw_feature_addr_gen_And_1Ux1U_1U_1_28_out1
                                                    .read()), 
                                                    (sc_bv<1>)(pw_feature_addr_gen_And_1Ux1U_1U_1_32_out1
                                                    .read()))) ));
}
// resource: pw_feature_addr_gen_AndReduction_4S_1U_1  instance: pw_feature_addr_gen_AndReduction_4S_1U_1_35
void pw_feature_addr_gen::pw_feature_addr_gen_AndReduction_4S_1U_1_35(){
  pw_feature_addr_gen_AndReduction_4S_1U_1_35_out1 = ((sc_uint<4>)pw_feature_addr_gen_AndReduction_4S_1U_1_35_in1
                                                     .read()).and_reduce();
}
void pw_feature_addr_gen::drive_pw_feature_data_sel(){
  pw_feature_data_sel = (sc_uint<16> ) (pw_feature_data_sel_slice.read());
}
