// Generated by stratus_hls 19.10-p100  (91500.011111)
// Tue Jan 19 17:55:44 2021
// from st_weight_addr_gen.cpp
#include "st_weight_addr_gen_rtl.h"

struct st_weight_addr_gen;
st_weight_addr_gen::st_weight_addr_gen(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rstn("rstn")
    ,stop("stop")
    ,start("start")
    ,start_rising("start_rising")
    ,feature_width("feature_width")
    ,feature_height("feature_height")
    ,feature_channel("feature_channel")
    ,out_feature_width("out_feature_width")
    ,out_feature_height("out_feature_height")
    ,out_feature_channel("out_feature_channel")
    ,filter_width("filter_width")
    ,filter_height("filter_height")
    ,filter_channel("filter_channel")
    ,stride_x("stride_x")
    ,stride_y("stride_y")
    ,pad_top_size("pad_top_size")
    ,pad_bottom_size("pad_bottom_size")
    ,pad_left_size("pad_left_size")
    ,pad_right_size("pad_right_size")
    ,read_weight_base_addr("read_weight_base_addr")
    ,st_weight_addr("st_weight_addr")
    ,st_weight_addr_valid("st_weight_addr_valid")
    ,st_weight_data_valid("st_weight_data_valid")
    ,cache_en("cache_en")
    ,st_weight_addr_gen_AndReduction_2S_1U_1_42_in1("st_weight_addr_gen_AndReduction_2S_1U_1_42_in1")
    ,st_weight_addr_gen_AndReduction_2S_1U_4_41_out1("st_weight_addr_gen_AndReduction_2S_1U_4_41_out1")
    ,st_weight_addr_gen_AndReduction_2S_1U_4_41_in1("st_weight_addr_gen_AndReduction_2S_1U_4_41_in1")
    ,st_weight_addr_gen_AndReduction_4S_1U_1_40_out1("st_weight_addr_gen_AndReduction_4S_1U_1_40_out1")
    ,st_weight_addr_gen_AndReduction_4S_1U_1_40_in1("st_weight_addr_gen_AndReduction_4S_1U_1_40_in1")
    ,st_weight_addr_gen_And_1Ux1U_1U_4_48_out1("st_weight_addr_gen_And_1Ux1U_1U_4_48_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_4_47_out1("st_weight_addr_gen_And_1Ux1U_1U_4_47_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_4_46_out1("st_weight_addr_gen_And_1Ux1U_1U_4_46_out1")
    ,st_weight_addr_gen_Not_1U_1U_4_45_out1("st_weight_addr_gen_Not_1U_1U_4_45_out1")
    ,st_weight_addr_gen_AndReduction_2S_1U_1_42_out1("st_weight_addr_gen_AndReduction_2S_1U_1_42_out1")
    ,st_weight_addr_gen_Nei1u16_4_44_out1("st_weight_addr_gen_Nei1u16_4_44_out1")
    ,st_weight_addr_gen_Nei1u16_4_43_out1("st_weight_addr_gen_Nei1u16_4_43_out1")
    ,st_weight_addr_gen_Or_1Ux1U_1U_4_49_out1("st_weight_addr_gen_Or_1Ux1U_1U_4_49_out1")
    ,enable("enable")
    ,st_weight_addr_gen_Not_1U_1U_4_14_out1("st_weight_addr_gen_Not_1U_1U_4_14_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_4_15_out1("st_weight_addr_gen_And_1Ux1U_1U_4_15_out1")
    ,st_weight_addr_gen_EqSubi1u16u16_1_16_out1("st_weight_addr_gen_EqSubi1u16u16_1_16_out1")
    ,st_weight_addr_gen_MuxAdd2i1u16u16u1_4_18_out1("st_weight_addr_gen_MuxAdd2i1u16u16u1_4_18_out1")
    ,st_weight_addr_gen_Muxi0u16u1_4_19_out1("st_weight_addr_gen_Muxi0u16u1_4_19_out1")
    ,st_weight_addr_gen_EqSubi1u16u16_1_20_out1("st_weight_addr_gen_EqSubi1u16u16_1_20_out1")
    ,st_weight_addr_gen_MuxAdd2i1u16u16u1_4_22_out1("st_weight_addr_gen_MuxAdd2i1u16u16u1_4_22_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_1_17_out1("st_weight_addr_gen_And_1Ux1U_1U_1_17_out1")
    ,st_weight_addr_gen_Muxi0u16u1_4_23_out1("st_weight_addr_gen_Muxi0u16u1_4_23_out1")
    ,st_weight_addr_gen_EqSubi1u16u16_1_24_out1("st_weight_addr_gen_EqSubi1u16u16_1_24_out1")
    ,st_weight_addr_gen_MuxAdd2i1u16u16u1_4_26_out1("st_weight_addr_gen_MuxAdd2i1u16u16u1_4_26_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_1_21_out1("st_weight_addr_gen_And_1Ux1U_1U_1_21_out1")
    ,st_weight_addr_gen_Muxi0u16u1_4_27_out1("st_weight_addr_gen_Muxi0u16u1_4_27_out1")
    ,st_weight_addr_gen_EqSubi1u16u16_1_28_out1("st_weight_addr_gen_EqSubi1u16u16_1_28_out1")
    ,st_weight_addr_gen_MuxAdd2i1u16u16u1_4_30_out1("st_weight_addr_gen_MuxAdd2i1u16u16u1_4_30_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_1_25_out1("st_weight_addr_gen_And_1Ux1U_1U_1_25_out1")
    ,st_weight_addr_gen_Muxi0u16u1_4_31_out1("st_weight_addr_gen_Muxi0u16u1_4_31_out1")
    ,ox_cnt("ox_cnt")
    ,st_weight_addr_gen_EqSubi1u16u16_1_32_out1("st_weight_addr_gen_EqSubi1u16u16_1_32_out1")
    ,st_weight_addr_gen_MuxAdd2i1u16u16u1_4_34_out1("st_weight_addr_gen_MuxAdd2i1u16u16u1_4_34_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_1_29_out1("st_weight_addr_gen_And_1Ux1U_1U_1_29_out1")
    ,st_weight_addr_gen_Muxi0u16u1_4_35_out1("st_weight_addr_gen_Muxi0u16u1_4_35_out1")
    ,oy_cnt("oy_cnt")
    ,st_weight_addr_gen_EqSubi32u16u16_1_36_out1("st_weight_addr_gen_EqSubi32u16u16_1_36_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_1_37_out1("st_weight_addr_gen_And_1Ux1U_1U_1_37_out1")
    ,st_weight_addr_gen_MuxAdd2i32u16u16u1_4_38_out1("st_weight_addr_gen_MuxAdd2i32u16u16u1_4_38_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_1_33_out1("st_weight_addr_gen_And_1Ux1U_1U_1_33_out1")
    ,st_weight_addr_gen_Muxi0u16u1_4_39_out1("st_weight_addr_gen_Muxi0u16u1_4_39_out1")
    ,ix_cnt("ix_cnt")
    ,iy_cnt("iy_cnt")
    ,if_cnt("if_cnt")
    ,of_cnt("of_cnt")
    ,ix_pos_slice("ix_pos_slice")
    ,iy_pos("iy_pos")
    ,if_pos("if_pos")
    ,of_pos_slice("of_pos_slice")
    ,st_weight_addr_gen_Add_1Ux1U_1U_4_13_out1("st_weight_addr_gen_Add_1Ux1U_1U_4_13_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_4_12_out1("st_weight_addr_gen_And_1Ux1U_1U_4_12_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_4_11_out1("st_weight_addr_gen_And_1Ux1U_1U_4_11_out1")
    ,st_weight_addr_gen_And_1Ux1U_1U_4_10_out1("st_weight_addr_gen_And_1Ux1U_1U_4_10_out1")
    ,org_of_pos("org_of_pos")
    ,st_weight_addr_gen_Add3u1u1u1_4_8_out1("st_weight_addr_gen_Add3u1u1u1_4_8_out1")
    ,org_if_pos("org_if_pos")
    ,org_iy_pos("org_iy_pos")
    ,org_ix_pos("org_ix_pos")
    ,st_weight_addr_gen_Add_2Ux1U_3U_4_9_out1("st_weight_addr_gen_Add_2Ux1U_3U_4_9_out1")
    ,tmp_st_weight_addr_slice("tmp_st_weight_addr_slice")
    ,st_weight_addr_slice("st_weight_addr_slice")
    ,run("run")
    ,run_1d("run_1d")
    ,run_2d("run_2d")
    ,run_3d("run_3d")
    ,st_weight_addr_gen_Mul_16Ux16U_16U_4_5_out1("st_weight_addr_gen_Mul_16Ux16U_16U_4_5_out1")
    ,cnt_max("cnt_max")
    ,of_cnt_max("of_cnt_max")
    ,if_cnt_max("if_cnt_max")
    ,iy_cnt_max("iy_cnt_max")
    ,ix_cnt_max("ix_cnt_max")
    ,st_weight_addr_gen_Add3u8u8Subu16u16_4_6_out1("st_weight_addr_gen_Add3u8u8Subu16u16_4_6_out1")
    ,st_weight_addr_gen_Add3u8u8Subu16u16_4_7_out1("st_weight_addr_gen_Add3u8u8Subu16u16_4_7_out1")
    ,st_weight_addr_gen_N_Mux_16_3_22_4_2_out1("st_weight_addr_gen_N_Mux_16_3_22_4_2_out1")
    ,st_weight_addr_gen_N_Mux_16_3_22_4_2_in2("st_weight_addr_gen_N_Mux_16_3_22_4_2_in2")
    ,st_weight_addr_gen_N_Mux_16_3_22_4_2_in3("st_weight_addr_gen_N_Mux_16_3_22_4_2_in3")
    ,ox_cnt_max("ox_cnt_max")
    ,st_weight_addr_gen_N_Mux_16_3_22_4_1_out1("st_weight_addr_gen_N_Mux_16_3_22_4_1_out1")
    ,st_weight_addr_gen_N_Mux_16_3_22_4_1_in2("st_weight_addr_gen_N_Mux_16_3_22_4_1_in2")
    ,st_weight_addr_gen_N_Mux_16_3_22_4_1_in3("st_weight_addr_gen_N_Mux_16_3_22_4_1_in3")
    ,oy_cnt_max("oy_cnt_max")
    ,st_weight_addr_gen_Add2i1u16_4_3_out1("st_weight_addr_gen_Add2i1u16_4_3_out1")
    ,oy_cnt_max2("oy_cnt_max2")
    ,st_weight_addr_gen_Add2i1u16_4_4_out1("st_weight_addr_gen_Add2i1u16_4_4_out1")
    ,ox_cnt_max2("ox_cnt_max2")
{
  SC_METHOD(drive_ox_cnt_max2);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_oy_cnt_max2);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_st_weight_addr_gen_N_Mux_16_3_22_4_1_in3);
  sensitive << ( oy_cnt_max );

  SC_METHOD(drive_st_weight_addr_gen_N_Mux_16_3_22_4_1_in2);
  sensitive << ( oy_cnt_max );

  SC_METHOD(st_weight_addr_gen_N_Mux_16_3_22_4_1);
  sensitive << ( stride_y );
  sensitive << ( oy_cnt_max );
  sensitive << ( st_weight_addr_gen_N_Mux_16_3_22_4_1_in2 );
  sensitive << ( st_weight_addr_gen_N_Mux_16_3_22_4_1_in3 );

  SC_METHOD(drive_st_weight_addr_gen_N_Mux_16_3_22_4_2_in3);
  sensitive << ( ox_cnt_max );

  SC_METHOD(drive_st_weight_addr_gen_N_Mux_16_3_22_4_2_in2);
  sensitive << ( ox_cnt_max );

  SC_METHOD(st_weight_addr_gen_N_Mux_16_3_22_4_2);
  sensitive << ( stride_x );
  sensitive << ( ox_cnt_max );
  sensitive << ( st_weight_addr_gen_N_Mux_16_3_22_4_2_in2 );
  sensitive << ( st_weight_addr_gen_N_Mux_16_3_22_4_2_in3 );

  SC_METHOD(st_weight_addr_gen_Add2i1u16_4_3);
  sensitive << ( st_weight_addr_gen_N_Mux_16_3_22_4_1_out1 );

  SC_METHOD(st_weight_addr_gen_Add2i1u16_4_4);
  sensitive << ( st_weight_addr_gen_N_Mux_16_3_22_4_2_out1 );

  SC_METHOD(drive_ox_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_oy_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_ix_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_iy_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_if_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_of_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_Mul_16Ux16U_16U_4_5);
  sensitive << ( filter_height );
  sensitive << ( filter_width );

  SC_METHOD(st_weight_addr_gen_Add3u8u8Subu16u16_4_6);
  sensitive << ( pad_bottom_size );
  sensitive << ( pad_top_size );
  sensitive << ( filter_height );
  sensitive << ( feature_height );

  SC_METHOD(st_weight_addr_gen_Add3u8u8Subu16u16_4_7);
  sensitive << ( pad_right_size );
  sensitive << ( pad_left_size );
  sensitive << ( filter_width );
  sensitive << ( feature_width );

  SC_METHOD(drive_st_weight_data_valid);
  sensitive << ( cache_en );

  SC_METHOD(drive_cache_en);
  sensitive << ( st_weight_addr_valid );

  SC_METHOD(drive_st_weight_addr_valid);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_3d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_run_2d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_st_weight_addr_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_tmp_st_weight_addr_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_Add3u1u1u1_4_8);
  sensitive << ( org_if_pos );
  sensitive << ( org_iy_pos );
  sensitive << ( org_ix_pos );

  SC_METHOD(st_weight_addr_gen_Add_2Ux1U_3U_4_9);
  sensitive << ( org_of_pos );
  sensitive << ( st_weight_addr_gen_Add3u1u1u1_4_8_out1 );

  SC_METHOD(drive_org_of_pos);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_org_if_pos);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_org_iy_pos);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_org_ix_pos);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_4_10);
  sensitive << ( of_pos_slice );
  sensitive << ( cnt_max );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_4_11);
  sensitive << ( if_pos );
  sensitive << ( cnt_max );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_4_12);
  sensitive << ( iy_pos );
  sensitive << ( filter_width );

  SC_METHOD(st_weight_addr_gen_Add_1Ux1U_1U_4_13);
  sensitive << ( read_weight_base_addr );
  sensitive << ( ix_pos_slice );

  SC_METHOD(drive_of_pos_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_if_pos);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_iy_pos);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_ix_pos_slice);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_of_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_MuxAdd2i32u16u16u1_4_38);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_33_out1 );
  sensitive << ( of_cnt );

  SC_METHOD(st_weight_addr_gen_Muxi0u16u1_4_39);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_37_out1 );
  sensitive << ( st_weight_addr_gen_MuxAdd2i32u16u16u1_4_38_out1 );

  SC_METHOD(st_weight_addr_gen_EqSubi32u16u16_1_36);
  sensitive << ( of_cnt_max );
  sensitive << ( of_cnt );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_1_37);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_33_out1 );
  sensitive << ( st_weight_addr_gen_EqSubi32u16u16_1_36_out1 );

  SC_METHOD(drive_oy_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_MuxAdd2i1u16u16u1_4_34);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_29_out1 );
  sensitive << ( oy_cnt );

  SC_METHOD(st_weight_addr_gen_Muxi0u16u1_4_35);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_33_out1 );
  sensitive << ( st_weight_addr_gen_MuxAdd2i1u16u16u1_4_34_out1 );

  SC_METHOD(st_weight_addr_gen_EqSubi1u16u16_1_32);
  sensitive << ( oy_cnt_max2 );
  sensitive << ( oy_cnt );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_1_33);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_29_out1 );
  sensitive << ( st_weight_addr_gen_EqSubi1u16u16_1_32_out1 );

  SC_METHOD(drive_ox_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_MuxAdd2i1u16u16u1_4_30);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_25_out1 );
  sensitive << ( ox_cnt );

  SC_METHOD(st_weight_addr_gen_Muxi0u16u1_4_31);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_29_out1 );
  sensitive << ( st_weight_addr_gen_MuxAdd2i1u16u16u1_4_30_out1 );

  SC_METHOD(st_weight_addr_gen_EqSubi1u16u16_1_28);
  sensitive << ( ox_cnt_max2 );
  sensitive << ( ox_cnt );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_1_29);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_25_out1 );
  sensitive << ( st_weight_addr_gen_EqSubi1u16u16_1_28_out1 );

  SC_METHOD(drive_if_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_MuxAdd2i1u16u16u1_4_26);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_21_out1 );
  sensitive << ( if_cnt );

  SC_METHOD(st_weight_addr_gen_Muxi0u16u1_4_27);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_25_out1 );
  sensitive << ( st_weight_addr_gen_MuxAdd2i1u16u16u1_4_26_out1 );

  SC_METHOD(st_weight_addr_gen_EqSubi1u16u16_1_24);
  sensitive << ( if_cnt_max );
  sensitive << ( if_cnt );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_1_25);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_21_out1 );
  sensitive << ( st_weight_addr_gen_EqSubi1u16u16_1_24_out1 );

  SC_METHOD(drive_iy_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_MuxAdd2i1u16u16u1_4_22);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_17_out1 );
  sensitive << ( iy_cnt );

  SC_METHOD(st_weight_addr_gen_Muxi0u16u1_4_23);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_21_out1 );
  sensitive << ( st_weight_addr_gen_MuxAdd2i1u16u16u1_4_22_out1 );

  SC_METHOD(st_weight_addr_gen_EqSubi1u16u16_1_20);
  sensitive << ( iy_cnt_max );
  sensitive << ( iy_cnt );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_1_21);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_17_out1 );
  sensitive << ( st_weight_addr_gen_EqSubi1u16u16_1_20_out1 );

  SC_METHOD(drive_ix_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_MuxAdd2i1u16u16u1_4_18);
  sensitive << ( run );
  sensitive << ( ix_cnt );

  SC_METHOD(st_weight_addr_gen_Muxi0u16u1_4_19);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_17_out1 );
  sensitive << ( st_weight_addr_gen_MuxAdd2i1u16u16u1_4_18_out1 );

  SC_METHOD(st_weight_addr_gen_EqSubi1u16u16_1_16);
  sensitive << ( ix_cnt_max );
  sensitive << ( ix_cnt );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_1_17);
  sensitive << ( run );
  sensitive << ( st_weight_addr_gen_EqSubi1u16u16_1_16_out1 );

  SC_METHOD(drive_run);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_Not_1U_1U_4_14);
  sensitive << ( stop );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_4_15);
  sensitive << ( enable );
  sensitive << ( st_weight_addr_gen_Not_1U_1U_4_14_out1 );

  SC_METHOD(drive_enable);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(st_weight_addr_gen_Nei1u16_4_43);
  sensitive << ( filter_width );

  SC_METHOD(st_weight_addr_gen_Nei1u16_4_44);
  sensitive << ( filter_height );

  SC_METHOD(st_weight_addr_gen_Not_1U_1U_4_45);
  sensitive << ( st_weight_addr_gen_AndReduction_2S_1U_1_42_out1 );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_4_46);
  sensitive << ( st_weight_addr_gen_Nei1u16_4_43_out1 );
  sensitive << ( st_weight_addr_gen_Nei1u16_4_44_out1 );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_4_47);
  sensitive << ( enable );
  sensitive << ( st_weight_addr_gen_Not_1U_1U_4_45_out1 );

  SC_METHOD(st_weight_addr_gen_And_1Ux1U_1U_4_48);
  sensitive << ( start_rising );
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_4_46_out1 );

  SC_METHOD(st_weight_addr_gen_Or_1Ux1U_1U_4_49);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_4_47_out1 );
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_4_48_out1 );

  SC_METHOD(drive_st_weight_addr_gen_AndReduction_4S_1U_1_40_in1);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_37_out1 );
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_33_out1 );
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_29_out1 );
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_25_out1 );

  SC_METHOD(st_weight_addr_gen_AndReduction_4S_1U_1_40);
  sensitive << ( st_weight_addr_gen_AndReduction_4S_1U_1_40_in1 );

  SC_METHOD(drive_st_weight_addr_gen_AndReduction_2S_1U_4_41_in1);
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_21_out1 );
  sensitive << ( st_weight_addr_gen_And_1Ux1U_1U_1_17_out1 );

  SC_METHOD(st_weight_addr_gen_AndReduction_2S_1U_4_41);
  sensitive << ( st_weight_addr_gen_AndReduction_2S_1U_4_41_in1 );

  SC_METHOD(drive_st_weight_addr_gen_AndReduction_2S_1U_1_42_in1);
  sensitive << ( st_weight_addr_gen_AndReduction_4S_1U_1_40_out1 );
  sensitive << ( st_weight_addr_gen_AndReduction_2S_1U_4_41_out1 );

  SC_METHOD(st_weight_addr_gen_AndReduction_2S_1U_1_42);
  sensitive << ( st_weight_addr_gen_AndReduction_2S_1U_1_42_in1 );

  SC_METHOD(drive_st_weight_addr);
  sensitive << ( st_weight_addr_slice );

}
// resource: regr_ac_16
void st_weight_addr_gen::drive_ox_cnt_max2(){
  if ( (rstn.read() == 0ULL) ) {
    ox_cnt_max2 = 0ULL;
  } else {
    ox_cnt_max2 = st_weight_addr_gen_Add2i1u16_4_4_out1.read();
  }
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_oy_cnt_max2(){
  if ( (rstn.read() == 0ULL) ) {
    oy_cnt_max2 = 0ULL;
  } else {
    oy_cnt_max2 = st_weight_addr_gen_Add2i1u16_4_3_out1.read();
  }
}
void st_weight_addr_gen::drive_st_weight_addr_gen_N_Mux_16_3_22_4_1_in3(){
  st_weight_addr_gen_N_Mux_16_3_22_4_1_in3 = (sc_uint<14> ) (oy_cnt_max.read()
                                             .range(15,2));
}
void st_weight_addr_gen::drive_st_weight_addr_gen_N_Mux_16_3_22_4_1_in2(){
  st_weight_addr_gen_N_Mux_16_3_22_4_1_in2 = (sc_uint<15> ) (oy_cnt_max.read()
                                             .range(15,1));
}
// resource: st_weight_addr_gen_N_Mux_16_3_22_4
void st_weight_addr_gen::st_weight_addr_gen_N_Mux_16_3_22_4_1(){
  switch( (sc_uint<8>)(stride_y.read()) ) {
  default:
    st_weight_addr_gen_N_Mux_16_3_22_4_1_out1 = oy_cnt_max.read();
    break;
  case 2ULL: 
    st_weight_addr_gen_N_Mux_16_3_22_4_1_out1 = (sc_uint<16> )st_weight_addr_gen_N_Mux_16_3_22_4_1_in2
                                                .read();
    break;
  case 4ULL: 
    st_weight_addr_gen_N_Mux_16_3_22_4_1_out1 = (sc_uint<16> )st_weight_addr_gen_N_Mux_16_3_22_4_1_in3
                                                .read();
    break;
  }
}
void st_weight_addr_gen::drive_st_weight_addr_gen_N_Mux_16_3_22_4_2_in3(){
  st_weight_addr_gen_N_Mux_16_3_22_4_2_in3 = (sc_uint<14> ) (ox_cnt_max.read()
                                             .range(15,2));
}
void st_weight_addr_gen::drive_st_weight_addr_gen_N_Mux_16_3_22_4_2_in2(){
  st_weight_addr_gen_N_Mux_16_3_22_4_2_in2 = (sc_uint<15> ) (ox_cnt_max.read()
                                             .range(15,1));
}
// resource: st_weight_addr_gen_N_Mux_16_3_22_4
void st_weight_addr_gen::st_weight_addr_gen_N_Mux_16_3_22_4_2(){
  switch( (sc_uint<8>)(stride_x.read()) ) {
  default:
    st_weight_addr_gen_N_Mux_16_3_22_4_2_out1 = ox_cnt_max.read();
    break;
  case 2ULL: 
    st_weight_addr_gen_N_Mux_16_3_22_4_2_out1 = (sc_uint<16> )st_weight_addr_gen_N_Mux_16_3_22_4_2_in2
                                                .read();
    break;
  case 4ULL: 
    st_weight_addr_gen_N_Mux_16_3_22_4_2_out1 = (sc_uint<16> )st_weight_addr_gen_N_Mux_16_3_22_4_2_in3
                                                .read();
    break;
  }
}
// resource: st_weight_addr_gen_Add2i1u16_4  instance: st_weight_addr_gen_Add2i1u16_4_3
void st_weight_addr_gen::st_weight_addr_gen_Add2i1u16_4_3(){
  st_weight_addr_gen_Add2i1u16_4_3_out1 = (st_weight_addr_gen_N_Mux_16_3_22_4_1_out1
                                          .read() + 1ULL);
}
// resource: st_weight_addr_gen_Add2i1u16_4  instance: st_weight_addr_gen_Add2i1u16_4_4
void st_weight_addr_gen::st_weight_addr_gen_Add2i1u16_4_4(){
  st_weight_addr_gen_Add2i1u16_4_4_out1 = (st_weight_addr_gen_N_Mux_16_3_22_4_2_out1
                                          .read() + 1ULL);
}
// resource: regr_16
void st_weight_addr_gen::drive_ox_cnt_max(){
  ox_cnt_max = (sc_uint<16> ) (st_weight_addr_gen_Add3u8u8Subu16u16_4_7_out1
               .read());
}
// resource: regr_16
void st_weight_addr_gen::drive_oy_cnt_max(){
  oy_cnt_max = (sc_uint<16> ) (st_weight_addr_gen_Add3u8u8Subu16u16_4_6_out1
               .read());
}
// resource: regr_16
void st_weight_addr_gen::drive_ix_cnt_max(){
  ix_cnt_max = filter_width.read();
}
// resource: regr_16
void st_weight_addr_gen::drive_iy_cnt_max(){
  iy_cnt_max = filter_height.read();
}
// resource: regr_16
void st_weight_addr_gen::drive_if_cnt_max(){
  if_cnt_max = filter_channel.read();
}
// resource: regr_16
void st_weight_addr_gen::drive_of_cnt_max(){
  of_cnt_max = out_feature_channel.read();
}
// resource: regr_16
void st_weight_addr_gen::drive_cnt_max(){
  cnt_max = st_weight_addr_gen_Mul_16Ux16U_16U_4_5_out1.read();
}
// resource: st_weight_addr_gen_Mul_16Ux16U_16U_4  instance: st_weight_addr_gen_Mul_16Ux16U_16U_4_5
void st_weight_addr_gen::st_weight_addr_gen_Mul_16Ux16U_16U_4_5(){
  st_weight_addr_gen_Mul_16Ux16U_16U_4_5_out1 = filter_width.read() * 
                                                filter_height.read();
}
// resource: st_weight_addr_gen_Add3u8u8Subu16u16_4  instance: st_weight_addr_gen_Add3u8u8Subu16u16_4_6
void st_weight_addr_gen::st_weight_addr_gen_Add3u8u8Subu16u16_4_6(){
  st_weight_addr_gen_Add3u8u8Subu16u16_4_6_out1 = (( feature_height.read() - 
                                                  filter_height.read() ) + ( (
                                                  pad_top_size.read() + 
                                                  pad_bottom_size.read()) ));
}
// resource: st_weight_addr_gen_Add3u8u8Subu16u16_4  instance: st_weight_addr_gen_Add3u8u8Subu16u16_4_7
void st_weight_addr_gen::st_weight_addr_gen_Add3u8u8Subu16u16_4_7(){
  st_weight_addr_gen_Add3u8u8Subu16u16_4_7_out1 = (( feature_width.read() - 
                                                  filter_width.read() ) + ( (
                                                  pad_left_size.read() + 
                                                  pad_right_size.read()) ));
}
void st_weight_addr_gen::drive_st_weight_data_valid(){
  st_weight_data_valid = cache_en.read();
}
void st_weight_addr_gen::drive_cache_en(){
  cache_en = st_weight_addr_valid.read();
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_st_weight_addr_valid(){
  if ( (rstn.read() == 0ULL) ) {
    st_weight_addr_valid = 0ULL;
  } else {
    st_weight_addr_valid = (sc_uint<1> ) (run_3d.read());
  }
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_run_3d(){
  if ( (rstn.read() == 0ULL) ) {
    run_3d = 0ULL;
  } else {
    run_3d = run_2d.read();
  }
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_run_1d(){
  if ( (rstn.read() == 0ULL) ) {
    run_1d = 0ULL;
  } else {
    run_1d = run.read();
  }
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_run_2d(){
  if ( (rstn.read() == 0ULL) ) {
    run_2d = 0ULL;
  } else {
    run_2d = run_1d.read();
  }
}
// resource: regr_ac_3
void st_weight_addr_gen::drive_st_weight_addr_slice(){
  if ( (rstn.read() == 0ULL) ) {
    st_weight_addr_slice = 0ULL;
  } else {
    st_weight_addr_slice = tmp_st_weight_addr_slice.read();
  }
}
// resource: regr_ac_3
void st_weight_addr_gen::drive_tmp_st_weight_addr_slice(){
  if ( (rstn.read() == 0ULL) ) {
    tmp_st_weight_addr_slice = 0ULL;
  } else {
    tmp_st_weight_addr_slice = st_weight_addr_gen_Add_2Ux1U_3U_4_9_out1.read();
  }
}
// resource: st_weight_addr_gen_Add3u1u1u1_4  instance: st_weight_addr_gen_Add3u1u1u1_4_8
void st_weight_addr_gen::st_weight_addr_gen_Add3u1u1u1_4_8(){
  st_weight_addr_gen_Add3u1u1u1_4_8_out1 = (( (org_ix_pos.read() + org_iy_pos
                                           .read()) ) + org_if_pos.read());
}
// resource: st_weight_addr_gen_Add_2Ux1U_3U_4  instance: st_weight_addr_gen_Add_2Ux1U_3U_4_9
void st_weight_addr_gen::st_weight_addr_gen_Add_2Ux1U_3U_4_9(){
  st_weight_addr_gen_Add_2Ux1U_3U_4_9_out1 = (st_weight_addr_gen_Add3u1u1u1_4_8_out1
                                             .read() + org_of_pos.read());
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_org_of_pos(){
  if ( (rstn.read() == 0ULL) ) {
    org_of_pos = 0ULL;
  } else {
    org_of_pos = st_weight_addr_gen_And_1Ux1U_1U_4_10_out1.read();
  }
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_org_if_pos(){
  if ( (rstn.read() == 0ULL) ) {
    org_if_pos = 0ULL;
  } else {
    org_if_pos = st_weight_addr_gen_And_1Ux1U_1U_4_11_out1.read();
  }
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_org_iy_pos(){
  if ( (rstn.read() == 0ULL) ) {
    org_iy_pos = 0ULL;
  } else {
    org_iy_pos = st_weight_addr_gen_And_1Ux1U_1U_4_12_out1.read();
  }
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_org_ix_pos(){
  if ( (rstn.read() == 0ULL) ) {
    org_ix_pos = 0ULL;
  } else {
    org_ix_pos = st_weight_addr_gen_Add_1Ux1U_1U_4_13_out1.read();
  }
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_4  instance: st_weight_addr_gen_And_1Ux1U_1U_4_10
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_4_10(){
  st_weight_addr_gen_And_1Ux1U_1U_4_10_out1 = cnt_max.read() & ( (sc_uint<16> )
                                              (sc_bv<16>)((sc_bv<5>)(0ULL), 
                                              (sc_bv<11>)(of_pos_slice.read()))
                                               );
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_4  instance: st_weight_addr_gen_And_1Ux1U_1U_4_11
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_4_11(){
  st_weight_addr_gen_And_1Ux1U_1U_4_11_out1 = cnt_max.read() & if_pos.read();
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_4  instance: st_weight_addr_gen_And_1Ux1U_1U_4_12
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_4_12(){
  st_weight_addr_gen_And_1Ux1U_1U_4_12_out1 = filter_width.read() & iy_pos
                                              .read();
}
// resource: st_weight_addr_gen_Add_1Ux1U_1U_4  instance: st_weight_addr_gen_Add_1Ux1U_1U_4_13
void st_weight_addr_gen::st_weight_addr_gen_Add_1Ux1U_1U_4_13(){
  st_weight_addr_gen_Add_1Ux1U_1U_4_13_out1 = (ix_pos_slice.read() + (
                                              sc_uint<1> )read_weight_base_addr
                                              .read());
}
// resource: regr_ac_11
void st_weight_addr_gen::drive_of_pos_slice(){
  if ( (rstn.read() == 0ULL) ) {
    of_pos_slice = 0ULL;
  } else {
    of_pos_slice = (sc_uint<11> ) (of_cnt.read().range(15,5));
  }
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_if_pos(){
  if ( (rstn.read() == 0ULL) ) {
    if_pos = 0ULL;
  } else {
    if_pos = if_cnt.read();
  }
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_iy_pos(){
  if ( (rstn.read() == 0ULL) ) {
    iy_pos = 0ULL;
  } else {
    iy_pos = iy_cnt.read();
  }
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_ix_pos_slice(){
  if ( (rstn.read() == 0ULL) ) {
    ix_pos_slice = 0ULL;
  } else {
    ix_pos_slice = (sc_uint<1> )ix_cnt.read();
  }
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_of_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    of_cnt = 0ULL;
  } else {
    of_cnt = st_weight_addr_gen_Muxi0u16u1_4_39_out1.read();
  }
}
// resource: st_weight_addr_gen_MuxAdd2i32u16u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_MuxAdd2i32u16u16u1_4_38(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_33_out1.read() ) {
    st_weight_addr_gen_MuxAdd2i32u16u16u1_4_38_out1 = (of_cnt.read() + 32ULL);
  } else {
    st_weight_addr_gen_MuxAdd2i32u16u16u1_4_38_out1 = of_cnt.read();
  }
}
// resource: st_weight_addr_gen_Muxi0u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_Muxi0u16u1_4_39(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_37_out1.read() ) {
    st_weight_addr_gen_Muxi0u16u1_4_39_out1 = 0ULL;
  } else {
    st_weight_addr_gen_Muxi0u16u1_4_39_out1 = st_weight_addr_gen_MuxAdd2i32u16u16u1_4_38_out1
                                              .read();
  }
}
// resource: st_weight_addr_gen_EqSubi32u16u16_1  instance: st_weight_addr_gen_EqSubi32u16u16_1_36
void st_weight_addr_gen::st_weight_addr_gen_EqSubi32u16u16_1_36(){
  st_weight_addr_gen_EqSubi32u16u16_1_36_out1 = ((sc_int<17> )of_cnt.read() == 
                                                of_cnt_max.read() - 32ULL);
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_1  instance: st_weight_addr_gen_And_1Ux1U_1U_1_37
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_1_37(){
  st_weight_addr_gen_And_1Ux1U_1U_1_37_out1 = (sc_uint<1> )st_weight_addr_gen_EqSubi32u16u16_1_36_out1
                                              .read() & st_weight_addr_gen_And_1Ux1U_1U_1_33_out1
                                              .read();
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_oy_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    oy_cnt = 0ULL;
  } else {
    oy_cnt = st_weight_addr_gen_Muxi0u16u1_4_35_out1.read();
  }
}
// resource: st_weight_addr_gen_MuxAdd2i1u16u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_MuxAdd2i1u16u16u1_4_34(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_29_out1.read() ) {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_34_out1 = (oy_cnt.read() + 1ULL);
  } else {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_34_out1 = oy_cnt.read();
  }
}
// resource: st_weight_addr_gen_Muxi0u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_Muxi0u16u1_4_35(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_33_out1.read() ) {
    st_weight_addr_gen_Muxi0u16u1_4_35_out1 = 0ULL;
  } else {
    st_weight_addr_gen_Muxi0u16u1_4_35_out1 = st_weight_addr_gen_MuxAdd2i1u16u16u1_4_34_out1
                                              .read();
  }
}
// resource: st_weight_addr_gen_EqSubi1u16u16_1  instance: st_weight_addr_gen_EqSubi1u16u16_1_32
void st_weight_addr_gen::st_weight_addr_gen_EqSubi1u16u16_1_32(){
  st_weight_addr_gen_EqSubi1u16u16_1_32_out1 = ((sc_int<17> )oy_cnt.read() == 
                                               oy_cnt_max2.read() - 1ULL);
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_1  instance: st_weight_addr_gen_And_1Ux1U_1U_1_33
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_1_33(){
  st_weight_addr_gen_And_1Ux1U_1U_1_33_out1 = (sc_uint<1> )st_weight_addr_gen_EqSubi1u16u16_1_32_out1
                                              .read() & st_weight_addr_gen_And_1Ux1U_1U_1_29_out1
                                              .read();
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_ox_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    ox_cnt = 0ULL;
  } else {
    ox_cnt = st_weight_addr_gen_Muxi0u16u1_4_31_out1.read();
  }
}
// resource: st_weight_addr_gen_MuxAdd2i1u16u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_MuxAdd2i1u16u16u1_4_30(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_25_out1.read() ) {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_30_out1 = (ox_cnt.read() + 1ULL);
  } else {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_30_out1 = ox_cnt.read();
  }
}
// resource: st_weight_addr_gen_Muxi0u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_Muxi0u16u1_4_31(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_29_out1.read() ) {
    st_weight_addr_gen_Muxi0u16u1_4_31_out1 = 0ULL;
  } else {
    st_weight_addr_gen_Muxi0u16u1_4_31_out1 = st_weight_addr_gen_MuxAdd2i1u16u16u1_4_30_out1
                                              .read();
  }
}
// resource: st_weight_addr_gen_EqSubi1u16u16_1  instance: st_weight_addr_gen_EqSubi1u16u16_1_28
void st_weight_addr_gen::st_weight_addr_gen_EqSubi1u16u16_1_28(){
  st_weight_addr_gen_EqSubi1u16u16_1_28_out1 = ((sc_int<17> )ox_cnt.read() == 
                                               ox_cnt_max2.read() - 1ULL);
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_1  instance: st_weight_addr_gen_And_1Ux1U_1U_1_29
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_1_29(){
  st_weight_addr_gen_And_1Ux1U_1U_1_29_out1 = (sc_uint<1> )st_weight_addr_gen_EqSubi1u16u16_1_28_out1
                                              .read() & st_weight_addr_gen_And_1Ux1U_1U_1_25_out1
                                              .read();
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_if_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    if_cnt = 0ULL;
  } else {
    if_cnt = st_weight_addr_gen_Muxi0u16u1_4_27_out1.read();
  }
}
// resource: st_weight_addr_gen_MuxAdd2i1u16u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_MuxAdd2i1u16u16u1_4_26(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_21_out1.read() ) {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_26_out1 = (if_cnt.read() + 1ULL);
  } else {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_26_out1 = if_cnt.read();
  }
}
// resource: st_weight_addr_gen_Muxi0u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_Muxi0u16u1_4_27(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_25_out1.read() ) {
    st_weight_addr_gen_Muxi0u16u1_4_27_out1 = 0ULL;
  } else {
    st_weight_addr_gen_Muxi0u16u1_4_27_out1 = st_weight_addr_gen_MuxAdd2i1u16u16u1_4_26_out1
                                              .read();
  }
}
// resource: st_weight_addr_gen_EqSubi1u16u16_1  instance: st_weight_addr_gen_EqSubi1u16u16_1_24
void st_weight_addr_gen::st_weight_addr_gen_EqSubi1u16u16_1_24(){
  st_weight_addr_gen_EqSubi1u16u16_1_24_out1 = ((sc_int<17> )if_cnt.read() == 
                                               if_cnt_max.read() - 1ULL);
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_1  instance: st_weight_addr_gen_And_1Ux1U_1U_1_25
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_1_25(){
  st_weight_addr_gen_And_1Ux1U_1U_1_25_out1 = (sc_uint<1> )st_weight_addr_gen_EqSubi1u16u16_1_24_out1
                                              .read() & st_weight_addr_gen_And_1Ux1U_1U_1_21_out1
                                              .read();
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_iy_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    iy_cnt = 0ULL;
  } else {
    iy_cnt = st_weight_addr_gen_Muxi0u16u1_4_23_out1.read();
  }
}
// resource: st_weight_addr_gen_MuxAdd2i1u16u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_MuxAdd2i1u16u16u1_4_22(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_17_out1.read() ) {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_22_out1 = (iy_cnt.read() + 1ULL);
  } else {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_22_out1 = iy_cnt.read();
  }
}
// resource: st_weight_addr_gen_Muxi0u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_Muxi0u16u1_4_23(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_21_out1.read() ) {
    st_weight_addr_gen_Muxi0u16u1_4_23_out1 = 0ULL;
  } else {
    st_weight_addr_gen_Muxi0u16u1_4_23_out1 = st_weight_addr_gen_MuxAdd2i1u16u16u1_4_22_out1
                                              .read();
  }
}
// resource: st_weight_addr_gen_EqSubi1u16u16_1  instance: st_weight_addr_gen_EqSubi1u16u16_1_20
void st_weight_addr_gen::st_weight_addr_gen_EqSubi1u16u16_1_20(){
  st_weight_addr_gen_EqSubi1u16u16_1_20_out1 = ((sc_int<17> )iy_cnt.read() == 
                                               iy_cnt_max.read() - 1ULL);
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_1  instance: st_weight_addr_gen_And_1Ux1U_1U_1_21
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_1_21(){
  st_weight_addr_gen_And_1Ux1U_1U_1_21_out1 = (sc_uint<1> )st_weight_addr_gen_EqSubi1u16u16_1_20_out1
                                              .read() & st_weight_addr_gen_And_1Ux1U_1U_1_17_out1
                                              .read();
}
// resource: regr_ac_16
void st_weight_addr_gen::drive_ix_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    ix_cnt = 0ULL;
  } else {
    ix_cnt = st_weight_addr_gen_Muxi0u16u1_4_19_out1.read();
  }
}
// resource: st_weight_addr_gen_MuxAdd2i1u16u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_MuxAdd2i1u16u16u1_4_18(){
  if ( run.read() ) {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_18_out1 = (ix_cnt.read() + 1ULL);
  } else {
    st_weight_addr_gen_MuxAdd2i1u16u16u1_4_18_out1 = ix_cnt.read();
  }
}
// resource: st_weight_addr_gen_Muxi0u16u1_4
void st_weight_addr_gen::st_weight_addr_gen_Muxi0u16u1_4_19(){
  if ( st_weight_addr_gen_And_1Ux1U_1U_1_17_out1.read() ) {
    st_weight_addr_gen_Muxi0u16u1_4_19_out1 = 0ULL;
  } else {
    st_weight_addr_gen_Muxi0u16u1_4_19_out1 = st_weight_addr_gen_MuxAdd2i1u16u16u1_4_18_out1
                                              .read();
  }
}
// resource: st_weight_addr_gen_EqSubi1u16u16_1  instance: st_weight_addr_gen_EqSubi1u16u16_1_16
void st_weight_addr_gen::st_weight_addr_gen_EqSubi1u16u16_1_16(){
  st_weight_addr_gen_EqSubi1u16u16_1_16_out1 = ((sc_int<17> )ix_cnt.read() == 
                                               ix_cnt_max.read() - 1ULL);
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_1  instance: st_weight_addr_gen_And_1Ux1U_1U_1_17
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_1_17(){
  st_weight_addr_gen_And_1Ux1U_1U_1_17_out1 = (sc_uint<1> )st_weight_addr_gen_EqSubi1u16u16_1_16_out1
                                              .read() & run.read();
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_run(){
  if ( (rstn.read() == 0ULL) ) {
    run = 0ULL;
  } else {
    run = st_weight_addr_gen_And_1Ux1U_1U_4_15_out1.read();
  }
}
// resource: st_weight_addr_gen_Not_1U_1U_4  instance: st_weight_addr_gen_Not_1U_1U_4_14
void st_weight_addr_gen::st_weight_addr_gen_Not_1U_1U_4_14(){
  st_weight_addr_gen_Not_1U_1U_4_14_out1 = !stop.read();
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_4  instance: st_weight_addr_gen_And_1Ux1U_1U_4_15
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_4_15(){
  st_weight_addr_gen_And_1Ux1U_1U_4_15_out1 = st_weight_addr_gen_Not_1U_1U_4_14_out1
                                              .read() & enable.read();
}
// resource: regr_ac_1
void st_weight_addr_gen::drive_enable(){
  if ( (rstn.read() == 0ULL) ) {
    enable = 0ULL;
  } else {
    enable = st_weight_addr_gen_Or_1Ux1U_1U_4_49_out1.read();
  }
}
// resource: st_weight_addr_gen_Nei1u16_4  instance: st_weight_addr_gen_Nei1u16_4_43
void st_weight_addr_gen::st_weight_addr_gen_Nei1u16_4_43(){
  st_weight_addr_gen_Nei1u16_4_43_out1 = (filter_width.read() != 1ULL);
}
// resource: st_weight_addr_gen_Nei1u16_4  instance: st_weight_addr_gen_Nei1u16_4_44
void st_weight_addr_gen::st_weight_addr_gen_Nei1u16_4_44(){
  st_weight_addr_gen_Nei1u16_4_44_out1 = (filter_height.read() != 1ULL);
}
// resource: st_weight_addr_gen_Not_1U_1U_4  instance: st_weight_addr_gen_Not_1U_1U_4_45
void st_weight_addr_gen::st_weight_addr_gen_Not_1U_1U_4_45(){
  st_weight_addr_gen_Not_1U_1U_4_45_out1 = !st_weight_addr_gen_AndReduction_2S_1U_1_42_out1
                                           .read();
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_4  instance: st_weight_addr_gen_And_1Ux1U_1U_4_46
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_4_46(){
  st_weight_addr_gen_And_1Ux1U_1U_4_46_out1 = st_weight_addr_gen_Nei1u16_4_44_out1
                                              .read() & st_weight_addr_gen_Nei1u16_4_43_out1
                                              .read();
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_4  instance: st_weight_addr_gen_And_1Ux1U_1U_4_47
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_4_47(){
  st_weight_addr_gen_And_1Ux1U_1U_4_47_out1 = st_weight_addr_gen_Not_1U_1U_4_45_out1
                                              .read() & enable.read();
}
// resource: st_weight_addr_gen_And_1Ux1U_1U_4  instance: st_weight_addr_gen_And_1Ux1U_1U_4_48
void st_weight_addr_gen::st_weight_addr_gen_And_1Ux1U_1U_4_48(){
  st_weight_addr_gen_And_1Ux1U_1U_4_48_out1 = st_weight_addr_gen_And_1Ux1U_1U_4_46_out1
                                              .read() & start_rising.read();
}
// resource: st_weight_addr_gen_Or_1Ux1U_1U_4  instance: st_weight_addr_gen_Or_1Ux1U_1U_4_49
void st_weight_addr_gen::st_weight_addr_gen_Or_1Ux1U_1U_4_49(){
  st_weight_addr_gen_Or_1Ux1U_1U_4_49_out1 = st_weight_addr_gen_And_1Ux1U_1U_4_48_out1
                                             .read() | st_weight_addr_gen_And_1Ux1U_1U_4_47_out1
                                             .read();
}
void st_weight_addr_gen::drive_st_weight_addr_gen_AndReduction_4S_1U_1_40_in1(){
  st_weight_addr_gen_AndReduction_4S_1U_1_40_in1 = (sc_int<4> ) (( (sc_uint<4> )
                                                   (sc_bv<4>)((sc_bv<2>)(
                                                   (sc_bv<1>)(st_weight_addr_gen_And_1Ux1U_1U_1_25_out1
                                                   .read()), 
                                                   (sc_bv<1>)(st_weight_addr_gen_And_1Ux1U_1U_1_29_out1
                                                   .read())), 
                                                   (sc_bv<2>)((sc_bv<1>)(st_weight_addr_gen_And_1Ux1U_1U_1_33_out1
                                                   .read()), 
                                                   (sc_bv<1>)(st_weight_addr_gen_And_1Ux1U_1U_1_37_out1
                                                   .read()))) ));
}
// resource: st_weight_addr_gen_AndReduction_4S_1U_1  instance: st_weight_addr_gen_AndReduction_4S_1U_1_40
void st_weight_addr_gen::st_weight_addr_gen_AndReduction_4S_1U_1_40(){
  st_weight_addr_gen_AndReduction_4S_1U_1_40_out1 = ((sc_uint<4>)st_weight_addr_gen_AndReduction_4S_1U_1_40_in1
                                                    .read()).and_reduce();
}
void st_weight_addr_gen::drive_st_weight_addr_gen_AndReduction_2S_1U_4_41_in1(){
  st_weight_addr_gen_AndReduction_2S_1U_4_41_in1 = (sc_int<2> ) (( (sc_uint<2> )
                                                   (sc_bv<2>)((sc_bv<1>)(st_weight_addr_gen_And_1Ux1U_1U_1_17_out1
                                                   .read()), 
                                                   (sc_bv<1>)(st_weight_addr_gen_And_1Ux1U_1U_1_21_out1
                                                   .read())) ));
}
// resource: st_weight_addr_gen_AndReduction_2S_1U_4  instance: st_weight_addr_gen_AndReduction_2S_1U_4_41
void st_weight_addr_gen::st_weight_addr_gen_AndReduction_2S_1U_4_41(){
  st_weight_addr_gen_AndReduction_2S_1U_4_41_out1 = ((sc_uint<2>)st_weight_addr_gen_AndReduction_2S_1U_4_41_in1
                                                    .read()).and_reduce();
}
void st_weight_addr_gen::drive_st_weight_addr_gen_AndReduction_2S_1U_1_42_in1(){
  st_weight_addr_gen_AndReduction_2S_1U_1_42_in1 = (sc_int<2> ) (( (sc_uint<2> )
                                                   (sc_bv<2>)((sc_bv<1>)(st_weight_addr_gen_AndReduction_2S_1U_4_41_out1
                                                   .read()), 
                                                   (sc_bv<1>)(st_weight_addr_gen_AndReduction_4S_1U_1_40_out1
                                                   .read())) ));
}
// resource: st_weight_addr_gen_AndReduction_2S_1U_1  instance: st_weight_addr_gen_AndReduction_2S_1U_1_42
void st_weight_addr_gen::st_weight_addr_gen_AndReduction_2S_1U_1_42(){
  st_weight_addr_gen_AndReduction_2S_1U_1_42_out1 = ((sc_uint<2>)st_weight_addr_gen_AndReduction_2S_1U_1_42_in1
                                                    .read()).and_reduce();
}
void st_weight_addr_gen::drive_st_weight_addr(){
  st_weight_addr = (sc_uint<32> ) (st_weight_addr_slice.read());
}
