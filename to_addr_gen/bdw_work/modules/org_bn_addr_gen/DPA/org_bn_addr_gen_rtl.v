// Generated by stratus_hls 19.10-p100  (91500.011111)
// Mon Jan  4 18:10:28 2021
// from org_bn_addr_gen.cpp

`timescale 1ps / 1ps

      
module org_bn_addr_gen(clk, rstn, out_feature_width, out_feature_height, out_feature_channel, bn_read_base_addr, bn_en, start_rising, data_en, bn_addr, bn_addr_valid);

      input clk;
      input rstn;
      input [15:0] out_feature_width;
      input [15:0] out_feature_height;
      input [15:0] out_feature_channel;
      input [31:0] bn_read_base_addr;
      input [7:0] bn_en;
      input start_rising;
      input data_en;
      output [31:0] bn_addr;
      output bn_addr_valid;
      wire org_bn_addr_gen_Eqi3u16_1_3_out1;
      reg[15:0] org_bn_addr_gen_MuxAdd2i1u16u16u1_4_5_out1;
      reg[15:0] org_bn_addr_gen_Muxi0u16u1_4_6_out1;
      wire org_bn_addr_gen_EqSubi1u16u16_1_7_out1;
      reg[15:0] org_bn_addr_gen_MuxAdd2i1u16u16u1_4_9_out1;
      wire org_bn_addr_gen_And_1Ux1U_1U_1_4_out1;
      reg[15:0] org_bn_addr_gen_Muxi0u16u1_4_10_out1;
      reg[15:0] ox_cnt;
      wire org_bn_addr_gen_EqSubi1u16u16_1_11_out1;
      reg[15:0] org_bn_addr_gen_MuxAdd2i1u16u16u1_4_13_out1;
      wire org_bn_addr_gen_And_1Ux1U_1U_1_8_out1;
      reg[15:0] org_bn_addr_gen_Muxi0u16u1_4_14_out1;
      reg[15:0] oy_cnt;
      wire org_bn_addr_gen_EqSubi1u16u16_1_15_out1;
      wire org_bn_addr_gen_And_1Ux1U_1U_1_16_out1;
      reg[15:0] org_bn_addr_gen_MuxAdd2i1u16u16u1_4_17_out1;
      wire org_bn_addr_gen_And_1Ux1U_1U_1_12_out1;
      reg[15:0] org_bn_addr_gen_Muxi0u16u1_4_18_out1;
      reg[10:0] of_cnt_max_slice;
      reg[15:0] oy_cnt_max;
      reg[15:0] ox_cnt_max;
      reg[15:0] valid_cnt;
      reg[15:0] of_cnt;
      wire org_bn_addr_gen_Equal_8Ux1U_1U_4_1_out1;
      reg[31:0] org_bn_addr_gen_MuxAdd3u16Cati0u16u32i0u1_4_2_out1;

         // rtl_process:org_bn_addr_gen/drive_bn_addr_valid
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_bn_addr_valid
         // at: org_bn_addr_gen.h:161:7
         assign bn_addr_valid = data_en;

         // rtl_process:org_bn_addr_gen/drive_bn_addr
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_bn_addr
         // at: org_bn_addr_gen.h:154:7
         assign bn_addr = org_bn_addr_gen_MuxAdd3u16Cati0u16u32i0u1_4_2_out1;

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_Equal_8Ux1U_1U_4_1
         // Resource=org_bn_addr_gen_Equal_8Ux1U_1U_4, Function=eq : Inputs=8,1 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:153:9
         assign org_bn_addr_gen_Equal_8Ux1U_1U_4_1_out1 = bn_en == 8'd001;

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_MuxAdd3u16Cati0u16u32i0u1_4
         always @(bn_read_base_addr or valid_cnt or of_cnt or org_bn_addr_gen_Equal_8Ux1U_1U_4_1_out1)
          begin :org_bn_addr_gen_MuxAdd3u16Cati0u16u32i0u1_4_2
            if (org_bn_addr_gen_Equal_8Ux1U_1U_4_1_out1) begin
               org_bn_addr_gen_MuxAdd3u16Cati0u16u32i0u1_4_2_out1 = bn_read_base_addr + {{14'b00000000000000, of_cnt}, 2'd0} + {16'b0000000000000000, valid_cnt};
            end
            else begin
               org_bn_addr_gen_MuxAdd3u16Cati0u16u32i0u1_4_2_out1 = 32'd0000000000;
            end
         end

         // rtl_process:org_bn_addr_gen/drive_ox_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_ox_cnt_max
         // at: org_bn_addr_gen.h:147:5
         // at: org_bn_addr_gen.h:106:56
         always @(posedge clk)
          begin :drive_ox_cnt_max
            // op:_set_max_num/OP5
            ox_cnt_max <= out_feature_width;
         end

         // rtl_process:org_bn_addr_gen/drive_oy_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_oy_cnt_max
         // at: org_bn_addr_gen.h:148:5
         // at: org_bn_addr_gen.h:120:56
         always @(posedge clk)
          begin :drive_oy_cnt_max
            // op:_set_max_num/OP4
            oy_cnt_max <= out_feature_height;
         end

         // rtl_process:org_bn_addr_gen/drive_of_cnt_max_slice
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_of_cnt_max_slice
         // at: org_bn_addr_gen.h:149:5
         // at: org_bn_addr_gen.h:134:56
         always @(posedge clk)
          begin :drive_of_cnt_max_slice
            // op:_set_max_num/OP3
            of_cnt_max_slice <= out_feature_channel[15:5];
         end

         // rtl_process:org_bn_addr_gen/drive_of_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_of_cnt
         // at: org_bn_addr_gen.h:143:7
         // at: org_bn_addr_gen.h:139:7
         always @(posedge clk or negedge rstn)
          begin :drive_of_cnt
            if (rstn == 1'b0) begin
               // op:_of_counter/OP106
               of_cnt <= 16'd00000;
            end
            else begin
               // op:_of_counter/OP113
               of_cnt <= org_bn_addr_gen_Muxi0u16u1_4_18_out1;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_MuxAdd2i1u16u16u1_4
         always @(of_cnt or org_bn_addr_gen_And_1Ux1U_1U_1_12_out1)
          begin :org_bn_addr_gen_MuxAdd2i1u16u16u1_4_17
            if (org_bn_addr_gen_And_1Ux1U_1U_1_12_out1) begin
               org_bn_addr_gen_MuxAdd2i1u16u16u1_4_17_out1 = of_cnt + 16'd00001;
            end
            else begin
               org_bn_addr_gen_MuxAdd2i1u16u16u1_4_17_out1 = of_cnt;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_Muxi0u16u1_4
         always @(org_bn_addr_gen_And_1Ux1U_1U_1_16_out1 or org_bn_addr_gen_MuxAdd2i1u16u16u1_4_17_out1)
          begin :org_bn_addr_gen_Muxi0u16u1_4_18
            if (org_bn_addr_gen_And_1Ux1U_1U_1_16_out1) begin
               org_bn_addr_gen_Muxi0u16u1_4_18_out1 = 16'd00000;
            end
            else begin
               org_bn_addr_gen_Muxi0u16u1_4_18_out1 = org_bn_addr_gen_MuxAdd2i1u16u16u1_4_17_out1;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_EqSubi1u16u16_1_15
         // Resource=org_bn_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:134:53
         assign org_bn_addr_gen_EqSubi1u16u16_1_15_out1 = {1'b0, of_cnt} == {6'd00, of_cnt_max_slice} - 17'd000001;

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_And_1Ux1U_1U_1_16
         // Resource=org_bn_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:134:35
         assign org_bn_addr_gen_And_1Ux1U_1U_1_16_out1 = org_bn_addr_gen_EqSubi1u16u16_1_15_out1 & org_bn_addr_gen_And_1Ux1U_1U_1_12_out1;

         // rtl_process:org_bn_addr_gen/drive_oy_cnt
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_oy_cnt
         // at: org_bn_addr_gen.h:120:39
         // at: org_bn_addr_gen.h:125:7
         // at: org_bn_addr_gen.h:129:7
         always @(posedge clk or negedge rstn)
          begin :drive_oy_cnt
            if (rstn == 1'b0) begin
               // op:_oy_counter/OP81
               oy_cnt <= 16'd00000;
            end
            else begin
               // op:_oy_counter/OP88
               oy_cnt <= org_bn_addr_gen_Muxi0u16u1_4_14_out1;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_MuxAdd2i1u16u16u1_4
         always @(oy_cnt or org_bn_addr_gen_And_1Ux1U_1U_1_8_out1)
          begin :org_bn_addr_gen_MuxAdd2i1u16u16u1_4_13
            if (org_bn_addr_gen_And_1Ux1U_1U_1_8_out1) begin
               org_bn_addr_gen_MuxAdd2i1u16u16u1_4_13_out1 = oy_cnt + 16'd00001;
            end
            else begin
               org_bn_addr_gen_MuxAdd2i1u16u16u1_4_13_out1 = oy_cnt;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_Muxi0u16u1_4
         always @(org_bn_addr_gen_And_1Ux1U_1U_1_12_out1 or org_bn_addr_gen_MuxAdd2i1u16u16u1_4_13_out1)
          begin :org_bn_addr_gen_Muxi0u16u1_4_14
            if (org_bn_addr_gen_And_1Ux1U_1U_1_12_out1) begin
               org_bn_addr_gen_Muxi0u16u1_4_14_out1 = 16'd00000;
            end
            else begin
               org_bn_addr_gen_Muxi0u16u1_4_14_out1 = org_bn_addr_gen_MuxAdd2i1u16u16u1_4_13_out1;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_EqSubi1u16u16_1_11
         // Resource=org_bn_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:120:53
         assign org_bn_addr_gen_EqSubi1u16u16_1_11_out1 = {1'b0, oy_cnt} == {1'b0, oy_cnt_max} - 17'd000001;

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_And_1Ux1U_1U_1_12
         // Resource=org_bn_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:120:35
         assign org_bn_addr_gen_And_1Ux1U_1U_1_12_out1 = org_bn_addr_gen_EqSubi1u16u16_1_11_out1 & org_bn_addr_gen_And_1Ux1U_1U_1_8_out1;

         // rtl_process:org_bn_addr_gen/drive_ox_cnt
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_ox_cnt
         // at: org_bn_addr_gen.h:106:39
         // at: org_bn_addr_gen.h:111:7
         // at: org_bn_addr_gen.h:115:7
         always @(posedge clk or negedge rstn)
          begin :drive_ox_cnt
            if (rstn == 1'b0) begin
               // op:_ox_counter/OP56
               ox_cnt <= 16'd00000;
            end
            else begin
               // op:_ox_counter/OP63
               ox_cnt <= org_bn_addr_gen_Muxi0u16u1_4_10_out1;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_MuxAdd2i1u16u16u1_4
         always @(ox_cnt or org_bn_addr_gen_And_1Ux1U_1U_1_4_out1)
          begin :org_bn_addr_gen_MuxAdd2i1u16u16u1_4_9
            if (org_bn_addr_gen_And_1Ux1U_1U_1_4_out1) begin
               org_bn_addr_gen_MuxAdd2i1u16u16u1_4_9_out1 = ox_cnt + 16'd00001;
            end
            else begin
               org_bn_addr_gen_MuxAdd2i1u16u16u1_4_9_out1 = ox_cnt;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_Muxi0u16u1_4
         always @(org_bn_addr_gen_And_1Ux1U_1U_1_8_out1 or org_bn_addr_gen_MuxAdd2i1u16u16u1_4_9_out1)
          begin :org_bn_addr_gen_Muxi0u16u1_4_10
            if (org_bn_addr_gen_And_1Ux1U_1U_1_8_out1) begin
               org_bn_addr_gen_Muxi0u16u1_4_10_out1 = 16'd00000;
            end
            else begin
               org_bn_addr_gen_Muxi0u16u1_4_10_out1 = org_bn_addr_gen_MuxAdd2i1u16u16u1_4_9_out1;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_EqSubi1u16u16_1_7
         // Resource=org_bn_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:106:53
         assign org_bn_addr_gen_EqSubi1u16u16_1_7_out1 = {1'b0, ox_cnt} == {1'b0, ox_cnt_max} - 17'd000001;

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_And_1Ux1U_1U_1_8
         // Resource=org_bn_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:106:35
         assign org_bn_addr_gen_And_1Ux1U_1U_1_8_out1 = org_bn_addr_gen_EqSubi1u16u16_1_7_out1 & org_bn_addr_gen_And_1Ux1U_1U_1_4_out1;

         // rtl_process:org_bn_addr_gen/drive_valid_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_valid_cnt
         // at: org_bn_addr_gen.h:100:7
         // at: org_bn_addr_gen.h:96:7
         always @(posedge clk or negedge rstn)
          begin :drive_valid_cnt
            if (rstn == 1'b0) begin
               // op:_valid_counter/OP31
               valid_cnt <= 16'd00000;
            end
            else begin
               // op:_valid_counter/OP38
               valid_cnt <= org_bn_addr_gen_Muxi0u16u1_4_6_out1;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_MuxAdd2i1u16u16u1_4
         always @(data_en or valid_cnt)
          begin :org_bn_addr_gen_MuxAdd2i1u16u16u1_4_5
            if (data_en) begin
               org_bn_addr_gen_MuxAdd2i1u16u16u1_4_5_out1 = valid_cnt + 16'd00001;
            end
            else begin
               org_bn_addr_gen_MuxAdd2i1u16u16u1_4_5_out1 = valid_cnt;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_Muxi0u16u1_4
         always @(org_bn_addr_gen_And_1Ux1U_1U_1_4_out1 or org_bn_addr_gen_MuxAdd2i1u16u16u1_4_5_out1)
          begin :org_bn_addr_gen_Muxi0u16u1_4_6
            if (org_bn_addr_gen_And_1Ux1U_1U_1_4_out1) begin
               org_bn_addr_gen_Muxi0u16u1_4_6_out1 = 16'd00000;
            end
            else begin
               org_bn_addr_gen_Muxi0u16u1_4_6_out1 = org_bn_addr_gen_MuxAdd2i1u16u16u1_4_5_out1;
            end
         end

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_Eqi3u16_1_3
         // Resource=org_bn_addr_gen_Eqi3u16_1, Function=eq : Inputs=16 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:91:70
         assign org_bn_addr_gen_Eqi3u16_1_3_out1 = valid_cnt == 16'd00003;

         // rtl_instance:org_bn_addr_gen/org_bn_addr_gen_And_1Ux1U_1U_1_4
         // Resource=org_bn_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: org_bn_addr_gen.h:91:49
         assign org_bn_addr_gen_And_1Ux1U_1U_1_4_out1 = org_bn_addr_gen_Eqi3u16_1_3_out1 & data_en;


endmodule


