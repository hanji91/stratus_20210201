// Generated by stratus_hls 19.10-p100  (91500.011111)
// Thu Jan 21 19:36:18 2021
// from st_feature_addr_gen.cpp

`timescale 1ps / 1ps

      
module st_feature_addr_gen(clk, rstn, stop, start, start_rising, feature_width, feature_height, feature_channel, out_feature_width, out_feature_height, out_feature_channel, dilation_x, dilation_y, filter_width, filter_height, filter_channel, stride_x, stride_y, pad_top_size, pad_bottom_size, pad_left_size, pad_right_size, read_feature_base_addr, st_feature_addr, st_feature_addr_valid, st_feature_data_valid, cache_en, st_feature_data_sel, st_addr_if_start);

      input clk;
      input rstn;
      input stop;
      input [7:0] start;
      input start_rising;
      input [15:0] feature_width;
      input [15:0] feature_height;
      input [15:0] feature_channel;
      input [15:0] out_feature_width;
      input [15:0] out_feature_height;
      input [15:0] out_feature_channel;
      input [7:0] dilation_x;
      input [7:0] dilation_y;
      input [15:0] filter_width;
      input [15:0] filter_height;
      input [15:0] filter_channel;
      input [7:0] stride_x;
      input [7:0] stride_y;
      input [7:0] pad_top_size;
      input [7:0] pad_bottom_size;
      input [7:0] pad_left_size;
      input [7:0] pad_right_size;
      input [31:0] read_feature_base_addr;
      output [31:0] st_feature_addr;
      reg [31:0] st_feature_addr;
      output st_feature_addr_valid;
      reg st_feature_addr_valid;
      output st_feature_data_valid;
      reg st_feature_data_valid;
      output cache_en;
      reg cache_en;
      output [15:0] st_feature_data_sel;
      reg [15:0] st_feature_data_sel;
      output st_addr_if_start;
      reg st_addr_if_start;
      /*signed*/wire[1:0] st_feature_addr_gen_AndReduction_2S_1U_1_50_in1;
      wire st_feature_addr_gen_AndReduction_2S_1U_4_49_out1;
      /*signed*/wire[1:0] st_feature_addr_gen_AndReduction_2S_1U_4_49_in1;
      wire st_feature_addr_gen_AndReduction_4S_1U_1_48_out1;
      /*signed*/wire[3:0] st_feature_addr_gen_AndReduction_4S_1U_1_48_in1;
      wire st_feature_addr_gen_And_1Ux1U_1U_4_56_out1;
      wire st_feature_addr_gen_And_1Ux1U_1U_4_55_out1;
      wire st_feature_addr_gen_And_1Ux1U_1U_4_54_out1;
      wire st_feature_addr_gen_AndReduction_2S_1U_1_50_out1;
      wire st_feature_addr_gen_Not_1U_1U_4_53_out1;
      wire st_feature_addr_gen_Nei1u16_4_52_out1;
      wire st_feature_addr_gen_Nei1u16_4_51_out1;
      wire st_feature_addr_gen_Or_1Ux1U_1U_4_57_out1;
      reg enable;
      wire st_feature_addr_gen_Not_1U_1U_4_12_out1;
      wire st_feature_addr_gen_And_1Ux1U_1U_4_13_out1;
      wire[8:0] st_feature_addr_gen_Add2i1u8_4_9_out1;
      wire[8:0] st_feature_addr_gen_Add2i1u8_4_8_out1;
      wire[15:0] st_feature_addr_gen_Mul_16Ux9U_16U_1_11_out1;
      wire[15:0] st_feature_addr_gen_Mul_16Ux9U_16U_1_10_out1;
      reg[15:0] ix_cnt_max;
      wire st_feature_addr_gen_EqSubi1u16u16_1_24_out1;
      reg[15:0] st_feature_addr_gen_MuxAdd3i1u8u16u16u1_4_26_out1;
      reg[15:0] st_feature_addr_gen_N_Mux_16_2_25_4_27_out1;
      reg[15:0] iy_cnt_max;
      wire st_feature_addr_gen_EqSubi1u16u16_1_28_out1;
      reg[15:0] st_feature_addr_gen_MuxAdd3i1u8u16u16u1_1_30_out1;
      wire st_feature_addr_gen_And_1Ux1U_1U_1_25_out1;
      reg[15:0] st_feature_addr_gen_N_Mux_16_2_25_4_31_out1;
      reg[15:0] if_cnt_max;
      wire st_feature_addr_gen_EqSubi1u16u16_1_32_out1;
      reg[15:0] st_feature_addr_gen_MuxAdd2i1u16u16u1_4_34_out1;
      wire st_feature_addr_gen_And_1Ux1U_1U_1_29_out1;
      reg[15:0] st_feature_addr_gen_N_Mux_16_2_25_4_35_out1;
      reg[15:0] ox_cnt_max;
      wire st_feature_addr_gen_EqSubi1u16u16_1_36_out1;
      reg[15:0] st_feature_addr_gen_MuxAdd2i1u16u16u1_1_38_out1;
      reg[15:0] st_feature_addr_gen_N_Mux_16_2_25_4_39_out1;
      reg[15:0] oy_cnt_max;
      wire st_feature_addr_gen_EqSubi1u16u16_1_40_out1;
      reg[15:0] st_feature_addr_gen_MuxAdd2i1u16u16u1_1_42_out1;
      wire st_feature_addr_gen_And_1Ux1U_1U_1_37_out1;
      reg[15:0] st_feature_addr_gen_N_Mux_16_2_25_4_43_out1;
      wire st_feature_addr_gen_EqSubi1u16u16_1_44_out1;
      reg[15:0] of_cnt_max;
      wire[15:0] st_feature_addr_gen_EqSubi1u16u16_1_44_in1;
      wire st_feature_addr_gen_And_1Ux1U_1U_1_45_out1;
      reg[15:0] st_feature_addr_gen_MuxAdd2i1u16u16u1_1_46_out1;
      wire st_feature_addr_gen_And_1Ux1U_1U_1_41_out1;
      reg[15:0] st_feature_addr_gen_N_Mux_16_2_25_4_47_out1;
      reg[15:0] ix_cnt;
      reg[15:0] ox_cnt;
      wire[15:0] st_feature_addr_gen_Add2Mul2u8u16u16_4_7_out1;
      reg[15:0] iy_cnt;
      reg[15:0] oy_cnt;
      wire[15:0] st_feature_addr_gen_Add2Mul2u8u16u16_4_6_out1;
      reg[15:0] of_cnt;
      reg[15:0] of_pos;
      /*signed*/wire[15:0] st_feature_addr_gen_Sub_16Ux8U_16S_4_20_out1;
      /*signed*/wire[15:0] st_feature_addr_gen_Sub_16Ux8U_16S_4_19_out1;
      wire[15:0] st_feature_addr_gen_Mul_16Ux16U_16U_4_21_out1;
      reg[15:0] st_feature_addr_gen_N_Mux_16_2_25_4_22_out1;
      reg[15:0] st_feature_addr_gen_N_Mux_16_2_25_4_23_out1;
      reg[15:0] org_iy_pos;
      reg[15:0] org_of_pos;
      reg[15:0] org_ix_pos;
      wire[31:0] st_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1;
      wire[31:0] st_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1;
      reg[15:0] sum_ix_slice;
      reg[31:0] sum_iy;
      reg[31:0] sum_of;
      wire[31:0] st_feature_addr_gen_Add4u32u32u32u32_4_3_out1;
      wire[3:0] st_feature_addr_gen_OrReduction_4U_1U_1_18_in1;
      wire st_feature_addr_gen_LessThan_16Ux8U_1U_4_17_out1;
      reg[15:0] ix_pos;
      wire st_feature_addr_gen_GtSubi1Add2u8u16u16_1_16_out1;
      wire st_feature_addr_gen_LessThan_16Ux8U_1U_4_15_out1;
      reg[15:0] iy_pos;
      wire st_feature_addr_gen_GtSubi1Add2u8u16u16_1_14_out1;
      reg st_feature_addr_valid_4d;
      reg st_feature_addr_valid_3d;
      reg st_feature_addr_valid_2d;
      reg st_feature_addr_valid_1d;
      reg if_clear_9d;
      reg if_clear_8d;
      reg if_clear_7d;
      reg if_clear_6d;
      reg if_clear_5d;
      reg if_clear_4d;
      reg if_clear_3d;
      reg if_clear_2d;
      wire st_feature_addr_gen_And_1Ux1U_1U_1_33_out1;
      reg if_clear_1d;
      reg[15:0] if_cnt_8d;
      reg[15:0] if_cnt_7d;
      reg[15:0] if_cnt_6d;
      reg[15:0] if_cnt_5d;
      reg[15:0] if_cnt_4d;
      reg[15:0] if_cnt_3d;
      reg[15:0] if_cnt_2d;
      reg[15:0] if_cnt;
      reg[15:0] if_cnt_1d;
      wire st_feature_addr_gen_OrReduction_4U_1U_1_18_out1;
      reg run_8d;
      reg run_7d;
      reg run_6d;
      reg run_5d;
      reg run_4d;
      reg run;
      reg run_1d;
      reg run_2d;
      reg is_zero_1d;
      reg run_9d;
      reg st_feature_addr_valid_5d;
      reg[15:0] if_cnt_9d;
      reg if_clear_10d;
      reg run_3d;
      reg is_zero_2d;
      wire st_feature_addr_gen_Not_1U_1U_4_1_out1;
      wire st_feature_addr_gen_And_1Ux1U_1U_4_2_out1;
      reg run_10d;
      reg st_feature_addr_valid_6d;
      reg[15:0] if_cnt_10d;
      reg if_clear_11d;

         // rtl_process:st_feature_addr_gen/drive_st_addr_if_start
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_st_addr_if_start
         // at: st_feature_addr_gen.h:448:7
         // at: st_feature_addr_gen.h:452:7
         always @(posedge clk or negedge rstn)
          begin :drive_st_addr_if_start
            if (rstn == 1'b0) begin
               // op:_st_addr_if_start/OP0
               st_addr_if_start <= 1'd0;
            end
            else begin
               // op:_st_addr_if_start/OP2
               st_addr_if_start <= if_clear_11d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_data_sel
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_st_feature_data_sel
         // at: st_feature_addr_gen.h:439:7
         // at: st_feature_addr_gen.h:443:7
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_data_sel
            if (rstn == 1'b0) begin
               // op:_st_feature_data_sel/OP3
               st_feature_data_sel <= 16'd00000;
            end
            else begin
               // op:_st_feature_data_sel/OP5
               st_feature_data_sel <= if_cnt_10d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_data_valid
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_st_feature_data_valid
         // at: st_feature_addr_gen.h:430:7
         // at: st_feature_addr_gen.h:434:7
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_data_valid
            if (rstn == 1'b0) begin
               // op:_st_feature_data_valid/OP6
               st_feature_data_valid <= 1'd0;
            end
            else begin
               // op:_st_feature_data_valid/OP8
               st_feature_data_valid <= st_feature_addr_valid_6d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_cache_en
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_cache_en
         // at: st_feature_addr_gen.h:420:7
         // at: st_feature_addr_gen.h:424:7
         always @(posedge clk or negedge rstn)
          begin :drive_cache_en
            if (rstn == 1'b0) begin
               // op:_cache_en/OP9
               cache_en <= 1'd0;
            end
            else begin
               // op:_cache_en/OP11
               cache_en <= run_10d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_valid
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_st_feature_addr_valid
         // at: st_feature_addr_gen.h:319:8
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_addr_valid
            if (rstn == 1'b0) begin
               // op:_st_feature_addr_valid/OP12
               st_feature_addr_valid <= 1'd0;
            end
            else begin
               // op:_st_feature_addr_valid/OP17
               st_feature_addr_valid <= st_feature_addr_gen_And_1Ux1U_1U_4_2_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Not_1U_1U_4_1
         // Resource=st_feature_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:415:49
         assign st_feature_addr_gen_Not_1U_1U_4_1_out1 = !is_zero_2d;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_4_2
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:415:45
         assign st_feature_addr_gen_And_1Ux1U_1U_4_2_out1 = st_feature_addr_gen_Not_1U_1U_4_1_out1 & run_3d;

         // rtl_process:st_feature_addr_gen/drive_if_clear_11d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_if_clear_11d
         // at: st_feature_addr_gen.h:452:26
         // at: st_feature_addr_gen.h:355:7
         // at: st_feature_addr_gen.h:398:7
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_11d
            if (rstn == 1'b0) begin
               // op:_delay/OP254
               if_clear_11d <= 1'b0;
            end
            else begin
               // op:_delay/OP347
               if_clear_11d <= if_clear_10d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_10d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_if_cnt_10d
         // at: st_feature_addr_gen.h:443:29
         // at: st_feature_addr_gen.h:344:7
         // at: st_feature_addr_gen.h:387:7
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_10d
            if (rstn == 1'b0) begin
               // op:_delay/OP243
               if_cnt_10d <= 16'd00000;
            end
            else begin
               // op:_delay/OP358
               if_cnt_10d <= if_cnt_9d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_valid_6d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_st_feature_addr_valid_6d
         // at: st_feature_addr_gen.h:434:31
         // at: st_feature_addr_gen.h:361:7
         // at: st_feature_addr_gen.h:404:7
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_addr_valid_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP260
               st_feature_addr_valid_6d <= 1'd0;
            end
            else begin
               // op:_delay/OP341
               st_feature_addr_valid_6d <= st_feature_addr_valid_5d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_10d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_run_10d
         // at: st_feature_addr_gen.h:424:18
         // at: st_feature_addr_gen.h:331:7
         // at: st_feature_addr_gen.h:374:7
         always @(posedge clk or negedge rstn)
          begin :drive_run_10d
            if (rstn == 1'b0) begin
               // op:_delay/OP230
               run_10d <= 1'b0;
            end
            else begin
               // op:_delay/OP371
               run_10d <= run_9d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_is_zero_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_is_zero_2d
         // at: st_feature_addr_gen.h:415:50
         // at: st_feature_addr_gen.h:333:7
         // at: st_feature_addr_gen.h:376:7
         always @(posedge clk or negedge rstn)
          begin :drive_is_zero_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP232
               is_zero_2d <= 1'b0;
            end
            else begin
               // op:_delay/OP369
               is_zero_2d <= is_zero_1d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_3d
         // at: st_feature_addr_gen.h:415:31
         // at: st_feature_addr_gen.h:324:7
         // at: st_feature_addr_gen.h:367:7
         always @(posedge clk or negedge rstn)
          begin :drive_run_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP223
               run_3d <= 1'b0;
            end
            else begin
               // op:_delay/OP378
               run_3d <= run_2d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_1d
         // at: st_feature_addr_gen.h:322:7
         // at: st_feature_addr_gen.h:365:7
         // at: st_feature_addr_gen.h:366:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP221
               run_1d <= 1'b0;
            end
            else begin
               // op:_delay/OP380
               run_1d <= run;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_2d
         // at: st_feature_addr_gen.h:323:7
         // at: st_feature_addr_gen.h:366:7
         // at: st_feature_addr_gen.h:367:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP222
               run_2d <= 1'b0;
            end
            else begin
               // op:_delay/OP379
               run_2d <= run_1d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_4d
         // at: st_feature_addr_gen.h:325:7
         // at: st_feature_addr_gen.h:368:7
         // at: st_feature_addr_gen.h:369:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP224
               run_4d <= 1'b0;
            end
            else begin
               // op:_delay/OP377
               run_4d <= run_3d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_5d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_5d
         // at: st_feature_addr_gen.h:326:7
         // at: st_feature_addr_gen.h:369:7
         // at: st_feature_addr_gen.h:370:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP225
               run_5d <= 1'b0;
            end
            else begin
               // op:_delay/OP376
               run_5d <= run_4d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_6d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_6d
         // at: st_feature_addr_gen.h:327:7
         // at: st_feature_addr_gen.h:370:7
         // at: st_feature_addr_gen.h:371:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP226
               run_6d <= 1'b0;
            end
            else begin
               // op:_delay/OP375
               run_6d <= run_5d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_7d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_7d
         // at: st_feature_addr_gen.h:328:7
         // at: st_feature_addr_gen.h:371:7
         // at: st_feature_addr_gen.h:372:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_7d
            if (rstn == 1'b0) begin
               // op:_delay/OP227
               run_7d <= 1'b0;
            end
            else begin
               // op:_delay/OP374
               run_7d <= run_6d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_8d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_8d
         // at: st_feature_addr_gen.h:329:7
         // at: st_feature_addr_gen.h:372:7
         // at: st_feature_addr_gen.h:373:16
         always @(posedge clk or negedge rstn)
          begin :drive_run_8d
            if (rstn == 1'b0) begin
               // op:_delay/OP228
               run_8d <= 1'b0;
            end
            else begin
               // op:_delay/OP373
               run_8d <= run_7d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_run_9d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_run_9d
         // at: st_feature_addr_gen.h:330:7
         // at: st_feature_addr_gen.h:373:7
         // at: st_feature_addr_gen.h:374:17
         always @(posedge clk or negedge rstn)
          begin :drive_run_9d
            if (rstn == 1'b0) begin
               // op:_delay/OP229
               run_9d <= 1'b0;
            end
            else begin
               // op:_delay/OP372
               run_9d <= run_8d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_is_zero_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_is_zero_1d
         // at: st_feature_addr_gen.h:332:7
         // at: st_feature_addr_gen.h:375:7
         // at: st_feature_addr_gen.h:376:20
         always @(posedge clk or negedge rstn)
          begin :drive_is_zero_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP231
               is_zero_1d <= 1'b0;
            end
            else begin
               // op:_delay/OP370
               is_zero_1d <= st_feature_addr_gen_OrReduction_4U_1U_1_18_out1;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_1d
         // at: st_feature_addr_gen.h:335:7
         // at: st_feature_addr_gen.h:378:7
         // at: st_feature_addr_gen.h:379:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP234
               if_cnt_1d <= 16'd00000;
            end
            else begin
               // op:_delay/OP367
               if_cnt_1d <= if_cnt;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_2d
         // at: st_feature_addr_gen.h:336:7
         // at: st_feature_addr_gen.h:379:7
         // at: st_feature_addr_gen.h:380:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP235
               if_cnt_2d <= 16'd00000;
            end
            else begin
               // op:_delay/OP366
               if_cnt_2d <= if_cnt_1d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_3d
         // at: st_feature_addr_gen.h:337:7
         // at: st_feature_addr_gen.h:380:7
         // at: st_feature_addr_gen.h:381:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP236
               if_cnt_3d <= 16'd00000;
            end
            else begin
               // op:_delay/OP365
               if_cnt_3d <= if_cnt_2d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_4d
         // at: st_feature_addr_gen.h:338:7
         // at: st_feature_addr_gen.h:381:7
         // at: st_feature_addr_gen.h:382:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP237
               if_cnt_4d <= 16'd00000;
            end
            else begin
               // op:_delay/OP364
               if_cnt_4d <= if_cnt_3d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_5d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_5d
         // at: st_feature_addr_gen.h:339:7
         // at: st_feature_addr_gen.h:382:7
         // at: st_feature_addr_gen.h:383:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP238
               if_cnt_5d <= 16'd00000;
            end
            else begin
               // op:_delay/OP363
               if_cnt_5d <= if_cnt_4d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_6d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_6d
         // at: st_feature_addr_gen.h:340:7
         // at: st_feature_addr_gen.h:383:7
         // at: st_feature_addr_gen.h:384:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP239
               if_cnt_6d <= 16'd00000;
            end
            else begin
               // op:_delay/OP362
               if_cnt_6d <= if_cnt_5d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_7d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_7d
         // at: st_feature_addr_gen.h:341:7
         // at: st_feature_addr_gen.h:384:7
         // at: st_feature_addr_gen.h:385:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_7d
            if (rstn == 1'b0) begin
               // op:_delay/OP240
               if_cnt_7d <= 16'd00000;
            end
            else begin
               // op:_delay/OP361
               if_cnt_7d <= if_cnt_6d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_8d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_8d
         // at: st_feature_addr_gen.h:342:7
         // at: st_feature_addr_gen.h:385:7
         // at: st_feature_addr_gen.h:386:19
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_8d
            if (rstn == 1'b0) begin
               // op:_delay/OP241
               if_cnt_8d <= 16'd00000;
            end
            else begin
               // op:_delay/OP360
               if_cnt_8d <= if_cnt_7d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_9d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_cnt_9d
         // at: st_feature_addr_gen.h:343:7
         // at: st_feature_addr_gen.h:386:7
         // at: st_feature_addr_gen.h:387:20
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt_9d
            if (rstn == 1'b0) begin
               // op:_delay/OP242
               if_cnt_9d <= 16'd00000;
            end
            else begin
               // op:_delay/OP359
               if_cnt_9d <= if_cnt_8d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_1d
         // at: st_feature_addr_gen.h:345:7
         // at: st_feature_addr_gen.h:388:7
         // at: st_feature_addr_gen.h:389:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP244
               if_clear_1d <= 1'b0;
            end
            else begin
               // op:_delay/OP357
               if_clear_1d <= st_feature_addr_gen_And_1Ux1U_1U_1_33_out1;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_2d
         // at: st_feature_addr_gen.h:346:7
         // at: st_feature_addr_gen.h:389:7
         // at: st_feature_addr_gen.h:390:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP245
               if_clear_2d <= 1'b0;
            end
            else begin
               // op:_delay/OP356
               if_clear_2d <= if_clear_1d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_3d
         // at: st_feature_addr_gen.h:347:7
         // at: st_feature_addr_gen.h:390:7
         // at: st_feature_addr_gen.h:391:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP246
               if_clear_3d <= 1'b0;
            end
            else begin
               // op:_delay/OP355
               if_clear_3d <= if_clear_2d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_4d
         // at: st_feature_addr_gen.h:348:7
         // at: st_feature_addr_gen.h:391:7
         // at: st_feature_addr_gen.h:392:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP247
               if_clear_4d <= 1'b0;
            end
            else begin
               // op:_delay/OP354
               if_clear_4d <= if_clear_3d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_5d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_5d
         // at: st_feature_addr_gen.h:349:7
         // at: st_feature_addr_gen.h:392:7
         // at: st_feature_addr_gen.h:393:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP248
               if_clear_5d <= 1'b0;
            end
            else begin
               // op:_delay/OP353
               if_clear_5d <= if_clear_4d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_6d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_6d
         // at: st_feature_addr_gen.h:350:7
         // at: st_feature_addr_gen.h:393:7
         // at: st_feature_addr_gen.h:394:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_6d
            if (rstn == 1'b0) begin
               // op:_delay/OP249
               if_clear_6d <= 1'b0;
            end
            else begin
               // op:_delay/OP352
               if_clear_6d <= if_clear_5d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_7d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_7d
         // at: st_feature_addr_gen.h:351:7
         // at: st_feature_addr_gen.h:394:7
         // at: st_feature_addr_gen.h:395:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_7d
            if (rstn == 1'b0) begin
               // op:_delay/OP250
               if_clear_7d <= 1'b0;
            end
            else begin
               // op:_delay/OP351
               if_clear_7d <= if_clear_6d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_8d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_8d
         // at: st_feature_addr_gen.h:352:7
         // at: st_feature_addr_gen.h:395:7
         // at: st_feature_addr_gen.h:396:21
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_8d
            if (rstn == 1'b0) begin
               // op:_delay/OP251
               if_clear_8d <= 1'b0;
            end
            else begin
               // op:_delay/OP350
               if_clear_8d <= if_clear_7d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_9d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_9d
         // at: st_feature_addr_gen.h:353:7
         // at: st_feature_addr_gen.h:396:7
         // at: st_feature_addr_gen.h:397:22
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_9d
            if (rstn == 1'b0) begin
               // op:_delay/OP252
               if_clear_9d <= 1'b0;
            end
            else begin
               // op:_delay/OP349
               if_clear_9d <= if_clear_8d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_if_clear_10d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_if_clear_10d
         // at: st_feature_addr_gen.h:354:7
         // at: st_feature_addr_gen.h:397:7
         // at: st_feature_addr_gen.h:398:22
         always @(posedge clk or negedge rstn)
          begin :drive_if_clear_10d
            if (rstn == 1'b0) begin
               // op:_delay/OP253
               if_clear_10d <= 1'b0;
            end
            else begin
               // op:_delay/OP348
               if_clear_10d <= if_clear_9d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_valid_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_st_feature_addr_valid_1d
         // at: st_feature_addr_gen.h:356:7
         // at: st_feature_addr_gen.h:399:7
         // at: st_feature_addr_gen.h:400:34
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_addr_valid_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP255
               st_feature_addr_valid_1d <= 1'd0;
            end
            else begin
               // op:_delay/OP346
               st_feature_addr_valid_1d <= st_feature_addr_valid;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_valid_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_st_feature_addr_valid_2d
         // at: st_feature_addr_gen.h:357:7
         // at: st_feature_addr_gen.h:400:7
         // at: st_feature_addr_gen.h:401:34
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_addr_valid_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP256
               st_feature_addr_valid_2d <= 1'd0;
            end
            else begin
               // op:_delay/OP345
               st_feature_addr_valid_2d <= st_feature_addr_valid_1d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_valid_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_st_feature_addr_valid_3d
         // at: st_feature_addr_gen.h:358:7
         // at: st_feature_addr_gen.h:401:7
         // at: st_feature_addr_gen.h:402:34
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_addr_valid_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP257
               st_feature_addr_valid_3d <= 1'd0;
            end
            else begin
               // op:_delay/OP344
               st_feature_addr_valid_3d <= st_feature_addr_valid_2d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_valid_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_st_feature_addr_valid_4d
         // at: st_feature_addr_gen.h:359:7
         // at: st_feature_addr_gen.h:402:7
         // at: st_feature_addr_gen.h:403:34
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_addr_valid_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP258
               st_feature_addr_valid_4d <= 1'd0;
            end
            else begin
               // op:_delay/OP343
               st_feature_addr_valid_4d <= st_feature_addr_valid_3d;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_valid_5d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_st_feature_addr_valid_5d
         // at: st_feature_addr_gen.h:360:7
         // at: st_feature_addr_gen.h:403:7
         // at: st_feature_addr_gen.h:404:34
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_addr_valid_5d
            if (rstn == 1'b0) begin
               // op:_delay/OP259
               st_feature_addr_valid_5d <= 1'd0;
            end
            else begin
               // op:_delay/OP342
               st_feature_addr_valid_5d <= st_feature_addr_valid_4d;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_GtSubi1Add2u8u16u16_1_14
         // Resource=st_feature_addr_gen_GtSubi1Add2u8u16u16_1, Function=add sub gt : Inputs=16,16,8 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:314:60
         assign st_feature_addr_gen_GtSubi1Add2u8u16u16_1_14_out1 = {3'b000, iy_pos} > {3'b000, feature_height} + {11'b00000000000, pad_bottom_size} - 19'd000001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_LessThan_16Ux8U_1U_4_15
         // Resource=st_feature_addr_gen_LessThan_16Ux8U_1U_4, Function=lt : Inputs=16,8 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:314:28
         assign st_feature_addr_gen_LessThan_16Ux8U_1U_4_15_out1 = iy_pos < {8'b00000000, pad_top_size};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_GtSubi1Add2u8u16u16_1_16
         // Resource=st_feature_addr_gen_GtSubi1Add2u8u16u16_1, Function=add sub gt : Inputs=16,16,8 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:312:56
         assign st_feature_addr_gen_GtSubi1Add2u8u16u16_1_16_out1 = {3'b000, ix_pos} > {3'b000, feature_width} + {11'b00000000000, pad_right_size} - 19'd000001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_LessThan_16Ux8U_1U_4_17
         // Resource=st_feature_addr_gen_LessThan_16Ux8U_1U_4, Function=lt : Inputs=16,8 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:312:23
         assign st_feature_addr_gen_LessThan_16Ux8U_1U_4_17_out1 = ix_pos < {8'b00000000, pad_left_size};

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_gen_OrReduction_4U_1U_1_18_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_st_feature_addr_gen_OrReduction_4U_1U_1_18_in1
         // at: st_feature_addr_gen.h:312:5 st_feature_addr_gen.h:314:10 st_feature_addr_gen.h:317:15 st_feature_addr_gen.h:315:15 st_feature_addr_gen.h:313:15
         assign st_feature_addr_gen_OrReduction_4U_1U_1_18_in1 = {{st_feature_addr_gen_LessThan_16Ux8U_1U_4_17_out1, st_feature_addr_gen_GtSubi1Add2u8u16u16_1_16_out1}, {st_feature_addr_gen_LessThan_16Ux8U_1U_4_15_out1, st_feature_addr_gen_GtSubi1Add2u8u16u16_1_14_out1}};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_OrReduction_4U_1U_1_18
         // Resource=st_feature_addr_gen_OrReduction_4U_1U_1, Function=or : Inputs=4 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:312:5
         assign st_feature_addr_gen_OrReduction_4U_1U_1_18_out1 = (|st_feature_addr_gen_OrReduction_4U_1U_1_18_in1);

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_st_feature_addr
         // at: st_feature_addr_gen.h:304:7
         // at: st_feature_addr_gen.h:306:7
         always @(posedge clk or negedge rstn)
          begin :drive_st_feature_addr
            if (rstn == 1'b0) begin
               // op:_st_feature_addr/OP21
               st_feature_addr <= 32'd0000000000;
            end
            else begin
               // op:_st_feature_addr/OP27
               st_feature_addr <= st_feature_addr_gen_Add4u32u32u32u32_4_3_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Add4u32u32u32u32_4_3
         // Resource=st_feature_addr_gen_Add4u32u32u32u32_4, Function=add add add : Inputs=32,32,32,32 Outputs=32
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:306:71
         assign st_feature_addr_gen_Add4u32u32u32u32_4_3_out1 = {16'd00000, sum_ix_slice} + sum_iy + sum_of + read_feature_base_addr;

         // rtl_process:st_feature_addr_gen/drive_sum_of
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_sum_of
         // at: st_feature_addr_gen.h:306:57
         // at: st_feature_addr_gen.h:291:7
         // at: st_feature_addr_gen.h:297:7
         always @(posedge clk or negedge rstn)
          begin :drive_sum_of
            if (rstn == 1'b0) begin
               // op:_sum_pos/OP34
               sum_of <= 32'd0000000000;
            end
            else begin
               // op:_sum_pos/OP40
               sum_of <= st_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_sum_iy
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_sum_iy
         // at: st_feature_addr_gen.h:306:41
         // at: st_feature_addr_gen.h:290:7
         // at: st_feature_addr_gen.h:296:7
         always @(posedge clk or negedge rstn)
          begin :drive_sum_iy
            if (rstn == 1'b0) begin
               // op:_sum_pos/OP33
               sum_iy <= 32'd0000000000;
            end
            else begin
               // op:_sum_pos/OP42
               sum_iy <= st_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_sum_ix_slice
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_sum_ix_slice
         // at: st_feature_addr_gen.h:306:25
         // at: st_feature_addr_gen.h:289:7
         // at: st_feature_addr_gen.h:295:7
         always @(posedge clk or negedge rstn)
          begin :drive_sum_ix_slice
            if (rstn == 1'b0) begin
               // op:_sum_pos/OP32
               sum_ix_slice <= 16'd00000;
            end
            else begin
               // op:_sum_pos/OP43
               sum_ix_slice <= org_ix_pos;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Mul_16Ux16U_32U_1_4
         // Resource=st_feature_addr_gen_Mul_16Ux16U_32U_1, Function=mul : Inputs=16,16 Outputs=32
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:297:34
         assign st_feature_addr_gen_Mul_16Ux16U_32U_1_4_out1 = {16'b0000000000000000, org_of_pos}*{16'b0000000000000000, feature_width};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Mul_16Ux16U_32U_1_5
         // Resource=st_feature_addr_gen_Mul_16Ux16U_32U_1, Function=mul : Inputs=16,16 Outputs=32
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:296:34
         assign st_feature_addr_gen_Mul_16Ux16U_32U_1_5_out1 = {16'b0000000000000000, org_iy_pos}*{16'b0000000000000000, feature_width};

         // rtl_process:st_feature_addr_gen/drive_org_ix_pos
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_org_ix_pos
         // at: st_feature_addr_gen.h:295:24
         // at: st_feature_addr_gen.h:275:7
         // at: st_feature_addr_gen.h:280:7
         always @(posedge clk or negedge rstn)
          begin :drive_org_ix_pos
            if (rstn == 1'b0) begin
               // op:_org_pos/OP127
               org_ix_pos <= 16'd00000;
            end
            else begin
               // op:_org_pos/OP144
               org_ix_pos <= st_feature_addr_gen_N_Mux_16_2_25_4_23_out1;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_org_iy_pos
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_org_iy_pos
         // at: st_feature_addr_gen.h:296:16
         // at: st_feature_addr_gen.h:276:7
         // at: st_feature_addr_gen.h:281:7
         always @(posedge clk or negedge rstn)
          begin :drive_org_iy_pos
            if (rstn == 1'b0) begin
               // op:_org_pos/OP128
               org_iy_pos <= 16'd00000;
            end
            else begin
               // op:_org_pos/OP141
               org_iy_pos <= st_feature_addr_gen_N_Mux_16_2_25_4_22_out1;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_org_of_pos
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_org_of_pos
         // at: st_feature_addr_gen.h:297:16
         // at: st_feature_addr_gen.h:277:7
         // at: st_feature_addr_gen.h:282:7
         always @(posedge clk or negedge rstn)
          begin :drive_org_of_pos
            if (rstn == 1'b0) begin
               // op:_org_pos/OP129
               org_of_pos <= 16'd00000;
            end
            else begin
               // op:_org_pos/OP138
               org_of_pos <= st_feature_addr_gen_Mul_16Ux16U_16U_4_21_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Sub_16Ux8U_16S_4_19
         // Resource=st_feature_addr_gen_Sub_16Ux8U_16S_4, Function=sub : Inputs=16,8 Outputs=16S
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:281:58
         assign st_feature_addr_gen_Sub_16Ux8U_16S_4_19_out1 = iy_pos - {8'b00000000, pad_top_size};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Sub_16Ux8U_16S_4_20
         // Resource=st_feature_addr_gen_Sub_16Ux8U_16S_4, Function=sub : Inputs=16,8 Outputs=16S
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:280:58
         assign st_feature_addr_gen_Sub_16Ux8U_16S_4_20_out1 = ix_pos - {8'b00000000, pad_left_size};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Mul_16Ux16U_16U_4_21
         // Resource=st_feature_addr_gen_Mul_16Ux16U_16U_4, Function=mul : Inputs=16,16 Outputs=16
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:282:34
         assign st_feature_addr_gen_Mul_16Ux16U_16U_4_21_out1 = of_pos*feature_height;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_N_Mux_16_2_25_4
         always @(st_feature_addr_gen_OrReduction_4U_1U_1_18_out1 or st_feature_addr_gen_Sub_16Ux8U_16S_4_19_out1)
          begin :st_feature_addr_gen_N_Mux_16_2_25_4_22
            if (st_feature_addr_gen_OrReduction_4U_1U_1_18_out1) begin
               st_feature_addr_gen_N_Mux_16_2_25_4_22_out1 = 16'd00000;
            end
            else begin
               st_feature_addr_gen_N_Mux_16_2_25_4_22_out1 = st_feature_addr_gen_Sub_16Ux8U_16S_4_19_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_N_Mux_16_2_25_4
         always @(st_feature_addr_gen_OrReduction_4U_1U_1_18_out1 or st_feature_addr_gen_Sub_16Ux8U_16S_4_20_out1)
          begin :st_feature_addr_gen_N_Mux_16_2_25_4_23
            if (st_feature_addr_gen_OrReduction_4U_1U_1_18_out1) begin
               st_feature_addr_gen_N_Mux_16_2_25_4_23_out1 = 16'd00000;
            end
            else begin
               st_feature_addr_gen_N_Mux_16_2_25_4_23_out1 = st_feature_addr_gen_Sub_16Ux8U_16S_4_20_out1;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_of_pos
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_of_pos
         // at: st_feature_addr_gen.h:267:7
         // at: st_feature_addr_gen.h:269:7
         // at: st_feature_addr_gen.h:282:20
         always @(posedge clk or negedge rstn)
          begin :drive_of_pos
            if (rstn == 1'b0) begin
               // op:_of_pos/OP48
               of_pos <= 16'd00000;
            end
            else begin
               // op:_of_pos/OP50
               of_pos <= of_cnt;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_iy_pos
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_iy_pos
         // at: st_feature_addr_gen.h:253:7
         // at: st_feature_addr_gen.h:255:7
         // at: st_feature_addr_gen.h:314:46
         // at: st_feature_addr_gen.h:281:44
         always @(posedge clk or negedge rstn)
          begin :drive_iy_pos
            if (rstn == 1'b0) begin
               // op:_iy_pos/OP51
               iy_pos <= 16'd00000;
            end
            else begin
               // op:_iy_pos/OP56
               iy_pos <= st_feature_addr_gen_Add2Mul2u8u16u16_4_6_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Add2Mul2u8u16u16_4_6
         // Resource=st_feature_addr_gen_Add2Mul2u8u16u16_4, Function=add mul : Inputs=16,16,8 Outputs=16
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:255:30
         assign st_feature_addr_gen_Add2Mul2u8u16u16_4_6_out1 = iy_cnt + oy_cnt*{8'b00000000, stride_y};

         // rtl_process:st_feature_addr_gen/drive_ix_pos
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_ix_pos
         // at: st_feature_addr_gen.h:246:7
         // at: st_feature_addr_gen.h:248:7
         // at: st_feature_addr_gen.h:312:42
         // at: st_feature_addr_gen.h:280:44
         always @(posedge clk or negedge rstn)
          begin :drive_ix_pos
            if (rstn == 1'b0) begin
               // op:_ix_pos/OP60
               ix_pos <= 16'd00000;
            end
            else begin
               // op:_ix_pos/OP65
               ix_pos <= st_feature_addr_gen_Add2Mul2u8u16u16_4_7_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Add2Mul2u8u16u16_4_7
         // Resource=st_feature_addr_gen_Add2Mul2u8u16u16_4, Function=add mul : Inputs=16,16,8 Outputs=16
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:248:30
         assign st_feature_addr_gen_Add2Mul2u8u16u16_4_7_out1 = ix_cnt + ox_cnt*{8'b00000000, stride_x};

         // rtl_process:st_feature_addr_gen/drive_of_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_of_cnt
         // at: st_feature_addr_gen.h:240:7
         // at: st_feature_addr_gen.h:235:7
         always @(posedge clk or negedge rstn)
          begin :drive_of_cnt
            if (rstn == 1'b0) begin
               // op:_of_counter/OP456
               of_cnt <= 16'd00000;
            end
            else begin
               // op:_of_counter/OP463
               of_cnt <= st_feature_addr_gen_N_Mux_16_2_25_4_47_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_MuxAdd2i1u16u16u1_1
         always @(of_cnt or st_feature_addr_gen_And_1Ux1U_1U_1_41_out1)
          begin :st_feature_addr_gen_MuxAdd2i1u16u16u1_1_46
            if (st_feature_addr_gen_And_1Ux1U_1U_1_41_out1) begin
               st_feature_addr_gen_MuxAdd2i1u16u16u1_1_46_out1 = of_cnt + 16'd00001;
            end
            else begin
               st_feature_addr_gen_MuxAdd2i1u16u16u1_1_46_out1 = of_cnt;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_N_Mux_16_2_25_4
         always @(st_feature_addr_gen_And_1Ux1U_1U_1_45_out1 or st_feature_addr_gen_MuxAdd2i1u16u16u1_1_46_out1)
          begin :st_feature_addr_gen_N_Mux_16_2_25_4_47
            if (st_feature_addr_gen_And_1Ux1U_1U_1_45_out1) begin
               st_feature_addr_gen_N_Mux_16_2_25_4_47_out1 = 16'd00000;
            end
            else begin
               st_feature_addr_gen_N_Mux_16_2_25_4_47_out1 = st_feature_addr_gen_MuxAdd2i1u16u16u1_1_46_out1;
            end
         end

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_gen_EqSubi1u16u16_1_44_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_st_feature_addr_gen_EqSubi1u16u16_1_44_in1
         // at: st_feature_addr_gen.h:230:75
         assign st_feature_addr_gen_EqSubi1u16u16_1_44_in1 = {5'b00000, of_cnt_max[15:5]};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_EqSubi1u16u16_1_44
         // Resource=st_feature_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:230:53
         assign st_feature_addr_gen_EqSubi1u16u16_1_44_out1 = {1'b0, of_cnt} == {1'b0, st_feature_addr_gen_EqSubi1u16u16_1_44_in1} - 17'd000001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_1_45
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:230:35
         assign st_feature_addr_gen_And_1Ux1U_1U_1_45_out1 = st_feature_addr_gen_EqSubi1u16u16_1_44_out1 & st_feature_addr_gen_And_1Ux1U_1U_1_41_out1;

         // rtl_process:st_feature_addr_gen/drive_oy_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_oy_cnt
         // at: st_feature_addr_gen.h:225:7
         // at: st_feature_addr_gen.h:220:7
         always @(posedge clk or negedge rstn)
          begin :drive_oy_cnt
            if (rstn == 1'b0) begin
               // op:_oy_counter/OP431
               oy_cnt <= 16'd00000;
            end
            else begin
               // op:_oy_counter/OP438
               oy_cnt <= st_feature_addr_gen_N_Mux_16_2_25_4_43_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_MuxAdd2i1u16u16u1_1
         always @(oy_cnt or st_feature_addr_gen_And_1Ux1U_1U_1_37_out1)
          begin :st_feature_addr_gen_MuxAdd2i1u16u16u1_1_42
            if (st_feature_addr_gen_And_1Ux1U_1U_1_37_out1) begin
               st_feature_addr_gen_MuxAdd2i1u16u16u1_1_42_out1 = oy_cnt + 16'd00001;
            end
            else begin
               st_feature_addr_gen_MuxAdd2i1u16u16u1_1_42_out1 = oy_cnt;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_N_Mux_16_2_25_4
         always @(st_feature_addr_gen_And_1Ux1U_1U_1_41_out1 or st_feature_addr_gen_MuxAdd2i1u16u16u1_1_42_out1)
          begin :st_feature_addr_gen_N_Mux_16_2_25_4_43
            if (st_feature_addr_gen_And_1Ux1U_1U_1_41_out1) begin
               st_feature_addr_gen_N_Mux_16_2_25_4_43_out1 = 16'd00000;
            end
            else begin
               st_feature_addr_gen_N_Mux_16_2_25_4_43_out1 = st_feature_addr_gen_MuxAdd2i1u16u16u1_1_42_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_EqSubi1u16u16_1_40
         // Resource=st_feature_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:215:53
         assign st_feature_addr_gen_EqSubi1u16u16_1_40_out1 = {1'b0, oy_cnt} == {1'b0, oy_cnt_max} - 17'd000001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_1_41
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:215:35
         assign st_feature_addr_gen_And_1Ux1U_1U_1_41_out1 = st_feature_addr_gen_EqSubi1u16u16_1_40_out1 & st_feature_addr_gen_And_1Ux1U_1U_1_37_out1;

         // rtl_process:st_feature_addr_gen/drive_ox_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_ox_cnt
         // at: st_feature_addr_gen.h:210:7
         // at: st_feature_addr_gen.h:205:7
         always @(posedge clk or negedge rstn)
          begin :drive_ox_cnt
            if (rstn == 1'b0) begin
               // op:_ox_counter/OP406
               ox_cnt <= 16'd00000;
            end
            else begin
               // op:_ox_counter/OP413
               ox_cnt <= st_feature_addr_gen_N_Mux_16_2_25_4_39_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_MuxAdd2i1u16u16u1_1
         always @(ox_cnt or st_feature_addr_gen_And_1Ux1U_1U_1_33_out1)
          begin :st_feature_addr_gen_MuxAdd2i1u16u16u1_1_38
            if (st_feature_addr_gen_And_1Ux1U_1U_1_33_out1) begin
               st_feature_addr_gen_MuxAdd2i1u16u16u1_1_38_out1 = ox_cnt + 16'd00001;
            end
            else begin
               st_feature_addr_gen_MuxAdd2i1u16u16u1_1_38_out1 = ox_cnt;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_N_Mux_16_2_25_4
         always @(st_feature_addr_gen_And_1Ux1U_1U_1_37_out1 or st_feature_addr_gen_MuxAdd2i1u16u16u1_1_38_out1)
          begin :st_feature_addr_gen_N_Mux_16_2_25_4_39
            if (st_feature_addr_gen_And_1Ux1U_1U_1_37_out1) begin
               st_feature_addr_gen_N_Mux_16_2_25_4_39_out1 = 16'd00000;
            end
            else begin
               st_feature_addr_gen_N_Mux_16_2_25_4_39_out1 = st_feature_addr_gen_MuxAdd2i1u16u16u1_1_38_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_EqSubi1u16u16_1_36
         // Resource=st_feature_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:200:53
         assign st_feature_addr_gen_EqSubi1u16u16_1_36_out1 = {1'b0, ox_cnt} == {1'b0, ox_cnt_max} - 17'd000001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_1_37
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:200:35
         assign st_feature_addr_gen_And_1Ux1U_1U_1_37_out1 = st_feature_addr_gen_EqSubi1u16u16_1_36_out1 & st_feature_addr_gen_And_1Ux1U_1U_1_33_out1;

         // rtl_process:st_feature_addr_gen/drive_if_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_if_cnt
         // at: st_feature_addr_gen.h:195:7
         // at: st_feature_addr_gen.h:190:7
         always @(posedge clk or negedge rstn)
          begin :drive_if_cnt
            if (rstn == 1'b0) begin
               // op:_if_counter/OP381
               if_cnt <= 16'd00000;
            end
            else begin
               // op:_if_counter/OP388
               if_cnt <= st_feature_addr_gen_N_Mux_16_2_25_4_35_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_MuxAdd2i1u16u16u1_4
         always @(if_cnt or st_feature_addr_gen_And_1Ux1U_1U_1_29_out1)
          begin :st_feature_addr_gen_MuxAdd2i1u16u16u1_4_34
            if (st_feature_addr_gen_And_1Ux1U_1U_1_29_out1) begin
               st_feature_addr_gen_MuxAdd2i1u16u16u1_4_34_out1 = if_cnt + 16'd00001;
            end
            else begin
               st_feature_addr_gen_MuxAdd2i1u16u16u1_4_34_out1 = if_cnt;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_N_Mux_16_2_25_4
         always @(st_feature_addr_gen_And_1Ux1U_1U_1_33_out1 or st_feature_addr_gen_MuxAdd2i1u16u16u1_4_34_out1)
          begin :st_feature_addr_gen_N_Mux_16_2_25_4_35
            if (st_feature_addr_gen_And_1Ux1U_1U_1_33_out1) begin
               st_feature_addr_gen_N_Mux_16_2_25_4_35_out1 = 16'd00000;
            end
            else begin
               st_feature_addr_gen_N_Mux_16_2_25_4_35_out1 = st_feature_addr_gen_MuxAdd2i1u16u16u1_4_34_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_EqSubi1u16u16_1_32
         // Resource=st_feature_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:185:53
         assign st_feature_addr_gen_EqSubi1u16u16_1_32_out1 = {1'b0, if_cnt} == {1'b0, if_cnt_max} - 17'd000001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_1_33
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:185:35
         assign st_feature_addr_gen_And_1Ux1U_1U_1_33_out1 = st_feature_addr_gen_EqSubi1u16u16_1_32_out1 & st_feature_addr_gen_And_1Ux1U_1U_1_29_out1;

         // rtl_process:st_feature_addr_gen/drive_iy_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_iy_cnt
         // at: st_feature_addr_gen.h:180:7
         // at: st_feature_addr_gen.h:175:7
         always @(posedge clk or negedge rstn)
          begin :drive_iy_cnt
            if (rstn == 1'b0) begin
               // op:_iy_counter/OP194
               iy_cnt <= 16'd00000;
            end
            else begin
               // op:_iy_counter/OP202
               iy_cnt <= st_feature_addr_gen_N_Mux_16_2_25_4_31_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_MuxAdd3i1u8u16u16u1_1
         always @(dilation_y or iy_cnt or st_feature_addr_gen_And_1Ux1U_1U_1_25_out1)
          begin :st_feature_addr_gen_MuxAdd3i1u8u16u16u1_1_30
            if (st_feature_addr_gen_And_1Ux1U_1U_1_25_out1) begin
               st_feature_addr_gen_MuxAdd3i1u8u16u16u1_1_30_out1 = iy_cnt + ({8'b00000000, dilation_y} + 16'd00001);
            end
            else begin
               st_feature_addr_gen_MuxAdd3i1u8u16u16u1_1_30_out1 = iy_cnt;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_N_Mux_16_2_25_4
         always @(st_feature_addr_gen_And_1Ux1U_1U_1_29_out1 or st_feature_addr_gen_MuxAdd3i1u8u16u16u1_1_30_out1)
          begin :st_feature_addr_gen_N_Mux_16_2_25_4_31
            if (st_feature_addr_gen_And_1Ux1U_1U_1_29_out1) begin
               st_feature_addr_gen_N_Mux_16_2_25_4_31_out1 = 16'd00000;
            end
            else begin
               st_feature_addr_gen_N_Mux_16_2_25_4_31_out1 = st_feature_addr_gen_MuxAdd3i1u8u16u16u1_1_30_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_EqSubi1u16u16_1_28
         // Resource=st_feature_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:170:53
         assign st_feature_addr_gen_EqSubi1u16u16_1_28_out1 = {1'b0, iy_cnt} == {1'b0, iy_cnt_max} - 17'd000001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_1_29
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:170:35
         assign st_feature_addr_gen_And_1Ux1U_1U_1_29_out1 = st_feature_addr_gen_EqSubi1u16u16_1_28_out1 & st_feature_addr_gen_And_1Ux1U_1U_1_25_out1;

         // rtl_process:st_feature_addr_gen/drive_ix_cnt
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_ix_cnt
         // at: st_feature_addr_gen.h:165:7
         // at: st_feature_addr_gen.h:160:7
         always @(posedge clk or negedge rstn)
          begin :drive_ix_cnt
            if (rstn == 1'b0) begin
               // op:_ix_counter/OP167
               ix_cnt <= 16'd00000;
            end
            else begin
               // op:_ix_counter/OP175
               ix_cnt <= st_feature_addr_gen_N_Mux_16_2_25_4_27_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_MuxAdd3i1u8u16u16u1_4
         always @(dilation_x or run or ix_cnt)
          begin :st_feature_addr_gen_MuxAdd3i1u8u16u16u1_4_26
            if (run) begin
               st_feature_addr_gen_MuxAdd3i1u8u16u16u1_4_26_out1 = ix_cnt + ({8'b00000000, dilation_x} + 16'd00001);
            end
            else begin
               st_feature_addr_gen_MuxAdd3i1u8u16u16u1_4_26_out1 = ix_cnt;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_N_Mux_16_2_25_4
         always @(st_feature_addr_gen_And_1Ux1U_1U_1_25_out1 or st_feature_addr_gen_MuxAdd3i1u8u16u16u1_4_26_out1)
          begin :st_feature_addr_gen_N_Mux_16_2_25_4_27
            if (st_feature_addr_gen_And_1Ux1U_1U_1_25_out1) begin
               st_feature_addr_gen_N_Mux_16_2_25_4_27_out1 = 16'd00000;
            end
            else begin
               st_feature_addr_gen_N_Mux_16_2_25_4_27_out1 = st_feature_addr_gen_MuxAdd3i1u8u16u16u1_4_26_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_EqSubi1u16u16_1_24
         // Resource=st_feature_addr_gen_EqSubi1u16u16_1, Function=sub eq : Inputs=16,16 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:155:51
         assign st_feature_addr_gen_EqSubi1u16u16_1_24_out1 = {1'b0, ix_cnt} == {1'b0, ix_cnt_max} - 17'd000001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_1_25
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:155:34
         assign st_feature_addr_gen_And_1Ux1U_1U_1_25_out1 = st_feature_addr_gen_EqSubi1u16u16_1_24_out1 & run;

         // rtl_process:st_feature_addr_gen/drive_of_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_of_cnt_max
         // at: st_feature_addr_gen.h:149:7
         // at: st_feature_addr_gen.h:230:57
         always @(posedge clk)
          begin :drive_of_cnt_max
            // op:_set_max_num/OP77
            of_cnt_max <= out_feature_channel;
         end

         // rtl_process:st_feature_addr_gen/drive_oy_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_oy_cnt_max
         // at: st_feature_addr_gen.h:148:7
         // at: st_feature_addr_gen.h:215:56
         always @(posedge clk)
          begin :drive_oy_cnt_max
            // op:_set_max_num/OP78
            oy_cnt_max <= out_feature_height;
         end

         // rtl_process:st_feature_addr_gen/drive_ox_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_ox_cnt_max
         // at: st_feature_addr_gen.h:147:7
         // at: st_feature_addr_gen.h:200:56
         always @(posedge clk)
          begin :drive_ox_cnt_max
            // op:_set_max_num/OP79
            ox_cnt_max <= out_feature_width;
         end

         // rtl_process:st_feature_addr_gen/drive_if_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_if_cnt_max
         // at: st_feature_addr_gen.h:146:7
         // at: st_feature_addr_gen.h:185:56
         always @(posedge clk)
          begin :drive_if_cnt_max
            // op:_set_max_num/OP80
            if_cnt_max <= filter_channel;
         end

         // rtl_process:st_feature_addr_gen/drive_iy_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_iy_cnt_max
         // at: st_feature_addr_gen.h:145:7
         // at: st_feature_addr_gen.h:170:56
         always @(posedge clk)
          begin :drive_iy_cnt_max
            // op:_set_max_num/OP83
            iy_cnt_max <= st_feature_addr_gen_Mul_16Ux9U_16U_1_10_out1;
         end

         // rtl_process:st_feature_addr_gen/drive_ix_cnt_max
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_ix_cnt_max
         // at: st_feature_addr_gen.h:144:7
         // at: st_feature_addr_gen.h:155:54
         always @(posedge clk)
          begin :drive_ix_cnt_max
            // op:_set_max_num/OP86
            ix_cnt_max <= st_feature_addr_gen_Mul_16Ux9U_16U_1_11_out1;
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Add2i1u8_4_8
         // Resource=st_feature_addr_gen_Add2i1u8_4, Function=add : Inputs=8 Outputs=9
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:145:62
         assign st_feature_addr_gen_Add2i1u8_4_8_out1 = {1'b0, dilation_y} + 9'd001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Add2i1u8_4_9
         // Resource=st_feature_addr_gen_Add2i1u8_4, Function=add : Inputs=8 Outputs=9
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:144:61
         assign st_feature_addr_gen_Add2i1u8_4_9_out1 = {1'b0, dilation_x} + 9'd001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Mul_16Ux9U_16U_1_10
         // Resource=st_feature_addr_gen_Mul_16Ux9U_16U_1, Function=mul : Inputs=16,9 Outputs=16
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:145:41
         assign st_feature_addr_gen_Mul_16Ux9U_16U_1_10_out1 = filter_height*{7'b0000000, st_feature_addr_gen_Add2i1u8_4_8_out1};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Mul_16Ux9U_16U_1_11
         // Resource=st_feature_addr_gen_Mul_16Ux9U_16U_1, Function=mul : Inputs=16,9 Outputs=16
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:144:40
         assign st_feature_addr_gen_Mul_16Ux9U_16U_1_11_out1 = filter_width*{7'b0000000, st_feature_addr_gen_Add2i1u8_4_9_out1};

         // rtl_process:st_feature_addr_gen/drive_run
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_run
         // at: st_feature_addr_gen.h:154:5
         // at: st_feature_addr_gen.h:164:14
         // at: st_feature_addr_gen.h:134:7
         // at: st_feature_addr_gen.h:138:7
         // at: st_feature_addr_gen.h:154:17
         // at: st_feature_addr_gen.h:365:16
         always @(posedge clk or negedge rstn)
          begin :drive_run
            if (rstn == 1'b0) begin
               // op:_run/OP93
               run <= 1'b0;
            end
            else begin
               // op:_run/OP98
               run <= st_feature_addr_gen_And_1Ux1U_1U_4_13_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Not_1U_1U_4_12
         // Resource=st_feature_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:135:10
         assign st_feature_addr_gen_Not_1U_1U_4_12_out1 = !stop;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_4_13
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:135:10
         assign st_feature_addr_gen_And_1Ux1U_1U_4_13_out1 = st_feature_addr_gen_Not_1U_1U_4_12_out1 & enable;

         // rtl_process:st_feature_addr_gen/drive_enable
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_enable
         // at: st_feature_addr_gen.h:138:13
         // at: st_feature_addr_gen.h:124:7
         // at: st_feature_addr_gen.h:129:7
         always @(posedge clk or negedge rstn)
          begin :drive_enable
            if (rstn == 1'b0) begin
               // op:_enable/OP482
               enable <= 1'b0;
            end
            else begin
               // op:_enable/OP496
               enable <= st_feature_addr_gen_Or_1Ux1U_1U_4_57_out1;
            end
         end

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Nei1u16_4_51
         // Resource=st_feature_addr_gen_Nei1u16_4, Function=ne : Inputs=16 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:126:92
         assign st_feature_addr_gen_Nei1u16_4_51_out1 = filter_width != 16'd00001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Nei1u16_4_52
         // Resource=st_feature_addr_gen_Nei1u16_4, Function=ne : Inputs=16 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:126:64
         assign st_feature_addr_gen_Nei1u16_4_52_out1 = filter_height != 16'd00001;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Not_1U_1U_4_53
         // Resource=st_feature_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:128:10
         assign st_feature_addr_gen_Not_1U_1U_4_53_out1 = !st_feature_addr_gen_AndReduction_2S_1U_1_50_out1;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_4_54
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:126:69
         assign st_feature_addr_gen_And_1Ux1U_1U_4_54_out1 = st_feature_addr_gen_Nei1u16_4_52_out1 & st_feature_addr_gen_Nei1u16_4_51_out1;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_4_55
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:128:10
         assign st_feature_addr_gen_And_1Ux1U_1U_4_55_out1 = st_feature_addr_gen_Not_1U_1U_4_53_out1 & enable;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_And_1Ux1U_1U_4_56
         // Resource=st_feature_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:126:39
         assign st_feature_addr_gen_And_1Ux1U_1U_4_56_out1 = st_feature_addr_gen_And_1Ux1U_1U_4_54_out1 & start_rising;

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_Or_1Ux1U_1U_4_57
         // Resource=st_feature_addr_gen_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:126:10
         assign st_feature_addr_gen_Or_1Ux1U_1U_4_57_out1 = st_feature_addr_gen_And_1Ux1U_1U_4_56_out1 | st_feature_addr_gen_And_1Ux1U_1U_4_55_out1;

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_gen_AndReduction_4S_1U_1_48_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_st_feature_addr_gen_AndReduction_4S_1U_1_48_in1
         // at: st_feature_addr_gen.h:119:106
         assign st_feature_addr_gen_AndReduction_4S_1U_1_48_in1 = {{st_feature_addr_gen_And_1Ux1U_1U_1_33_out1, st_feature_addr_gen_And_1Ux1U_1U_1_37_out1}, {st_feature_addr_gen_And_1Ux1U_1U_1_41_out1, st_feature_addr_gen_And_1Ux1U_1U_1_45_out1}};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_AndReduction_4S_1U_1_48
         // Resource=st_feature_addr_gen_AndReduction_4S_1U_1, Function=and : Inputs=4S Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:119:106
         assign st_feature_addr_gen_AndReduction_4S_1U_1_48_out1 = (&st_feature_addr_gen_AndReduction_4S_1U_1_48_in1);

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_gen_AndReduction_2S_1U_4_49_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_st_feature_addr_gen_AndReduction_2S_1U_4_49_in1
         // at: st_feature_addr_gen.h:119:106
         assign st_feature_addr_gen_AndReduction_2S_1U_4_49_in1 = {st_feature_addr_gen_And_1Ux1U_1U_1_25_out1, st_feature_addr_gen_And_1Ux1U_1U_1_29_out1};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_AndReduction_2S_1U_4_49
         // Resource=st_feature_addr_gen_AndReduction_2S_1U_4, Function=and : Inputs=2S Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:119:106
         assign st_feature_addr_gen_AndReduction_2S_1U_4_49_out1 = (&st_feature_addr_gen_AndReduction_2S_1U_4_49_in1);

         // rtl_process:st_feature_addr_gen/drive_st_feature_addr_gen_AndReduction_2S_1U_1_50_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_st_feature_addr_gen_AndReduction_2S_1U_1_50_in1
         // at: st_feature_addr_gen.h:119:106
         assign st_feature_addr_gen_AndReduction_2S_1U_1_50_in1 = {st_feature_addr_gen_AndReduction_2S_1U_4_49_out1, st_feature_addr_gen_AndReduction_4S_1U_1_48_out1};

         // rtl_instance:st_feature_addr_gen/st_feature_addr_gen_AndReduction_2S_1U_1_50
         // Resource=st_feature_addr_gen_AndReduction_2S_1U_1, Function=and : Inputs=2S Outputs=1
         // Implements 1 operation(s)
         // at: st_feature_addr_gen.h:119:106
         assign st_feature_addr_gen_AndReduction_2S_1U_1_50_out1 = (&st_feature_addr_gen_AndReduction_2S_1U_1_50_in1);


endmodule


