// Generated by stratus_hls 19.10-p100  (91500.011111)
// Wed Dec 16 18:22:49 2020
// from feature_write_addr_gen.cpp

`timescale 1ps / 1ps

      
module feature_write_addr_gen(clk, rstn, init, start, stop, base_addr, src, src_vld, read_address, read_address_valid, read_data, address_0, cs_0, we_0, oe_0, data_in, data_out);

      input clk;
      input rstn;
      input init;
      input [7:0] start;
      input [31:0] base_addr;
      input [319:0] src;
      input src_vld;
      input [31:0] read_address;
      input read_address_valid;
      input [319:0] data_in;
      output stop;
      output [319:0] read_data;
      output [31:0] address_0;
      output cs_0;
      output we_0;
      output oe_0;
      output [319:0] data_out;
      reg[31:0] feature_write_addr_gen_N_Mux_32_2_6_4_39_out1;
      wire feature_write_addr_gen_Not_1U_1U_4_37_out1;
      wire feature_write_addr_gen_Or_1Ux1U_1U_4_35_out1;
      wire feature_write_addr_gen_Not_1U_1U_4_34_out1;
      reg[2:0] fifo_cnt_1d;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_36_out1;
      reg[319:0] feature_write_addr_gen_N_MuxB_320_2_5_4_41_out1;
      reg[31:0] feature_write_addr_gen_N_Mux_32_2_2_4_44_out1;
      wire feature_write_addr_gen_Or_1Ux1U_1U_4_43_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_42_out1;
      reg[319:0] feature_write_addr_gen_N_MuxB_320_2_4_4_40_out1;
      wire[31:0] feature_write_addr_gen_Add_32Ux32U_32U_1_16_out1;
      reg[31:0] feature_write_addr_gen_N_Mux_32_2_2_4_46_out1;
      wire[31:0] feature_write_addr_gen_Add_32Ux1U_32U_4_45_out1;
      reg[31:0] feature_write_addr_gen_N_Mux_32_2_3_4_47_out1;
      reg[31:0] write_cnt;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_7_out1;
      wire feature_write_addr_gen_NotEQ_3Ux3U_1U_4_5_out1;
      wire feature_write_addr_gen_Equal_3Ux3U_1U_4_8_out1;
      wire feature_write_addr_gen_Equal_3Ux3U_1U_4_9_out1;
      wire feature_write_addr_gen_Equal_3Ux3U_1U_4_10_out1;
      wire feature_write_addr_gen_Equal_3Ux3U_1U_4_11_out1;
      wire feature_write_addr_gen_Equal_3Ux2U_1U_4_12_out1;
      wire feature_write_addr_gen_Equal_3Ux2U_1U_4_13_out1;
      wire feature_write_addr_gen_Equal_3Ux1U_1U_4_14_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_6_out1;
      wire feature_write_addr_gen_Not_1U_1U_4_15_out1;
      reg[319:0] fifo_mem_0;
      reg[319:0] fifo_mem_1;
      reg[319:0] fifo_mem_2;
      reg[319:0] fifo_mem_3;
      reg[319:0] fifo_mem_4;
      reg[319:0] fifo_mem_5;
      reg[319:0] fifo_mem_6;
      reg[319:0] fifo_mem_7;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_30_out1;
      reg[319:0] fifo_out;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_31_out1;
      reg[319:0] feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1;
      reg[2:0] feature_write_addr_gen_N_Mux_3_2_0_4_22_out1;
      wire[2:0] feature_write_addr_gen_Add_3Ux1U_3U_4_21_out1;
      /*signed*/wire[2:0] feature_write_addr_gen_Sub_3Ux1U_3S_4_20_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_19_out1;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_18_out1;
      reg[2:0] feature_write_addr_gen_N_Mux_3_2_0_4_23_out1;
      wire feature_write_addr_gen_Not_1U_1U_1_17_out1;
      wire feature_write_addr_gen_OrReduction_3U_1U_1_24_out1;
      wire[2:0] feature_write_addr_gen_Add_3Ux1U_3U_4_3_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_2_out1;
      wire feature_write_addr_gen_NotEQ_3Ux3U_1U_4_1_out1;
      reg[2:0] feature_write_addr_gen_N_Mux_3_2_0_4_4_out1;
      reg[2:0] wr_ptr;
      wire[2:0] feature_write_addr_gen_Add_3Ux1U_3U_4_28_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_1_25_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_27_out1;
      reg[2:0] fifo_cnt;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_26_out1;
      reg[2:0] feature_write_addr_gen_N_Mux_3_2_0_4_29_out1;
      reg[2:0] rd_ptr;

         // rtl_process:feature_write_addr_gen/drive_rd_ptr
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_rd_ptr
         // at: feature_write_addr_gen.h:229:7
         // at: feature_write_addr_gen.h:231:7
         // at: feature_write_addr_gen.h:167:27
         always @(posedge clk or negedge rstn)
          begin :drive_rd_ptr
            if (rstn == 1'b0) begin
               // op:_rd_ptr/OP122
               rd_ptr <= 3'd0;
            end
            else begin
               // op:_rd_ptr/OP131
               rd_ptr <= feature_write_addr_gen_N_Mux_3_2_0_4_29_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_26
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:230:32
         assign feature_write_addr_gen_OrReduction_3U_1U_4_26_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_27
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:230:32
         assign feature_write_addr_gen_And_1Ux1U_1U_4_27_out1 = feature_write_addr_gen_And_1Ux1U_1U_1_25_out1 & feature_write_addr_gen_OrReduction_3U_1U_4_26_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Add_3Ux1U_3U_4_28
         // Resource=feature_write_addr_gen_Add_3Ux1U_3U_4, Function=add : Inputs=3,1 Outputs=3
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:231:30
         assign feature_write_addr_gen_Add_3Ux1U_3U_4_28_out1 = rd_ptr + 3'd1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_3_2_0_4
         always @(rd_ptr or feature_write_addr_gen_And_1Ux1U_1U_4_27_out1 or feature_write_addr_gen_Add_3Ux1U_3U_4_28_out1)
          begin :feature_write_addr_gen_N_Mux_3_2_0_4_29
            if (feature_write_addr_gen_And_1Ux1U_1U_4_27_out1) begin
               feature_write_addr_gen_N_Mux_3_2_0_4_29_out1 = feature_write_addr_gen_Add_3Ux1U_3U_4_28_out1;
            end
            else begin
               feature_write_addr_gen_N_Mux_3_2_0_4_29_out1 = rd_ptr;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_wr_ptr
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_wr_ptr
         // at: feature_write_addr_gen.h:221:7
         // at: feature_write_addr_gen.h:223:7
         // at: feature_write_addr_gen.h:137:16
         always @(posedge clk or negedge rstn)
          begin :drive_wr_ptr
            if (rstn == 1'b0) begin
               // op:_wr_ptr/OP5
               wr_ptr <= 3'd0;
            end
            else begin
               // op:_wr_ptr/OP14
               wr_ptr <= feature_write_addr_gen_N_Mux_3_2_0_4_4_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_NotEQ_3Ux3U_1U_4_1
         // Resource=feature_write_addr_gen_NotEQ_3Ux3U_1U_4, Function=ne : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:222:51
         assign feature_write_addr_gen_NotEQ_3Ux3U_1U_4_1_out1 = fifo_cnt != 3'd7;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_2
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:222:32
         assign feature_write_addr_gen_And_1Ux1U_1U_4_2_out1 = feature_write_addr_gen_NotEQ_3Ux3U_1U_4_1_out1 & src_vld;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Add_3Ux1U_3U_4_3
         // Resource=feature_write_addr_gen_Add_3Ux1U_3U_4, Function=add : Inputs=3,1 Outputs=3
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:223:30
         assign feature_write_addr_gen_Add_3Ux1U_3U_4_3_out1 = wr_ptr + 3'd1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_3_2_0_4
         always @(wr_ptr or feature_write_addr_gen_And_1Ux1U_1U_4_2_out1 or feature_write_addr_gen_Add_3Ux1U_3U_4_3_out1)
          begin :feature_write_addr_gen_N_Mux_3_2_0_4_4
            if (feature_write_addr_gen_And_1Ux1U_1U_4_2_out1) begin
               feature_write_addr_gen_N_Mux_3_2_0_4_4_out1 = feature_write_addr_gen_Add_3Ux1U_3U_4_3_out1;
            end
            else begin
               feature_write_addr_gen_N_Mux_3_2_0_4_4_out1 = wr_ptr;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_1_24
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_1, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:212:41
         assign feature_write_addr_gen_OrReduction_3U_1U_1_24_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_1_25
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:212:41
         assign feature_write_addr_gen_And_1Ux1U_1U_1_25_out1 = feature_write_addr_gen_OrReduction_3U_1U_1_24_out1 & feature_write_addr_gen_Not_1U_1U_1_17_out1;

         // rtl_process:feature_write_addr_gen/drive_fifo_cnt
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_fifo_cnt
         // at: feature_write_addr_gen.h:199:7
         // at: feature_write_addr_gen.h:195:7
         // at: feature_write_addr_gen.h:212:44
         // at: feature_write_addr_gen.h:230:35
         // at: feature_write_addr_gen.h:166:30
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_cnt
            if (rstn == 1'b0) begin
               // op:_fifo_cnt/OP88
               fifo_cnt <= 3'd0;
            end
            else begin
               // op:_fifo_cnt/OP100
               fifo_cnt <= feature_write_addr_gen_N_Mux_3_2_0_4_23_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_18
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:198:46
         assign feature_write_addr_gen_OrReduction_3U_1U_4_18_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_19
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:198:46
         assign feature_write_addr_gen_And_1Ux1U_1U_4_19_out1 = feature_write_addr_gen_OrReduction_3U_1U_4_18_out1 & feature_write_addr_gen_Not_1U_1U_1_17_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Sub_3Ux1U_3S_4_20
         // Resource=feature_write_addr_gen_Sub_3Ux1U_3S_4, Function=sub : Inputs=3,1 Outputs=3S
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:199:34
         assign feature_write_addr_gen_Sub_3Ux1U_3S_4_20_out1 = fifo_cnt - 3'd1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Add_3Ux1U_3U_4_21
         // Resource=feature_write_addr_gen_Add_3Ux1U_3U_4, Function=add : Inputs=3,1 Outputs=3
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:197:34
         assign feature_write_addr_gen_Add_3Ux1U_3U_4_21_out1 = fifo_cnt + 3'd1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_3_2_0_4
         always @(fifo_cnt or feature_write_addr_gen_And_1Ux1U_1U_4_19_out1 or feature_write_addr_gen_Sub_3Ux1U_3S_4_20_out1)
          begin :feature_write_addr_gen_N_Mux_3_2_0_4_22
            if (feature_write_addr_gen_And_1Ux1U_1U_4_19_out1) begin
               feature_write_addr_gen_N_Mux_3_2_0_4_22_out1 = feature_write_addr_gen_Sub_3Ux1U_3S_4_20_out1;
            end
            else begin
               feature_write_addr_gen_N_Mux_3_2_0_4_22_out1 = fifo_cnt;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_3_2_0_4
         always @(src_vld or feature_write_addr_gen_Add_3Ux1U_3U_4_21_out1 or feature_write_addr_gen_N_Mux_3_2_0_4_22_out1)
          begin :feature_write_addr_gen_N_Mux_3_2_0_4_23
            if (src_vld) begin
               feature_write_addr_gen_N_Mux_3_2_0_4_23_out1 = feature_write_addr_gen_Add_3Ux1U_3U_4_21_out1;
            end
            else begin
               feature_write_addr_gen_N_Mux_3_2_0_4_23_out1 = feature_write_addr_gen_N_Mux_3_2_0_4_22_out1;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_out
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_out
         // at: feature_write_addr_gen.h:170:7
         // at: feature_write_addr_gen.h:167:16
         // at: feature_write_addr_gen.h:95:24
         always @(feature_write_addr_gen_And_1Ux1U_1U_4_31_out1 or feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1)
          begin :drive_fifo_out
            if (feature_write_addr_gen_And_1Ux1U_1U_4_31_out1) begin
               // op:_fifo_read/OP156
               fifo_out = feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1;
            end
            else begin
               // op:_fifo_read/OP145
               fifo_out = 320'd0;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_30
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:166:27
         assign feature_write_addr_gen_OrReduction_3U_1U_4_30_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_31
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:166:27
         assign feature_write_addr_gen_And_1Ux1U_1U_4_31_out1 = feature_write_addr_gen_And_1Ux1U_1U_1_25_out1 & feature_write_addr_gen_OrReduction_3U_1U_4_30_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_MuxB_320_8_1_1
         always @(rd_ptr or fifo_mem_0 or fifo_mem_1 or fifo_mem_2 or fifo_mem_3 or fifo_mem_4 or fifo_mem_5 or fifo_mem_6 or fifo_mem_7)
          begin :feature_write_addr_gen_N_MuxB_320_8_1_1_32
            case (rd_ptr) 

               3'd0:                begin
                  feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1 = fifo_mem_0;
               end
               
               3'd1:                begin
                  feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1 = fifo_mem_1;
               end
               
               3'd2:                begin
                  feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1 = fifo_mem_2;
               end
               
               3'd3:                begin
                  feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1 = fifo_mem_3;
               end
               
               3'd4:                begin
                  feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1 = fifo_mem_4;
               end
               
               3'd5:                begin
                  feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1 = fifo_mem_5;
               end
               
               3'd6:                begin
                  feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1 = fifo_mem_6;
               end
               
               default:                begin
                  feature_write_addr_gen_N_MuxB_320_8_1_1_32_out1 = fifo_mem_7;
               end
               
            endcase

         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_0
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_0
         // at: feature_write_addr_gen.h:133:15
         // at: feature_write_addr_gen.h:137:15
         // at: feature_write_addr_gen.h:167:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_0
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP24
               fifo_mem_0 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 & feature_write_addr_gen_Not_1U_1U_4_15_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP55
                     fifo_mem_0 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_1
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_1
         // at: feature_write_addr_gen.h:133:15
         // at: feature_write_addr_gen.h:137:15
         // at: feature_write_addr_gen.h:167:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_1
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP25
               fifo_mem_1 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 & feature_write_addr_gen_Equal_3Ux1U_1U_4_14_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP52
                     fifo_mem_1 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_2
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_2
         // at: feature_write_addr_gen.h:133:15
         // at: feature_write_addr_gen.h:137:15
         // at: feature_write_addr_gen.h:167:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_2
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP26
               fifo_mem_2 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 & feature_write_addr_gen_Equal_3Ux2U_1U_4_13_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP50
                     fifo_mem_2 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_3
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_3
         // at: feature_write_addr_gen.h:133:15
         // at: feature_write_addr_gen.h:137:15
         // at: feature_write_addr_gen.h:167:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_3
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP27
               fifo_mem_3 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 & feature_write_addr_gen_Equal_3Ux2U_1U_4_12_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP48
                     fifo_mem_3 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_4
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_4
         // at: feature_write_addr_gen.h:133:15
         // at: feature_write_addr_gen.h:137:15
         // at: feature_write_addr_gen.h:167:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_4
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP28
               fifo_mem_4 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 & feature_write_addr_gen_Equal_3Ux3U_1U_4_11_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP46
                     fifo_mem_4 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_5
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_5
         // at: feature_write_addr_gen.h:133:15
         // at: feature_write_addr_gen.h:137:15
         // at: feature_write_addr_gen.h:167:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_5
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP29
               fifo_mem_5 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 & feature_write_addr_gen_Equal_3Ux3U_1U_4_10_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP44
                     fifo_mem_5 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_6
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_6
         // at: feature_write_addr_gen.h:133:15
         // at: feature_write_addr_gen.h:137:15
         // at: feature_write_addr_gen.h:167:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_6
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP30
               fifo_mem_6 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 & feature_write_addr_gen_Equal_3Ux3U_1U_4_9_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP42
                     fifo_mem_6 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_7
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_7
         // at: feature_write_addr_gen.h:133:15
         // at: feature_write_addr_gen.h:137:15
         // at: feature_write_addr_gen.h:167:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_7
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP31
               fifo_mem_7 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 & feature_write_addr_gen_Equal_3Ux3U_1U_4_8_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP40
                     fifo_mem_7 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_NotEQ_3Ux3U_1U_4_5
         // Resource=feature_write_addr_gen_NotEQ_3Ux3U_1U_4, Function=ne : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:136:51
         assign feature_write_addr_gen_NotEQ_3Ux3U_1U_4_5_out1 = fifo_cnt != 3'd7;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_6
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:136:32
         assign feature_write_addr_gen_And_1Ux1U_1U_4_6_out1 = feature_write_addr_gen_NotEQ_3Ux3U_1U_4_5_out1 & src_vld;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_7
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_OrReduction_3U_1U_4_7_out1 = (|wr_ptr);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Equal_3Ux3U_1U_4_8
         // Resource=feature_write_addr_gen_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_Equal_3Ux3U_1U_4_8_out1 = wr_ptr == 3'd7;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Equal_3Ux3U_1U_4_9
         // Resource=feature_write_addr_gen_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_Equal_3Ux3U_1U_4_9_out1 = wr_ptr == 3'd6;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Equal_3Ux3U_1U_4_10
         // Resource=feature_write_addr_gen_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_Equal_3Ux3U_1U_4_10_out1 = wr_ptr == 3'd5;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Equal_3Ux3U_1U_4_11
         // Resource=feature_write_addr_gen_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_Equal_3Ux3U_1U_4_11_out1 = wr_ptr == 3'd4;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Equal_3Ux2U_1U_4_12
         // Resource=feature_write_addr_gen_Equal_3Ux2U_1U_4, Function=eq : Inputs=3,2 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_Equal_3Ux2U_1U_4_12_out1 = wr_ptr == 3'd3;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Equal_3Ux2U_1U_4_13
         // Resource=feature_write_addr_gen_Equal_3Ux2U_1U_4, Function=eq : Inputs=3,2 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_Equal_3Ux2U_1U_4_13_out1 = wr_ptr == 3'd2;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Equal_3Ux1U_1U_4_14
         // Resource=feature_write_addr_gen_Equal_3Ux1U_1U_4, Function=eq : Inputs=3,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_Equal_3Ux1U_1U_4_14_out1 = wr_ptr == 3'd1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Not_1U_1U_4_15
         // Resource=feature_write_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:137:15
         assign feature_write_addr_gen_Not_1U_1U_4_15_out1 = !feature_write_addr_gen_OrReduction_3U_1U_4_7_out1;

         // rtl_process:feature_write_addr_gen/drive_write_cnt
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_write_cnt
         // at: feature_write_addr_gen.h:115:21
         // at: feature_write_addr_gen.h:121:7
         // at: feature_write_addr_gen.h:125:7
         always @(posedge clk or negedge rstn)
          begin :drive_write_cnt
            if (rstn == 1'b0) begin
               // op:_up_count/OP213
               write_cnt <= 32'd0000000000;
            end
            else begin
               // op:_up_count/OP221
               write_cnt <= feature_write_addr_gen_N_Mux_32_2_3_4_47_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Add_32Ux1U_32U_4_45
         // Resource=feature_write_addr_gen_Add_32Ux1U_32U_4, Function=add : Inputs=32,1 Outputs=32
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:125:36
         assign feature_write_addr_gen_Add_32Ux1U_32U_4_45_out1 = write_cnt + 32'd0000000001;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_32_2_2_4
         always @(we_0 or write_cnt or feature_write_addr_gen_Add_32Ux1U_32U_4_45_out1)
          begin :feature_write_addr_gen_N_Mux_32_2_2_4_46
            if (we_0) begin
               feature_write_addr_gen_N_Mux_32_2_2_4_46_out1 = feature_write_addr_gen_Add_32Ux1U_32U_4_45_out1;
            end
            else begin
               feature_write_addr_gen_N_Mux_32_2_2_4_46_out1 = write_cnt;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_32_2_3_4
         always @(init or feature_write_addr_gen_N_Mux_32_2_2_4_46_out1)
          begin :feature_write_addr_gen_N_Mux_32_2_3_4_47
            if (init) begin
               feature_write_addr_gen_N_Mux_32_2_3_4_47_out1 = 32'd0000000000;
            end
            else begin
               feature_write_addr_gen_N_Mux_32_2_3_4_47_out1 = feature_write_addr_gen_N_Mux_32_2_2_4_46_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Add_32Ux32U_32U_1_16
         // Resource=feature_write_addr_gen_Add_32Ux32U_32U_1, Function=add : Inputs=32,32 Outputs=32
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:115:38
         assign feature_write_addr_gen_Add_32Ux32U_32U_1_16_out1 = write_cnt + base_addr;

         // rtl_process:feature_write_addr_gen/drive_stop
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_stop
         // at: feature_write_addr_gen.h:111:5
         assign stop = src_vld;

         // rtl_process:feature_write_addr_gen/drive_data_out
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_data_out
         // at: feature_write_addr_gen.h:104:9
         assign data_out = feature_write_addr_gen_N_MuxB_320_2_4_4_40_out1;

         // rtl_process:feature_write_addr_gen/drive_oe_0
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_oe_0
         // at: feature_write_addr_gen.h:102:9
         assign oe_0 = read_address_valid;

         // rtl_process:feature_write_addr_gen/drive_we_0
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_we_0
         // at: feature_write_addr_gen.h:101:9
         assign we_0 = feature_write_addr_gen_And_1Ux1U_1U_4_42_out1;

         // rtl_process:feature_write_addr_gen/drive_cs_0
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_cs_0
         // at: feature_write_addr_gen.h:100:9
         assign cs_0 = feature_write_addr_gen_Or_1Ux1U_1U_4_43_out1;

         // rtl_process:feature_write_addr_gen/drive_address_0
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_address_0
         // at: feature_write_addr_gen.h:99:9
         assign address_0 = feature_write_addr_gen_N_Mux_32_2_2_4_44_out1;

         // rtl_process:feature_write_addr_gen/drive_read_data
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_read_data
         // at: feature_write_addr_gen.h:103:9
         assign read_data = feature_write_addr_gen_N_MuxB_320_2_5_4_41_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_36
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 3 operation(s)
         // at: feature_write_addr_gen.h:83:11
         assign feature_write_addr_gen_OrReduction_3U_1U_4_36_out1 = (|fifo_cnt_1d);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Not_1U_1U_4_34
         // Resource=feature_write_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:83:11
         assign feature_write_addr_gen_Not_1U_1U_4_34_out1 = !feature_write_addr_gen_OrReduction_3U_1U_4_36_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Or_1Ux1U_1U_4_35
         // Resource=feature_write_addr_gen_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:70:9
         assign feature_write_addr_gen_Or_1Ux1U_1U_4_35_out1 = feature_write_addr_gen_Not_1U_1U_4_34_out1 | read_address_valid;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Not_1U_1U_4_37
         // Resource=feature_write_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:70:5
         assign feature_write_addr_gen_Not_1U_1U_4_37_out1 = !read_address_valid;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_32_2_6_4
         always @(feature_write_addr_gen_Add_32Ux32U_32U_1_16_out1 or feature_write_addr_gen_OrReduction_3U_1U_4_36_out1)
          begin :feature_write_addr_gen_N_Mux_32_2_6_4_39
            if (feature_write_addr_gen_OrReduction_3U_1U_4_36_out1) begin
               feature_write_addr_gen_N_Mux_32_2_6_4_39_out1 = feature_write_addr_gen_Add_32Ux32U_32U_1_16_out1;
            end
            else begin
               feature_write_addr_gen_N_Mux_32_2_6_4_39_out1 = 32'd0000000000;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_MuxB_320_2_4_4
         always @(fifo_out or feature_write_addr_gen_Or_1Ux1U_1U_4_35_out1)
          begin :feature_write_addr_gen_N_MuxB_320_2_4_4_40
            if (feature_write_addr_gen_Or_1Ux1U_1U_4_35_out1) begin
               feature_write_addr_gen_N_MuxB_320_2_4_4_40_out1 = 320'd0;
            end
            else begin
               feature_write_addr_gen_N_MuxB_320_2_4_4_40_out1 = fifo_out;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_MuxB_320_2_5_4
         always @(data_in or read_address_valid)
          begin :feature_write_addr_gen_N_MuxB_320_2_5_4_41
            if (read_address_valid) begin
               feature_write_addr_gen_N_MuxB_320_2_5_4_41_out1 = data_in;
            end
            else begin
               feature_write_addr_gen_N_MuxB_320_2_5_4_41_out1 = 320'd0;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_42
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:70:5
         assign feature_write_addr_gen_And_1Ux1U_1U_4_42_out1 = feature_write_addr_gen_Not_1U_1U_4_37_out1 & feature_write_addr_gen_OrReduction_3U_1U_4_36_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Or_1Ux1U_1U_4_43
         // Resource=feature_write_addr_gen_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:70:5
         assign feature_write_addr_gen_Or_1Ux1U_1U_4_43_out1 = feature_write_addr_gen_OrReduction_3U_1U_4_36_out1 | read_address_valid;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_32_2_2_4
         always @(read_address_valid or read_address or feature_write_addr_gen_N_Mux_32_2_6_4_39_out1)
          begin :feature_write_addr_gen_N_Mux_32_2_2_4_44
            if (read_address_valid) begin
               feature_write_addr_gen_N_Mux_32_2_2_4_44_out1 = read_address;
            end
            else begin
               feature_write_addr_gen_N_Mux_32_2_2_4_44_out1 = feature_write_addr_gen_N_Mux_32_2_6_4_39_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Not_1U_1U_1_17
         // Resource=feature_write_addr_gen_Not_1U_1U_1, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:66:27
         assign feature_write_addr_gen_Not_1U_1U_1_17_out1 = !read_address_valid;

         // rtl_process:feature_write_addr_gen/drive_fifo_cnt_1d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_cnt_1d
         // at: feature_write_addr_gen.h:54:7
         // at: feature_write_addr_gen.h:57:7
         // at: feature_write_addr_gen.h:83:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_cnt_1d
            if (rstn == 1'b0) begin
               // op:_fifo_cnt_1d/OP0
               fifo_cnt_1d <= 3'd0;
            end
            else begin
               // op:_fifo_cnt_1d/OP2
               fifo_cnt_1d <= fifo_cnt;
            end
         end


endmodule


