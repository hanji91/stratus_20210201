// Generated by stratus_hls 19.10-p100  (91500.011111)
// Thu Jan 28 17:22:32 2021
// from feature_write_addr_gen.cpp

`timescale 1ps / 1ps

      
module feature_write_addr_gen(clk, rstn, init, start, conv_type, stop, base_addr, src, src_vld, read_address, read_address_valid, data_in_en, read_data, address_0, cs_0, we_0, oe_0, data_in, data_out);

      input clk;
      input rstn;
      input init;
      input [7:0] start;
      input [7:0] conv_type;
      input [31:0] base_addr;
      input [319:0] src;
      input src_vld;
      input [31:0] read_address;
      input read_address_valid;
      input data_in_en;
      input [319:0] data_in;
      output stop;
      reg stop;
      output [319:0] read_data;
      reg [319:0] read_data;
      output [31:0] address_0;
      reg [31:0] address_0;
      output cs_0;
      reg cs_0;
      output we_0;
      reg we_0;
      output oe_0;
      reg oe_0;
      output [319:0] data_out;
      reg [319:0] data_out;
      reg[31:0] feature_write_addr_gen_Muxu32i0u1_4_51_out1;
      wire feature_write_addr_gen_Not_1U_1U_4_49_out1;
      wire feature_write_addr_gen_Or_1Ux1U_1U_4_47_out1;
      wire feature_write_addr_gen_Not_1U_1U_4_46_out1;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_48_out1;
      reg[31:0] feature_write_addr_gen_N_Mux_32_2_34_4_55_out1;
      wire feature_write_addr_gen_Or_1Ux1U_1U_4_54_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_53_out1;
      reg[319:0] feature_write_addr_gen_N_MuxB_320_2_24_4_52_out1;
      reg[319:0] feature_write_addr_gen_N_MuxB_320_2_25_4_6_out1;
      reg feature_write_addr_gen_N_Muxb_1_2_26_4_4_out1;
      wire feature_write_addr_gen_OrReduction_8U_1U_4_3_out1;
      wire feature_write_addr_gen_OrReduction_4U_1U_4_2_out1;
      reg src_vld_1d;
      reg src_vld_2d;
      reg src_vld_3d;
      wire[3:0] feature_write_addr_gen_OrReduction_4U_1U_4_2_in1;
      wire feature_write_addr_gen_Eqi2u8_4_1_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_5_out1;
      wire[31:0] feature_write_addr_gen_Add_32Ux32U_32U_1_21_out1;
      reg[31:0] feature_write_addr_gen_N_Mux_32_2_34_4_35_out1;
      wire[31:0] feature_write_addr_gen_Add2i1u32_1_34_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_33_out1;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_32_out1;
      reg[31:0] feature_write_addr_gen_Muxi0u32u1_4_36_out1;
      reg[31:0] write_cnt;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_12_out1;
      wire feature_write_addr_gen_Nei7u3_4_10_out1;
      wire feature_write_addr_gen_Eqi7u3_4_13_out1;
      wire feature_write_addr_gen_Eqi6u3_4_14_out1;
      wire feature_write_addr_gen_Eqi5u3_4_15_out1;
      wire feature_write_addr_gen_Eqi4u3_4_16_out1;
      wire feature_write_addr_gen_Eqi3u3_4_17_out1;
      wire feature_write_addr_gen_Eqi2u3_4_18_out1;
      wire feature_write_addr_gen_Eqi1u3_4_19_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_11_out1;
      wire feature_write_addr_gen_Not_1U_1U_4_20_out1;
      reg[319:0] fifo_mem_0;
      reg[319:0] fifo_mem_1;
      reg[319:0] fifo_mem_2;
      reg[319:0] fifo_mem_3;
      reg[319:0] fifo_mem_4;
      reg[319:0] fifo_mem_5;
      reg[319:0] fifo_mem_6;
      reg[319:0] fifo_mem_7;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_42_out1;
      reg[319:0] fifo_out;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_43_out1;
      reg[319:0] feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1;
      reg[2:0] feature_write_addr_gen_N_Mux_3_2_28_4_30_out1;
      reg[2:0] feature_write_addr_gen_MuxSubi1u3u3u1_4_29_out1;
      wire[2:0] feature_write_addr_gen_Add2i1u3_4_28_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_27_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_25_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_24_out1;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_23_out1;
      reg[2:0] feature_write_addr_gen_N_Mux_3_2_28_4_31_out1;
      wire feature_write_addr_gen_Not_1U_1U_1_22_out1;
      wire feature_write_addr_gen_OrReduction_3U_1U_1_37_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_8_out1;
      wire feature_write_addr_gen_Nei7u3_4_7_out1;
      reg[2:0] feature_write_addr_gen_MuxAdd2i1u3u3u1_4_9_out1;
      reg[2:0] wr_ptr;
      wire feature_write_addr_gen_And_1Ux1U_1U_1_38_out1;
      wire feature_write_addr_gen_And_1Ux1U_1U_4_40_out1;
      reg[2:0] fifo_cnt;
      wire feature_write_addr_gen_OrReduction_3U_1U_4_39_out1;
      reg[2:0] feature_write_addr_gen_MuxAdd2i1u3u3u1_4_41_out1;
      reg[2:0] rd_ptr;

         // rtl_process:feature_write_addr_gen/drive_rd_ptr
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_rd_ptr
         // at: feature_write_addr_gen.h:246:7
         // at: feature_write_addr_gen.h:248:7
         // at: feature_write_addr_gen.h:197:27
         always @(posedge clk or negedge rstn)
          begin :drive_rd_ptr
            if (rstn == 1'b0) begin
               // op:_rd_ptr/OP175
               rd_ptr <= 3'd0;
            end
            else begin
               // op:_rd_ptr/OP183
               rd_ptr <= feature_write_addr_gen_MuxAdd2i1u3u3u1_4_41_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_39
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:247:32
         assign feature_write_addr_gen_OrReduction_3U_1U_4_39_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_40
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:247:32
         assign feature_write_addr_gen_And_1Ux1U_1U_4_40_out1 = feature_write_addr_gen_And_1Ux1U_1U_1_38_out1 & feature_write_addr_gen_OrReduction_3U_1U_4_39_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_MuxAdd2i1u3u3u1_4
         always @(rd_ptr or feature_write_addr_gen_And_1Ux1U_1U_4_40_out1)
          begin :feature_write_addr_gen_MuxAdd2i1u3u3u1_4_41
            if (feature_write_addr_gen_And_1Ux1U_1U_4_40_out1) begin
               feature_write_addr_gen_MuxAdd2i1u3u3u1_4_41_out1 = rd_ptr + 3'd1;
            end
            else begin
               feature_write_addr_gen_MuxAdd2i1u3u3u1_4_41_out1 = rd_ptr;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_wr_ptr
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_wr_ptr
         // at: feature_write_addr_gen.h:238:7
         // at: feature_write_addr_gen.h:240:7
         // at: feature_write_addr_gen.h:187:16
         always @(posedge clk or negedge rstn)
          begin :drive_wr_ptr
            if (rstn == 1'b0) begin
               // op:_wr_ptr/OP41
               wr_ptr <= 3'd0;
            end
            else begin
               // op:_wr_ptr/OP49
               wr_ptr <= feature_write_addr_gen_MuxAdd2i1u3u3u1_4_9_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Nei7u3_4_7
         // Resource=feature_write_addr_gen_Nei7u3_4, Function=ne : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:239:51
         assign feature_write_addr_gen_Nei7u3_4_7_out1 = fifo_cnt != 3'd7;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_8
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:239:32
         assign feature_write_addr_gen_And_1Ux1U_1U_4_8_out1 = feature_write_addr_gen_Nei7u3_4_7_out1 & src_vld;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_MuxAdd2i1u3u3u1_4
         always @(wr_ptr or feature_write_addr_gen_And_1Ux1U_1U_4_8_out1)
          begin :feature_write_addr_gen_MuxAdd2i1u3u3u1_4_9
            if (feature_write_addr_gen_And_1Ux1U_1U_4_8_out1) begin
               feature_write_addr_gen_MuxAdd2i1u3u3u1_4_9_out1 = wr_ptr + 3'd1;
            end
            else begin
               feature_write_addr_gen_MuxAdd2i1u3u3u1_4_9_out1 = wr_ptr;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_1_37
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_1, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:228:41
         assign feature_write_addr_gen_OrReduction_3U_1U_1_37_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_1_38
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:228:41
         assign feature_write_addr_gen_And_1Ux1U_1U_1_38_out1 = feature_write_addr_gen_OrReduction_3U_1U_1_37_out1 & feature_write_addr_gen_Not_1U_1U_1_22_out1;

         // rtl_process:feature_write_addr_gen/drive_fifo_cnt
         // Sharing or Control mux
         // Sharing/Controlling 8 operation(s) on drive_fifo_cnt
         // at: feature_write_addr_gen.h:215:7
         // at: feature_write_addr_gen.h:208:7
         // at: feature_write_addr_gen.h:174:49
         // at: feature_write_addr_gen.h:228:44
         // at: feature_write_addr_gen.h:247:35
         // at: feature_write_addr_gen.h:195:30
         // at: feature_write_addr_gen.h:101:14
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_cnt
            if (rstn == 1'b0) begin
               // op:_fifo_cnt/OP110
               fifo_cnt <= 3'd0;
            end
            else begin
               // op:_fifo_cnt/OP127
               fifo_cnt <= feature_write_addr_gen_N_Mux_3_2_28_4_31_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_23
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 2 operation(s)
         // at: feature_write_addr_gen.h:209:69
         // at: feature_write_addr_gen.h:213:46
         assign feature_write_addr_gen_OrReduction_3U_1U_4_23_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_24
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:209:34
         assign feature_write_addr_gen_And_1Ux1U_1U_4_24_out1 = src_vld & feature_write_addr_gen_Not_1U_1U_1_22_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_25
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:209:69
         assign feature_write_addr_gen_And_1Ux1U_1U_4_25_out1 = feature_write_addr_gen_And_1Ux1U_1U_4_24_out1 & feature_write_addr_gen_OrReduction_3U_1U_4_23_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_27
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:213:46
         assign feature_write_addr_gen_And_1Ux1U_1U_4_27_out1 = feature_write_addr_gen_OrReduction_3U_1U_4_23_out1 & feature_write_addr_gen_Not_1U_1U_1_22_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Add2i1u3_4_28
         // Resource=feature_write_addr_gen_Add2i1u3_4, Function=add : Inputs=3 Outputs=3
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:212:34
         assign feature_write_addr_gen_Add2i1u3_4_28_out1 = fifo_cnt + 3'd1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_MuxSubi1u3u3u1_4
         always @(fifo_cnt or feature_write_addr_gen_And_1Ux1U_1U_4_27_out1)
          begin :feature_write_addr_gen_MuxSubi1u3u3u1_4_29
            if (feature_write_addr_gen_And_1Ux1U_1U_4_27_out1) begin
               feature_write_addr_gen_MuxSubi1u3u3u1_4_29_out1 = fifo_cnt - 3'd1;
            end
            else begin
               feature_write_addr_gen_MuxSubi1u3u3u1_4_29_out1 = fifo_cnt;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_3_2_28_4
         always @(src_vld or feature_write_addr_gen_Add2i1u3_4_28_out1 or feature_write_addr_gen_MuxSubi1u3u3u1_4_29_out1)
          begin :feature_write_addr_gen_N_Mux_3_2_28_4_30
            if (src_vld) begin
               feature_write_addr_gen_N_Mux_3_2_28_4_30_out1 = feature_write_addr_gen_Add2i1u3_4_28_out1;
            end
            else begin
               feature_write_addr_gen_N_Mux_3_2_28_4_30_out1 = feature_write_addr_gen_MuxSubi1u3u3u1_4_29_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_3_2_28_4
         always @(fifo_cnt or feature_write_addr_gen_And_1Ux1U_1U_4_25_out1 or feature_write_addr_gen_N_Mux_3_2_28_4_30_out1)
          begin :feature_write_addr_gen_N_Mux_3_2_28_4_31
            if (feature_write_addr_gen_And_1Ux1U_1U_4_25_out1) begin
               feature_write_addr_gen_N_Mux_3_2_28_4_31_out1 = fifo_cnt;
            end
            else begin
               feature_write_addr_gen_N_Mux_3_2_28_4_31_out1 = feature_write_addr_gen_N_Mux_3_2_28_4_30_out1;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_out
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_out
         // at: feature_write_addr_gen.h:202:7
         // at: feature_write_addr_gen.h:197:16
         // at: feature_write_addr_gen.h:106:24
         always @(feature_write_addr_gen_And_1Ux1U_1U_4_43_out1 or feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1)
          begin :drive_fifo_out
            if (feature_write_addr_gen_And_1Ux1U_1U_4_43_out1) begin
               // op:_fifo_read/OP206
               fifo_out = feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1;
            end
            else begin
               // op:_fifo_read/OP195
               fifo_out = 320'd0;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_42
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:195:27
         assign feature_write_addr_gen_OrReduction_3U_1U_4_42_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_43
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:195:27
         assign feature_write_addr_gen_And_1Ux1U_1U_4_43_out1 = feature_write_addr_gen_And_1Ux1U_1U_1_38_out1 & feature_write_addr_gen_OrReduction_3U_1U_4_42_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_MuxB_320_8_35_1
         always @(rd_ptr or fifo_mem_0 or fifo_mem_1 or fifo_mem_2 or fifo_mem_3 or fifo_mem_4 or fifo_mem_5 or fifo_mem_6 or fifo_mem_7)
          begin :feature_write_addr_gen_N_MuxB_320_8_35_1_44
            case (rd_ptr) 

               3'd0:                begin
                  feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1 = fifo_mem_0;
               end
               
               3'd1:                begin
                  feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1 = fifo_mem_1;
               end
               
               3'd2:                begin
                  feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1 = fifo_mem_2;
               end
               
               3'd3:                begin
                  feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1 = fifo_mem_3;
               end
               
               3'd4:                begin
                  feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1 = fifo_mem_4;
               end
               
               3'd5:                begin
                  feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1 = fifo_mem_5;
               end
               
               3'd6:                begin
                  feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1 = fifo_mem_6;
               end
               
               default:                begin
                  feature_write_addr_gen_N_MuxB_320_8_35_1_44_out1 = fifo_mem_7;
               end
               
            endcase

         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_0
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_0
         // at: feature_write_addr_gen.h:183:15
         // at: feature_write_addr_gen.h:187:15
         // at: feature_write_addr_gen.h:197:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_0
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP56
               fifo_mem_0 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 & feature_write_addr_gen_Not_1U_1U_4_20_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP87
                     fifo_mem_0 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_1
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_1
         // at: feature_write_addr_gen.h:183:15
         // at: feature_write_addr_gen.h:187:15
         // at: feature_write_addr_gen.h:197:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_1
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP57
               fifo_mem_1 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 & feature_write_addr_gen_Eqi1u3_4_19_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP84
                     fifo_mem_1 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_2
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_2
         // at: feature_write_addr_gen.h:183:15
         // at: feature_write_addr_gen.h:187:15
         // at: feature_write_addr_gen.h:197:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_2
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP58
               fifo_mem_2 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 & feature_write_addr_gen_Eqi2u3_4_18_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP82
                     fifo_mem_2 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_3
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_3
         // at: feature_write_addr_gen.h:183:15
         // at: feature_write_addr_gen.h:187:15
         // at: feature_write_addr_gen.h:197:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_3
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP59
               fifo_mem_3 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 & feature_write_addr_gen_Eqi3u3_4_17_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP80
                     fifo_mem_3 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_4
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_4
         // at: feature_write_addr_gen.h:183:15
         // at: feature_write_addr_gen.h:187:15
         // at: feature_write_addr_gen.h:197:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_4
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP60
               fifo_mem_4 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 & feature_write_addr_gen_Eqi4u3_4_16_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP78
                     fifo_mem_4 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_5
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_5
         // at: feature_write_addr_gen.h:183:15
         // at: feature_write_addr_gen.h:187:15
         // at: feature_write_addr_gen.h:197:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_5
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP61
               fifo_mem_5 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 & feature_write_addr_gen_Eqi5u3_4_15_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP76
                     fifo_mem_5 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_6
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_6
         // at: feature_write_addr_gen.h:183:15
         // at: feature_write_addr_gen.h:187:15
         // at: feature_write_addr_gen.h:197:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_6
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP62
               fifo_mem_6 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 & feature_write_addr_gen_Eqi6u3_4_14_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP74
                     fifo_mem_6 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:feature_write_addr_gen/drive_fifo_mem_7
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_mem_7
         // at: feature_write_addr_gen.h:183:15
         // at: feature_write_addr_gen.h:187:15
         // at: feature_write_addr_gen.h:197:26
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_mem_7
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP63
               fifo_mem_7 <= 320'd0;
            end
            else begin
               case (feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 & feature_write_addr_gen_Eqi7u3_4_13_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP72
                     fifo_mem_7 <= src;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Nei7u3_4_10
         // Resource=feature_write_addr_gen_Nei7u3_4, Function=ne : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:186:51
         assign feature_write_addr_gen_Nei7u3_4_10_out1 = fifo_cnt != 3'd7;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_11
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:186:32
         assign feature_write_addr_gen_And_1Ux1U_1U_4_11_out1 = feature_write_addr_gen_Nei7u3_4_10_out1 & src_vld;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_12
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_OrReduction_3U_1U_4_12_out1 = (|wr_ptr);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Eqi7u3_4_13
         // Resource=feature_write_addr_gen_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_Eqi7u3_4_13_out1 = wr_ptr == 3'd7;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Eqi6u3_4_14
         // Resource=feature_write_addr_gen_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_Eqi6u3_4_14_out1 = wr_ptr == 3'd6;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Eqi5u3_4_15
         // Resource=feature_write_addr_gen_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_Eqi5u3_4_15_out1 = wr_ptr == 3'd5;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Eqi4u3_4_16
         // Resource=feature_write_addr_gen_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_Eqi4u3_4_16_out1 = wr_ptr == 3'd4;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Eqi3u3_4_17
         // Resource=feature_write_addr_gen_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_Eqi3u3_4_17_out1 = wr_ptr == 3'd3;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Eqi2u3_4_18
         // Resource=feature_write_addr_gen_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_Eqi2u3_4_18_out1 = wr_ptr == 3'd2;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Eqi1u3_4_19
         // Resource=feature_write_addr_gen_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_Eqi1u3_4_19_out1 = wr_ptr == 3'd1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Not_1U_1U_4_20
         // Resource=feature_write_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:187:15
         assign feature_write_addr_gen_Not_1U_1U_4_20_out1 = !feature_write_addr_gen_OrReduction_3U_1U_4_12_out1;

         // rtl_process:feature_write_addr_gen/drive_write_cnt
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_write_cnt
         // at: feature_write_addr_gen.h:164:23
         // at: feature_write_addr_gen.h:170:7
         // at: feature_write_addr_gen.h:175:7
         always @(posedge clk or negedge rstn)
          begin :drive_write_cnt
            if (rstn == 1'b0) begin
               // op:_up_count/OP146
               write_cnt <= 32'd0000000000;
            end
            else begin
               // op:_up_count/OP157
               write_cnt <= feature_write_addr_gen_Muxi0u32u1_4_36_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_32
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:174:46
         assign feature_write_addr_gen_OrReduction_3U_1U_4_32_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_33
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:174:46
         assign feature_write_addr_gen_And_1Ux1U_1U_4_33_out1 = feature_write_addr_gen_Not_1U_1U_1_22_out1 & feature_write_addr_gen_OrReduction_3U_1U_4_32_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Add2i1u32_1_34
         // Resource=feature_write_addr_gen_Add2i1u32_1, Function=add : Inputs=32 Outputs=32
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:175:36
         assign feature_write_addr_gen_Add2i1u32_1_34_out1 = write_cnt + 32'd0000000001;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_32_2_34_4
         always @(write_cnt or feature_write_addr_gen_And_1Ux1U_1U_4_33_out1 or feature_write_addr_gen_Add2i1u32_1_34_out1)
          begin :feature_write_addr_gen_N_Mux_32_2_34_4_35
            if (feature_write_addr_gen_And_1Ux1U_1U_4_33_out1) begin
               feature_write_addr_gen_N_Mux_32_2_34_4_35_out1 = feature_write_addr_gen_Add2i1u32_1_34_out1;
            end
            else begin
               feature_write_addr_gen_N_Mux_32_2_34_4_35_out1 = write_cnt;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Muxi0u32u1_4
         always @(init or feature_write_addr_gen_N_Mux_32_2_34_4_35_out1)
          begin :feature_write_addr_gen_Muxi0u32u1_4_36
            if (init) begin
               feature_write_addr_gen_Muxi0u32u1_4_36_out1 = 32'd0000000000;
            end
            else begin
               feature_write_addr_gen_Muxi0u32u1_4_36_out1 = feature_write_addr_gen_N_Mux_32_2_34_4_35_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Add_32Ux32U_32U_1_21
         // Resource=feature_write_addr_gen_Add_32Ux32U_32U_1, Function=add : Inputs=32,32 Outputs=32
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:164:40
         assign feature_write_addr_gen_Add_32Ux32U_32U_1_21_out1 = write_cnt + base_addr;

         // rtl_process:feature_write_addr_gen/drive_stop
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_stop
         // at: feature_write_addr_gen.h:150:7
         // at: feature_write_addr_gen.h:157:7
         always @(posedge clk or negedge rstn)
          begin :drive_stop
            if (rstn == 1'b0) begin
               // op:_stop/OP0
               stop <= 1'd0;
            end
            else begin
               // op:_stop/OP12
               stop <= feature_write_addr_gen_And_1Ux1U_1U_4_5_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Eqi2u8_4_1
         // Resource=feature_write_addr_gen_Eqi2u8_4, Function=eq : Inputs=8 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:154:10
         assign feature_write_addr_gen_Eqi2u8_4_1_out1 = conv_type == 8'd002;

         // rtl_process:feature_write_addr_gen/drive_feature_write_addr_gen_OrReduction_4U_1U_4_2_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_feature_write_addr_gen_OrReduction_4U_1U_4_2_in1
         // at: feature_write_addr_gen.h:155:55
         assign feature_write_addr_gen_OrReduction_4U_1U_4_2_in1 = {{src_vld, src_vld_1d}, {src_vld_2d, src_vld_3d}};

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_4U_1U_4_2
         // Resource=feature_write_addr_gen_OrReduction_4U_1U_4, Function=or : Inputs=4 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:155:55
         assign feature_write_addr_gen_OrReduction_4U_1U_4_2_out1 = (|feature_write_addr_gen_OrReduction_4U_1U_4_2_in1);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_8U_1U_4_3
         // Resource=feature_write_addr_gen_OrReduction_8U_1U_4, Function=or : Inputs=8 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:151:10
         assign feature_write_addr_gen_OrReduction_8U_1U_4_3_out1 = (|start);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Muxb_1_2_26_4
         always @(src_vld or feature_write_addr_gen_Eqi2u8_4_1_out1 or feature_write_addr_gen_OrReduction_4U_1U_4_2_out1)
          begin :feature_write_addr_gen_N_Muxb_1_2_26_4_4
            if (feature_write_addr_gen_Eqi2u8_4_1_out1) begin
               feature_write_addr_gen_N_Muxb_1_2_26_4_4_out1 = feature_write_addr_gen_OrReduction_4U_1U_4_2_out1;
            end
            else begin
               feature_write_addr_gen_N_Muxb_1_2_26_4_4_out1 = src_vld;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_5
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:151:10
         assign feature_write_addr_gen_And_1Ux1U_1U_4_5_out1 = feature_write_addr_gen_N_Muxb_1_2_26_4_4_out1 & feature_write_addr_gen_OrReduction_8U_1U_4_3_out1;

         // rtl_process:feature_write_addr_gen/drive_read_data
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_read_data
         // at: feature_write_addr_gen.h:120:9
         // at: feature_write_addr_gen.h:126:9
         always @(posedge clk or negedge rstn)
          begin :drive_read_data
            if (rstn == 1'b0) begin
               // op:_read_data/OP21
               read_data <= 320'd0;
            end
            else begin
               // op:_read_data/OP25
               read_data <= feature_write_addr_gen_N_MuxB_320_2_25_4_6_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_MuxB_320_2_25_4
         always @(data_in or data_in_en)
          begin :feature_write_addr_gen_N_MuxB_320_2_25_4_6
            if (data_in_en) begin
               feature_write_addr_gen_N_MuxB_320_2_25_4_6_out1 = data_in;
            end
            else begin
               feature_write_addr_gen_N_MuxB_320_2_25_4_6_out1 = 320'd0;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_data_out
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_data_out
         // at: feature_write_addr_gen.h:92:9
         // at: feature_write_addr_gen.h:113:9
         always @(posedge clk or negedge rstn)
          begin :drive_data_out
            if (rstn == 1'b0) begin
               // op:_assign/OP223
               data_out <= 320'd0;
            end
            else begin
               // op:_assign/OP233
               data_out <= feature_write_addr_gen_N_MuxB_320_2_24_4_52_out1;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_oe_0
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_oe_0
         // at: feature_write_addr_gen.h:91:9
         // at: feature_write_addr_gen.h:112:9
         always @(posedge clk or negedge rstn)
          begin :drive_oe_0
            if (rstn == 1'b0) begin
               // op:_assign/OP222
               oe_0 <= 1'd0;
            end
            else begin
               // op:_assign/OP234
               oe_0 <= read_address_valid;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_we_0
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_we_0
         // at: feature_write_addr_gen.h:90:9
         // at: feature_write_addr_gen.h:111:9
         always @(posedge clk or negedge rstn)
          begin :drive_we_0
            if (rstn == 1'b0) begin
               // op:_assign/OP221
               we_0 <= 1'd0;
            end
            else begin
               // op:_assign/OP238
               we_0 <= feature_write_addr_gen_And_1Ux1U_1U_4_53_out1;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_cs_0
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_cs_0
         // at: feature_write_addr_gen.h:89:9
         // at: feature_write_addr_gen.h:110:9
         always @(posedge clk or negedge rstn)
          begin :drive_cs_0
            if (rstn == 1'b0) begin
               // op:_assign/OP220
               cs_0 <= 1'd0;
            end
            else begin
               // op:_assign/OP241
               cs_0 <= feature_write_addr_gen_Or_1Ux1U_1U_4_54_out1;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_address_0
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_address_0
         // at: feature_write_addr_gen.h:88:9
         // at: feature_write_addr_gen.h:109:9
         always @(posedge clk or negedge rstn)
          begin :drive_address_0
            if (rstn == 1'b0) begin
               // op:_assign/OP219
               address_0 <= 32'd0000000000;
            end
            else begin
               // op:_assign/OP244
               address_0 <= feature_write_addr_gen_N_Mux_32_2_34_4_55_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_OrReduction_3U_1U_4_48
         // Resource=feature_write_addr_gen_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 3 operation(s)
         // at: feature_write_addr_gen.h:101:14
         assign feature_write_addr_gen_OrReduction_3U_1U_4_48_out1 = (|fifo_cnt);

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Not_1U_1U_4_46
         // Resource=feature_write_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:101:14
         assign feature_write_addr_gen_Not_1U_1U_4_46_out1 = !feature_write_addr_gen_OrReduction_3U_1U_4_48_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Or_1Ux1U_1U_4_47
         // Resource=feature_write_addr_gen_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:94:14
         assign feature_write_addr_gen_Or_1Ux1U_1U_4_47_out1 = feature_write_addr_gen_Not_1U_1U_4_46_out1 | read_address_valid;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Not_1U_1U_4_49
         // Resource=feature_write_addr_gen_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:94:10
         assign feature_write_addr_gen_Not_1U_1U_4_49_out1 = !read_address_valid;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Muxu32i0u1_4
         always @(feature_write_addr_gen_Add_32Ux32U_32U_1_21_out1 or feature_write_addr_gen_OrReduction_3U_1U_4_48_out1)
          begin :feature_write_addr_gen_Muxu32i0u1_4_51
            if (feature_write_addr_gen_OrReduction_3U_1U_4_48_out1) begin
               feature_write_addr_gen_Muxu32i0u1_4_51_out1 = feature_write_addr_gen_Add_32Ux32U_32U_1_21_out1;
            end
            else begin
               feature_write_addr_gen_Muxu32i0u1_4_51_out1 = 32'd0000000000;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_MuxB_320_2_24_4
         always @(fifo_out or feature_write_addr_gen_Or_1Ux1U_1U_4_47_out1)
          begin :feature_write_addr_gen_N_MuxB_320_2_24_4_52
            if (feature_write_addr_gen_Or_1Ux1U_1U_4_47_out1) begin
               feature_write_addr_gen_N_MuxB_320_2_24_4_52_out1 = 320'd0;
            end
            else begin
               feature_write_addr_gen_N_MuxB_320_2_24_4_52_out1 = fifo_out;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_And_1Ux1U_1U_4_53
         // Resource=feature_write_addr_gen_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:94:10
         assign feature_write_addr_gen_And_1Ux1U_1U_4_53_out1 = feature_write_addr_gen_Not_1U_1U_4_49_out1 & feature_write_addr_gen_OrReduction_3U_1U_4_48_out1;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Or_1Ux1U_1U_4_54
         // Resource=feature_write_addr_gen_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:94:10
         assign feature_write_addr_gen_Or_1Ux1U_1U_4_54_out1 = feature_write_addr_gen_OrReduction_3U_1U_4_48_out1 | read_address_valid;

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_N_Mux_32_2_34_4
         always @(read_address_valid or read_address or feature_write_addr_gen_Muxu32i0u1_4_51_out1)
          begin :feature_write_addr_gen_N_Mux_32_2_34_4_55
            if (read_address_valid) begin
               feature_write_addr_gen_N_Mux_32_2_34_4_55_out1 = read_address;
            end
            else begin
               feature_write_addr_gen_N_Mux_32_2_34_4_55_out1 = feature_write_addr_gen_Muxu32i0u1_4_51_out1;
            end
         end

         // rtl_instance:feature_write_addr_gen/feature_write_addr_gen_Not_1U_1U_1_22
         // Resource=feature_write_addr_gen_Not_1U_1U_1, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: feature_write_addr_gen.h:83:27
         assign feature_write_addr_gen_Not_1U_1U_1_22_out1 = !read_address_valid;

         // rtl_process:feature_write_addr_gen/drive_src_vld_3d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_src_vld_3d
         // at: feature_write_addr_gen.h:155:57
         // at: feature_write_addr_gen.h:57:7
         // at: feature_write_addr_gen.h:62:7
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP30
               src_vld_3d <= 1'd0;
            end
            else begin
               // op:_delay/OP36
               src_vld_3d <= src_vld_2d;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_src_vld_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_src_vld_2d
         // at: feature_write_addr_gen.h:155:44
         // at: feature_write_addr_gen.h:56:7
         // at: feature_write_addr_gen.h:61:7
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP29
               src_vld_2d <= 1'd0;
            end
            else begin
               // op:_delay/OP37
               src_vld_2d <= src_vld_1d;
            end
         end

         // rtl_process:feature_write_addr_gen/drive_src_vld_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_src_vld_1d
         // at: feature_write_addr_gen.h:155:31
         // at: feature_write_addr_gen.h:55:7
         // at: feature_write_addr_gen.h:60:7
         always @(posedge clk or negedge rstn)
          begin :drive_src_vld_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP28
               src_vld_1d <= 1'd0;
            end
            else begin
               // op:_delay/OP38
               src_vld_1d <= src_vld;
            end
         end


endmodule


