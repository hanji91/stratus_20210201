// Generated by stratus_hls 19.10-p100  (91500.011111)
// Mon Jan 25 11:55:49 2021
// from pw_weight_addr_gen.cpp
#ifndef CYNTH_PART_pw_weight_addr_gen_pw_weight_addr_gen_rtl_h
#define CYNTH_PART_pw_weight_addr_gen_pw_weight_addr_gen_rtl_h

#include "systemc.h"
/* Include declarations of instantiated parts. */


/* Declaration of the synthesized module. */
struct pw_weight_addr_gen : public sc_module {
  sc_in<bool > clk;
  sc_in<bool > rstn;
  sc_in<bool > stop;
  sc_in<sc_uint<8> > start;
  sc_in<sc_uint<1> > start_rising;
  sc_in<sc_uint<8> > systolic_en;
  sc_in<sc_uint<8> > systolic_depth;
  sc_in<sc_uint<16> > feature_width;
  sc_in<sc_uint<16> > feature_height;
  sc_in<sc_uint<16> > feature_channel;
  sc_in<sc_uint<16> > out_feature_width;
  sc_in<sc_uint<16> > out_feature_height;
  sc_in<sc_uint<16> > out_feature_channel;
  sc_in<sc_uint<16> > filter_width;
  sc_in<sc_uint<16> > filter_height;
  sc_in<sc_uint<16> > filter_channel;
  sc_in<sc_uint<8> > stride_x;
  sc_in<sc_uint<8> > stride_y;
  sc_in<sc_uint<8> > pad_top_size;
  sc_in<sc_uint<8> > pad_bottom_size;
  sc_in<sc_uint<8> > pad_left_size;
  sc_in<sc_uint<8> > pad_right_size;
  sc_in<sc_uint<32> > read_weight_base_addr;
  sc_out<sc_uint<32> > pw_weight_addr;
  sc_out<bool > pw_weight_addr_valid;
  sc_out<bool > pw_weight_data_valid;
  sc_out<bool > cache_en;
  pw_weight_addr_gen( sc_module_name name );
  SC_HAS_PROCESS(pw_weight_addr_gen);
  sc_signal<sc_int<4> > pw_weight_addr_gen_AndReduction_4S_1U_1_29_in1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_And_1Ux1U_1U_4_35_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_And_1Ux1U_1U_4_34_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_Eqi1u16_4_33_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_And_1Ux1U_1U_4_32_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_Not_1U_1U_4_31_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_AndReduction_4S_1U_1_29_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_Eqi1u16_4_30_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_Or_1Ux1U_1U_4_36_out1;
  sc_signal<sc_uint<1> > enable;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_Not_1U_1U_4_10_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_And_1Ux1U_1U_4_11_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_EqSubi1u16u16_1_12_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_MuxAdd2i1u16u16u1_4_14_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_Muxi0u16u1_4_15_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_EqSubu8u16u16_1_16_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_N_Mux_16_2_22_4_19_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_And_1Ux1U_1U_1_13_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_Add_16Ux8U_16U_4_18_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_Muxi0u16u1_4_20_out1;
  sc_signal<sc_uint<16> > ox_cnt;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_EqSubi1u16u16_1_21_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_MuxAdd2i1u16u16u1_1_23_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_And_1Ux1U_1U_1_17_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_Muxi0u16u1_4_24_out1;
  sc_signal<sc_uint<16> > oy_cnt;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_EqSubi1u16u16_1_25_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_EqSubi1u16u16_1_25_in1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_And_1Ux1U_1U_1_26_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_MuxAdd2i1u16u16u1_1_27_out1;
  sc_signal<sc_uint<1> > pw_weight_addr_gen_And_1Ux1U_1U_1_22_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_Muxi0u16u1_4_28_out1;
  sc_signal<sc_uint<16> > if_cnt;
  sc_signal<sc_uint<16> > of_cnt;
  sc_signal<sc_uint<16> > if_pos;
  sc_signal<sc_uint<16> > of_pos;
  sc_signal<sc_uint<32> > pw_weight_addr_gen_Add_32Ux16U_32U_4_9_out1;
  sc_signal<sc_uint<32> > pw_weight_addr_gen_Mul_16Ux16U_32U_1_8_out1;
  sc_signal<sc_uint<32> > org_of_pos;
  sc_signal<sc_uint<32> > org_if_pos;
  sc_signal<sc_uint<32> > pw_weight_addr_gen_Add_32Ux32U_32U_4_7_out1;
  sc_signal<sc_uint<32> > tmp_pw_weight_addr;
  sc_signal<bool > pw_weight_addr_valid_4d;
  sc_signal<bool > pw_weight_addr_valid_3d;
  sc_signal<bool > pw_weight_addr_valid_2d;
  sc_signal<bool > pw_weight_addr_valid_1d;
  sc_signal<sc_uint<1> > run_8d;
  sc_signal<sc_uint<1> > run_7d;
  sc_signal<sc_uint<1> > run_6d;
  sc_signal<sc_uint<1> > run_5d;
  sc_signal<sc_uint<1> > run_4d;
  sc_signal<sc_uint<1> > run;
  sc_signal<sc_uint<1> > run_1d;
  sc_signal<sc_uint<1> > run_2d;
  sc_signal<sc_uint<1> > run_9d;
  sc_signal<bool > pw_weight_addr_valid_5d;
  sc_signal<sc_uint<1> > run_3d;
  sc_signal<sc_uint<1> > run_10d;
  sc_signal<bool > pw_weight_addr_valid_6d;
  sc_signal<sc_uint<16> > of_cnt_max;
  sc_signal<sc_uint<16> > if_cnt_max;
  sc_signal<sc_int<16> > pw_weight_addr_gen_Add3u8u8Subu16u16_4_5_out1;
  sc_signal<sc_int<16> > pw_weight_addr_gen_Add3u8u8Subu16u16_4_6_out1;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_N_Mux_16_3_24_4_2_out1;
  sc_signal<sc_uint<15> > pw_weight_addr_gen_N_Mux_16_3_24_4_2_in2;
  sc_signal<sc_uint<14> > pw_weight_addr_gen_N_Mux_16_3_24_4_2_in3;
  sc_signal<sc_uint<16> > ox_cnt_max;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_N_Mux_16_3_24_4_1_out1;
  sc_signal<sc_uint<15> > pw_weight_addr_gen_N_Mux_16_3_24_4_1_in2;
  sc_signal<sc_uint<14> > pw_weight_addr_gen_N_Mux_16_3_24_4_1_in3;
  sc_signal<sc_uint<16> > oy_cnt_max;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_Add2i1u16_1_3_out1;
  sc_signal<sc_uint<16> > oy_cnt_max2;
  sc_signal<sc_uint<16> > pw_weight_addr_gen_Add2i1u16_1_4_out1;
  sc_signal<sc_uint<16> > ox_cnt_max2;
  void drive_ox_cnt_max2();
  void drive_oy_cnt_max2();
  void drive_pw_weight_addr_gen_N_Mux_16_3_24_4_1_in3();
  void drive_pw_weight_addr_gen_N_Mux_16_3_24_4_1_in2();
  void pw_weight_addr_gen_N_Mux_16_3_24_4_1();
  void drive_pw_weight_addr_gen_N_Mux_16_3_24_4_2_in3();
  void drive_pw_weight_addr_gen_N_Mux_16_3_24_4_2_in2();
  void pw_weight_addr_gen_N_Mux_16_3_24_4_2();
  void pw_weight_addr_gen_Add2i1u16_1_3();
  void pw_weight_addr_gen_Add2i1u16_1_4();
  void drive_ox_cnt_max();
  void drive_oy_cnt_max();
  void drive_if_cnt_max();
  void drive_of_cnt_max();
  void pw_weight_addr_gen_Add3u8u8Subu16u16_4_5();
  void pw_weight_addr_gen_Add3u8u8Subu16u16_4_6();
  void drive_pw_weight_data_valid();
  void drive_cache_en();
  void drive_pw_weight_addr_valid();
  void drive_pw_weight_addr_valid_6d();
  void drive_run_10d();
  void drive_run_3d();
  void drive_run_1d();
  void drive_run_2d();
  void drive_run_4d();
  void drive_run_5d();
  void drive_run_6d();
  void drive_run_7d();
  void drive_run_8d();
  void drive_run_9d();
  void drive_pw_weight_addr_valid_1d();
  void drive_pw_weight_addr_valid_2d();
  void drive_pw_weight_addr_valid_3d();
  void drive_pw_weight_addr_valid_4d();
  void drive_pw_weight_addr_valid_5d();
  void drive_pw_weight_addr();
  void drive_tmp_pw_weight_addr();
  void pw_weight_addr_gen_Add_32Ux32U_32U_4_7();
  void drive_org_of_pos();
  void drive_org_if_pos();
  void pw_weight_addr_gen_Mul_16Ux16U_32U_1_8();
  void pw_weight_addr_gen_Add_32Ux16U_32U_4_9();
  void drive_of_pos();
  void drive_if_pos();
  void drive_of_cnt();
  void pw_weight_addr_gen_MuxAdd2i1u16u16u1_1_27();
  void pw_weight_addr_gen_Muxi0u16u1_4_28();
  void drive_pw_weight_addr_gen_EqSubi1u16u16_1_25_in1();
  void pw_weight_addr_gen_EqSubi1u16u16_1_25();
  void pw_weight_addr_gen_And_1Ux1U_1U_1_26();
  void drive_oy_cnt();
  void pw_weight_addr_gen_MuxAdd2i1u16u16u1_1_23();
  void pw_weight_addr_gen_Muxi0u16u1_4_24();
  void pw_weight_addr_gen_EqSubi1u16u16_1_21();
  void pw_weight_addr_gen_And_1Ux1U_1U_1_22();
  void drive_ox_cnt();
  void pw_weight_addr_gen_Add_16Ux8U_16U_4_18();
  void pw_weight_addr_gen_N_Mux_16_2_22_4_19();
  void pw_weight_addr_gen_Muxi0u16u1_4_20();
  void pw_weight_addr_gen_EqSubu8u16u16_1_16();
  void pw_weight_addr_gen_And_1Ux1U_1U_1_17();
  void drive_if_cnt();
  void pw_weight_addr_gen_MuxAdd2i1u16u16u1_4_14();
  void pw_weight_addr_gen_Muxi0u16u1_4_15();
  void pw_weight_addr_gen_EqSubi1u16u16_1_12();
  void pw_weight_addr_gen_And_1Ux1U_1U_1_13();
  void drive_run();
  void pw_weight_addr_gen_Not_1U_1U_4_10();
  void pw_weight_addr_gen_And_1Ux1U_1U_4_11();
  void drive_enable();
  void pw_weight_addr_gen_Eqi1u16_4_30();
  void pw_weight_addr_gen_Not_1U_1U_4_31();
  void pw_weight_addr_gen_And_1Ux1U_1U_4_32();
  void pw_weight_addr_gen_Eqi1u16_4_33();
  void pw_weight_addr_gen_And_1Ux1U_1U_4_34();
  void pw_weight_addr_gen_And_1Ux1U_1U_4_35();
  void pw_weight_addr_gen_Or_1Ux1U_1U_4_36();
  void drive_pw_weight_addr_gen_AndReduction_4S_1U_1_29_in1();
  void pw_weight_addr_gen_AndReduction_4S_1U_1_29();
};

#endif
