// Generated by stratus_hls 19.10-p100  (91500.011111)
// Tue Jan 26 20:43:32 2021
// from bn_addr_gen.cpp
#include "bn_addr_gen_rtl.h"

struct bn_addr_gen;
bn_addr_gen::bn_addr_gen(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rstn("rstn")
    ,out_feature_width("out_feature_width")
    ,out_feature_height("out_feature_height")
    ,out_feature_channel("out_feature_channel")
    ,bn_read_base_addr("bn_read_base_addr")
    ,conv_type("conv_type")
    ,bn_en("bn_en")
    ,start_rising("start_rising")
    ,data_en("data_en")
    ,bn_addr("bn_addr")
    ,bn_addr_valid("bn_addr_valid")
    ,data_en_5d("data_en_5d")
    ,data_en_4d("data_en_4d")
    ,data_en_3d("data_en_3d")
    ,data_en_2d("data_en_2d")
    ,data_en_1d("data_en_1d")
    ,data_en_8d("data_en_8d")
    ,data_en_6d("data_en_6d")
    ,data_en_9d("data_en_9d")
    ,data_en_7d("data_en_7d")
    ,bn_addr_gen_Eqi3u16_1_4_out1("bn_addr_gen_Eqi3u16_1_4_out1")
    ,bn_addr_gen_OrReduction_8U_1U_1_3_out1("bn_addr_gen_OrReduction_8U_1U_1_3_out1")
    ,bn_addr_gen_MuxAdd2i1u16u16u1_4_7_out1("bn_addr_gen_MuxAdd2i1u16u16u1_4_7_out1")
    ,bn_addr_gen_Muxi0u16u1_4_8_out1("bn_addr_gen_Muxi0u16u1_4_8_out1")
    ,bn_addr_gen_EqSubi1u16u16_1_9_out1("bn_addr_gen_EqSubi1u16u16_1_9_out1")
    ,bn_addr_gen_MuxAdd2i1u16u16u1_4_11_out1("bn_addr_gen_MuxAdd2i1u16u16u1_4_11_out1")
    ,bn_addr_gen_And_1Ux1U_1U_1_5_out1("bn_addr_gen_And_1Ux1U_1U_1_5_out1")
    ,bn_addr_gen_Muxi0u16u1_4_12_out1("bn_addr_gen_Muxi0u16u1_4_12_out1")
    ,ox_cnt("ox_cnt")
    ,bn_addr_gen_EqSubi1u16u16_1_13_out1("bn_addr_gen_EqSubi1u16u16_1_13_out1")
    ,bn_addr_gen_MuxAdd2i1u16u16u1_1_15_out1("bn_addr_gen_MuxAdd2i1u16u16u1_1_15_out1")
    ,bn_addr_gen_And_1Ux1U_1U_1_10_out1("bn_addr_gen_And_1Ux1U_1U_1_10_out1")
    ,bn_addr_gen_Muxi0u16u1_4_16_out1("bn_addr_gen_Muxi0u16u1_4_16_out1")
    ,oy_cnt("oy_cnt")
    ,bn_addr_gen_EqSubi1u16u16_1_17_out1("bn_addr_gen_EqSubi1u16u16_1_17_out1")
    ,bn_addr_gen_And_1Ux1U_1U_1_18_out1("bn_addr_gen_And_1Ux1U_1U_1_18_out1")
    ,bn_addr_gen_MuxAdd2i1u16u16u1_1_19_out1("bn_addr_gen_MuxAdd2i1u16u16u1_1_19_out1")
    ,bn_addr_gen_And_1Ux1U_1U_1_14_out1("bn_addr_gen_And_1Ux1U_1U_1_14_out1")
    ,bn_addr_gen_Muxi0u16u1_4_20_out1("bn_addr_gen_Muxi0u16u1_4_20_out1")
    ,of_cnt_max_slice("of_cnt_max_slice")
    ,oy_cnt_max("oy_cnt_max")
    ,ox_cnt_max("ox_cnt_max")
    ,valid_cnt("valid_cnt")
    ,of_cnt("of_cnt")
    ,bn_addr_gen_Equal_8Ux1U_1U_4_1_out1("bn_addr_gen_Equal_8Ux1U_1U_4_1_out1")
    ,bn_addr_gen_MuxAdd3u16Cati0u16u32u32u1_1_2_out1("bn_addr_gen_MuxAdd3u16Cati0u16u32u32u1_1_2_out1")
    ,bn_addr_gen_N_Mux_1_2_7_1_6_out1("bn_addr_gen_N_Mux_1_2_7_1_6_out1")
{
  SC_METHOD(drive_bn_addr_valid);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_bn_addr);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bn_addr_gen_Equal_8Ux1U_1U_4_1);
  sensitive << ( bn_en );

  SC_METHOD(bn_addr_gen_MuxAdd3u16Cati0u16u32u32u1_1_2);
  sensitive << ( bn_addr_gen_Equal_8Ux1U_1U_4_1_out1 );
  sensitive << ( valid_cnt );
  sensitive << ( of_cnt );
  sensitive << ( bn_read_base_addr );
  sensitive << ( bn_addr );

  SC_METHOD(drive_ox_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_oy_cnt_max);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_of_cnt_max_slice);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_of_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bn_addr_gen_MuxAdd2i1u16u16u1_1_19);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_14_out1 );
  sensitive << ( of_cnt );

  SC_METHOD(bn_addr_gen_Muxi0u16u1_4_20);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_18_out1 );
  sensitive << ( bn_addr_gen_MuxAdd2i1u16u16u1_1_19_out1 );

  SC_METHOD(bn_addr_gen_EqSubi1u16u16_1_17);
  sensitive << ( of_cnt_max_slice );
  sensitive << ( of_cnt );

  SC_METHOD(bn_addr_gen_And_1Ux1U_1U_1_18);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_14_out1 );
  sensitive << ( bn_addr_gen_EqSubi1u16u16_1_17_out1 );

  SC_METHOD(drive_oy_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bn_addr_gen_MuxAdd2i1u16u16u1_1_15);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_10_out1 );
  sensitive << ( oy_cnt );

  SC_METHOD(bn_addr_gen_Muxi0u16u1_4_16);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_14_out1 );
  sensitive << ( bn_addr_gen_MuxAdd2i1u16u16u1_1_15_out1 );

  SC_METHOD(bn_addr_gen_EqSubi1u16u16_1_13);
  sensitive << ( oy_cnt_max );
  sensitive << ( oy_cnt );

  SC_METHOD(bn_addr_gen_And_1Ux1U_1U_1_14);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_10_out1 );
  sensitive << ( bn_addr_gen_EqSubi1u16u16_1_13_out1 );

  SC_METHOD(drive_ox_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bn_addr_gen_MuxAdd2i1u16u16u1_4_11);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_5_out1 );
  sensitive << ( ox_cnt );

  SC_METHOD(bn_addr_gen_Muxi0u16u1_4_12);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_10_out1 );
  sensitive << ( bn_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 );

  SC_METHOD(bn_addr_gen_EqSubi1u16u16_1_9);
  sensitive << ( ox_cnt_max );
  sensitive << ( ox_cnt );

  SC_METHOD(bn_addr_gen_And_1Ux1U_1U_1_10);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_5_out1 );
  sensitive << ( bn_addr_gen_EqSubi1u16u16_1_9_out1 );

  SC_METHOD(drive_valid_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bn_addr_gen_MuxAdd2i1u16u16u1_4_7);
  sensitive << ( bn_addr_gen_N_Mux_1_2_7_1_6_out1 );
  sensitive << ( valid_cnt );

  SC_METHOD(bn_addr_gen_Muxi0u16u1_4_8);
  sensitive << ( bn_addr_gen_And_1Ux1U_1U_1_5_out1 );
  sensitive << ( bn_addr_gen_MuxAdd2i1u16u16u1_4_7_out1 );

  SC_METHOD(bn_addr_gen_OrReduction_8U_1U_1_3);
  sensitive << ( conv_type );

  SC_METHOD(bn_addr_gen_Eqi3u16_1_4);
  sensitive << ( valid_cnt );

  SC_METHOD(bn_addr_gen_And_1Ux1U_1U_1_5);
  sensitive << ( bn_addr_gen_N_Mux_1_2_7_1_6_out1 );
  sensitive << ( bn_addr_gen_Eqi3u16_1_4_out1 );

  SC_METHOD(bn_addr_gen_N_Mux_1_2_7_1_6);
  sensitive << ( bn_addr_gen_OrReduction_8U_1U_1_3_out1 );
  sensitive << ( data_en_9d );
  sensitive << ( data_en_7d );

  SC_METHOD(drive_data_en_7d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_data_en_9d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_data_en_1d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_data_en_2d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_data_en_3d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_data_en_4d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_data_en_5d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_data_en_6d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_data_en_8d);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

}
// resource: regr_ac_1
void bn_addr_gen::drive_bn_addr_valid(){
  if ( (rstn.read() == 0ULL) ) {
    bn_addr_valid = 0ULL;
  } else {
    bn_addr_valid = (sc_uint<1> ) (bn_addr_gen_N_Mux_1_2_7_1_6_out1.read());
  }
}
// resource: regr_ac_32
void bn_addr_gen::drive_bn_addr(){
  if ( (rstn.read() == 0ULL) ) {
    bn_addr = 0ULL;
  } else {
    bn_addr = bn_addr_gen_MuxAdd3u16Cati0u16u32u32u1_1_2_out1.read();
  }
}
// resource: bn_addr_gen_Equal_8Ux1U_1U_4  instance: bn_addr_gen_Equal_8Ux1U_1U_4_1
void bn_addr_gen::bn_addr_gen_Equal_8Ux1U_1U_4_1(){
  bn_addr_gen_Equal_8Ux1U_1U_4_1_out1 = (bn_en.read() == 1ULL);
}
// resource: bn_addr_gen_MuxAdd3u16Cati0u16u32u32u1_1
void bn_addr_gen::bn_addr_gen_MuxAdd3u16Cati0u16u32u32u1_1_2(){
  if ( bn_addr_gen_Equal_8Ux1U_1U_4_1_out1.read() ) {
    bn_addr_gen_MuxAdd3u16Cati0u16u32u32u1_1_2_out1 = (( (bn_read_base_addr
                                                      .read() + ( (sc_uint<18> )
                                                      (sc_bv<18>)((sc_bv<16>)(
                                                      of_cnt.read()), 
                                                      (sc_bv<2>)(0ULL)) )) ) + 
                                                      valid_cnt.read());
  } else {
    bn_addr_gen_MuxAdd3u16Cati0u16u32u32u1_1_2_out1 = bn_addr.read();
  }
}
// resource: regr_16
void bn_addr_gen::drive_ox_cnt_max(){
  ox_cnt_max = out_feature_width.read();
}
// resource: regr_16
void bn_addr_gen::drive_oy_cnt_max(){
  oy_cnt_max = out_feature_height.read();
}
// resource: regr_11
void bn_addr_gen::drive_of_cnt_max_slice(){
  of_cnt_max_slice = (sc_uint<11> ) (out_feature_channel.read().range(15,5));
}
// resource: regr_ac_16
void bn_addr_gen::drive_of_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    of_cnt = 0ULL;
  } else {
    of_cnt = bn_addr_gen_Muxi0u16u1_4_20_out1.read();
  }
}
// resource: bn_addr_gen_MuxAdd2i1u16u16u1_1
void bn_addr_gen::bn_addr_gen_MuxAdd2i1u16u16u1_1_19(){
  if ( bn_addr_gen_And_1Ux1U_1U_1_14_out1.read() ) {
    bn_addr_gen_MuxAdd2i1u16u16u1_1_19_out1 = (of_cnt.read() + 1ULL);
  } else {
    bn_addr_gen_MuxAdd2i1u16u16u1_1_19_out1 = of_cnt.read();
  }
}
// resource: bn_addr_gen_Muxi0u16u1_4
void bn_addr_gen::bn_addr_gen_Muxi0u16u1_4_20(){
  if ( bn_addr_gen_And_1Ux1U_1U_1_18_out1.read() ) {
    bn_addr_gen_Muxi0u16u1_4_20_out1 = 0ULL;
  } else {
    bn_addr_gen_Muxi0u16u1_4_20_out1 = bn_addr_gen_MuxAdd2i1u16u16u1_1_19_out1
                                       .read();
  }
}
// resource: bn_addr_gen_EqSubi1u16u16_1  instance: bn_addr_gen_EqSubi1u16u16_1_17
void bn_addr_gen::bn_addr_gen_EqSubi1u16u16_1_17(){
  bn_addr_gen_EqSubi1u16u16_1_17_out1 = ((sc_int<17> )of_cnt.read() == ( (
                                        sc_uint<16> )(sc_bv<16>)((sc_bv<5>)(0ULL
                                        ), 
                                        (sc_bv<11>)(of_cnt_max_slice.read())) )
                                         - 1ULL);
}
// resource: bn_addr_gen_And_1Ux1U_1U_1  instance: bn_addr_gen_And_1Ux1U_1U_1_18
void bn_addr_gen::bn_addr_gen_And_1Ux1U_1U_1_18(){
  bn_addr_gen_And_1Ux1U_1U_1_18_out1 = bn_addr_gen_EqSubi1u16u16_1_17_out1
                                       .read() & 
                                       bn_addr_gen_And_1Ux1U_1U_1_14_out1.read()
  ;
}
// resource: regr_ac_16
void bn_addr_gen::drive_oy_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    oy_cnt = 0ULL;
  } else {
    oy_cnt = bn_addr_gen_Muxi0u16u1_4_16_out1.read();
  }
}
// resource: bn_addr_gen_MuxAdd2i1u16u16u1_1
void bn_addr_gen::bn_addr_gen_MuxAdd2i1u16u16u1_1_15(){
  if ( bn_addr_gen_And_1Ux1U_1U_1_10_out1.read() ) {
    bn_addr_gen_MuxAdd2i1u16u16u1_1_15_out1 = (oy_cnt.read() + 1ULL);
  } else {
    bn_addr_gen_MuxAdd2i1u16u16u1_1_15_out1 = oy_cnt.read();
  }
}
// resource: bn_addr_gen_Muxi0u16u1_4
void bn_addr_gen::bn_addr_gen_Muxi0u16u1_4_16(){
  if ( bn_addr_gen_And_1Ux1U_1U_1_14_out1.read() ) {
    bn_addr_gen_Muxi0u16u1_4_16_out1 = 0ULL;
  } else {
    bn_addr_gen_Muxi0u16u1_4_16_out1 = bn_addr_gen_MuxAdd2i1u16u16u1_1_15_out1
                                       .read();
  }
}
// resource: bn_addr_gen_EqSubi1u16u16_1  instance: bn_addr_gen_EqSubi1u16u16_1_13
void bn_addr_gen::bn_addr_gen_EqSubi1u16u16_1_13(){
  bn_addr_gen_EqSubi1u16u16_1_13_out1 = ((sc_int<17> )oy_cnt.read() == 
                                        oy_cnt_max.read() - 1ULL);
}
// resource: bn_addr_gen_And_1Ux1U_1U_1  instance: bn_addr_gen_And_1Ux1U_1U_1_14
void bn_addr_gen::bn_addr_gen_And_1Ux1U_1U_1_14(){
  bn_addr_gen_And_1Ux1U_1U_1_14_out1 = bn_addr_gen_EqSubi1u16u16_1_13_out1
                                       .read() & 
                                       bn_addr_gen_And_1Ux1U_1U_1_10_out1.read()
  ;
}
// resource: regr_ac_16
void bn_addr_gen::drive_ox_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    ox_cnt = 0ULL;
  } else {
    ox_cnt = bn_addr_gen_Muxi0u16u1_4_12_out1.read();
  }
}
// resource: bn_addr_gen_MuxAdd2i1u16u16u1_4
void bn_addr_gen::bn_addr_gen_MuxAdd2i1u16u16u1_4_11(){
  if ( bn_addr_gen_And_1Ux1U_1U_1_5_out1.read() ) {
    bn_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 = (ox_cnt.read() + 1ULL);
  } else {
    bn_addr_gen_MuxAdd2i1u16u16u1_4_11_out1 = ox_cnt.read();
  }
}
// resource: bn_addr_gen_Muxi0u16u1_4
void bn_addr_gen::bn_addr_gen_Muxi0u16u1_4_12(){
  if ( bn_addr_gen_And_1Ux1U_1U_1_10_out1.read() ) {
    bn_addr_gen_Muxi0u16u1_4_12_out1 = 0ULL;
  } else {
    bn_addr_gen_Muxi0u16u1_4_12_out1 = bn_addr_gen_MuxAdd2i1u16u16u1_4_11_out1
                                       .read();
  }
}
// resource: bn_addr_gen_EqSubi1u16u16_1  instance: bn_addr_gen_EqSubi1u16u16_1_9
void bn_addr_gen::bn_addr_gen_EqSubi1u16u16_1_9(){
  bn_addr_gen_EqSubi1u16u16_1_9_out1 = ((sc_int<17> )ox_cnt.read() == ox_cnt_max
                                       .read() - 1ULL);
}
// resource: bn_addr_gen_And_1Ux1U_1U_1  instance: bn_addr_gen_And_1Ux1U_1U_1_10
void bn_addr_gen::bn_addr_gen_And_1Ux1U_1U_1_10(){
  bn_addr_gen_And_1Ux1U_1U_1_10_out1 = bn_addr_gen_EqSubi1u16u16_1_9_out1.read()
                                        & bn_addr_gen_And_1Ux1U_1U_1_5_out1
                                       .read();
}
// resource: regr_ac_16
void bn_addr_gen::drive_valid_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    valid_cnt = 0ULL;
  } else {
    valid_cnt = bn_addr_gen_Muxi0u16u1_4_8_out1.read();
  }
}
// resource: bn_addr_gen_MuxAdd2i1u16u16u1_4
void bn_addr_gen::bn_addr_gen_MuxAdd2i1u16u16u1_4_7(){
  if ( bn_addr_gen_N_Mux_1_2_7_1_6_out1.read() ) {
    bn_addr_gen_MuxAdd2i1u16u16u1_4_7_out1 = (valid_cnt.read() + 1ULL);
  } else {
    bn_addr_gen_MuxAdd2i1u16u16u1_4_7_out1 = valid_cnt.read();
  }
}
// resource: bn_addr_gen_Muxi0u16u1_4
void bn_addr_gen::bn_addr_gen_Muxi0u16u1_4_8(){
  if ( bn_addr_gen_And_1Ux1U_1U_1_5_out1.read() ) {
    bn_addr_gen_Muxi0u16u1_4_8_out1 = 0ULL;
  } else {
    bn_addr_gen_Muxi0u16u1_4_8_out1 = bn_addr_gen_MuxAdd2i1u16u16u1_4_7_out1
                                      .read();
  }
}
// resource: bn_addr_gen_OrReduction_8U_1U_1  instance: bn_addr_gen_OrReduction_8U_1U_1_3
void bn_addr_gen::bn_addr_gen_OrReduction_8U_1U_1_3(){
  bn_addr_gen_OrReduction_8U_1U_1_3_out1 = ((sc_uint<8>)conv_type.read())
                                           .or_reduce();
}
// resource: bn_addr_gen_Eqi3u16_1  instance: bn_addr_gen_Eqi3u16_1_4
void bn_addr_gen::bn_addr_gen_Eqi3u16_1_4(){
  bn_addr_gen_Eqi3u16_1_4_out1 = (valid_cnt.read() == 3ULL);
}
// resource: bn_addr_gen_And_1Ux1U_1U_1  instance: bn_addr_gen_And_1Ux1U_1U_1_5
void bn_addr_gen::bn_addr_gen_And_1Ux1U_1U_1_5(){
  bn_addr_gen_And_1Ux1U_1U_1_5_out1 = bn_addr_gen_Eqi3u16_1_4_out1.read() & 
                                      bn_addr_gen_N_Mux_1_2_7_1_6_out1.read();
}
// resource: bn_addr_gen_N_Mux_1_2_7_1
void bn_addr_gen::bn_addr_gen_N_Mux_1_2_7_1_6(){
  if ( bn_addr_gen_OrReduction_8U_1U_1_3_out1.read() ) {
    bn_addr_gen_N_Mux_1_2_7_1_6_out1 = data_en_9d.read();
  } else {
    bn_addr_gen_N_Mux_1_2_7_1_6_out1 = data_en_7d.read();
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_7d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_7d = 0ULL;
  } else {
    data_en_7d = data_en_6d.read();
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_9d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_9d = 0ULL;
  } else {
    data_en_9d = data_en_8d.read();
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_1d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_1d = 0ULL;
  } else {
    data_en_1d = (sc_uint<1> ) (data_en.read());
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_2d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_2d = 0ULL;
  } else {
    data_en_2d = data_en_1d.read();
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_3d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_3d = 0ULL;
  } else {
    data_en_3d = data_en_2d.read();
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_4d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_4d = 0ULL;
  } else {
    data_en_4d = data_en_3d.read();
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_5d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_5d = 0ULL;
  } else {
    data_en_5d = data_en_4d.read();
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_6d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_6d = 0ULL;
  } else {
    data_en_6d = data_en_5d.read();
  }
}
// resource: regr_ac_1
void bn_addr_gen::drive_data_en_8d(){
  if ( (rstn.read() == 0ULL) ) {
    data_en_8d = 0ULL;
  } else {
    data_en_8d = data_en_7d.read();
  }
}
