// Generated by stratus_hls 19.10-p100  (91500.011111)
// Wed Dec 23 17:37:49 2020
// from in_buff.cpp

`timescale 1ps / 1ps

      
module in_buff(clk, rstn, enable, in_data_0, in_data_1, in_data_2, in_data_3, in_data_4, in_data_5, in_data_6, in_data_7, in_data_8, in_data_9, in_data_10, in_data_11, in_data_12, in_data_13, in_data_14, in_data_15, in_data_16, in_data_17, in_data_18, in_data_19, in_data_20, in_data_21, in_data_22, in_data_23, in_data_24, in_data_25, in_data_26, in_data_27, in_data_28, in_data_29, in_data_30, in_data_31, in_data_valid, out_data_0, out_data_1, out_data_2, out_data_3, out_data_4, out_data_5
          , out_data_6, out_data_7, out_data_valid);

      input clk;
      input rstn;
      input enable;
      input [31:0] in_data_0;
      input [31:0] in_data_1;
      input [31:0] in_data_2;
      input [31:0] in_data_3;
      input [31:0] in_data_4;
      input [31:0] in_data_5;
      input [31:0] in_data_6;
      input [31:0] in_data_7;
      input [31:0] in_data_8;
      input [31:0] in_data_9;
      input [31:0] in_data_10;
      input [31:0] in_data_11;
      input [31:0] in_data_12;
      input [31:0] in_data_13;
      input [31:0] in_data_14;
      input [31:0] in_data_15;
      input [31:0] in_data_16;
      input [31:0] in_data_17;
      input [31:0] in_data_18;
      input [31:0] in_data_19;
      input [31:0] in_data_20;
      input [31:0] in_data_21;
      input [31:0] in_data_22;
      input [31:0] in_data_23;
      input [31:0] in_data_24;
      input [31:0] in_data_25;
      input [31:0] in_data_26;
      input [31:0] in_data_27;
      input [31:0] in_data_28;
      input [31:0] in_data_29;
      input [31:0] in_data_30;
      input [31:0] in_data_31;
      input in_data_valid;
      output [31:0] out_data_0;
      reg [31:0] out_data_0;
      output [31:0] out_data_1;
      reg [31:0] out_data_1;
      output [31:0] out_data_2;
      reg [31:0] out_data_2;
      output [31:0] out_data_3;
      reg [31:0] out_data_3;
      output [31:0] out_data_4;
      reg [31:0] out_data_4;
      output [31:0] out_data_5;
      reg [31:0] out_data_5;
      output [31:0] out_data_6;
      reg [31:0] out_data_6;
      output [31:0] out_data_7;
      reg [31:0] out_data_7;
      output out_data_valid;
      reg out_data_valid;
      wire in_buff_OrReduction_3U_1U_4_20_out1;
      wire in_buff_Nei7u3_4_18_out1;
      wire in_buff_And_1Ux1U_1U_4_17_out1;
      wire in_buff_Eqi7u3_4_21_out1;
      wire in_buff_Eqi6u3_4_22_out1;
      wire in_buff_Eqi5u3_4_23_out1;
      wire in_buff_Eqi4u3_4_24_out1;
      wire in_buff_Eqi3u3_4_25_out1;
      wire in_buff_Eqi2u3_4_26_out1;
      wire in_buff_Eqi1u3_4_27_out1;
      reg[1023:0] concate_in_data;
      wire in_buff_And_1Ux1U_1U_4_19_out1;
      wire in_buff_Not_1U_1U_4_28_out1;
      reg[1023:0] fifo_0;
      reg[1023:0] fifo_1;
      reg[1023:0] fifo_2;
      reg[1023:0] fifo_3;
      reg[1023:0] fifo_4;
      reg[1023:0] fifo_5;
      reg[1023:0] fifo_6;
      reg[1023:0] fifo_7;
      wire in_buff_And_1Ux1U_1U_4_11_out1;
      wire in_buff_OrReduction_3U_1U_4_10_out1;
      reg[1023:0] in_buff_N_MuxB_1024_8_22_4_13_out1;
      wire in_buff_And_1Ux1U_1U_4_12_out1;
      reg[1023:0] out_tmp;
      reg[2:0] in_buff_MuxSubi1u3u3u1_4_8_out1;
      wire[2:0] in_buff_Add2i1u3_4_7_out1;
      wire in_buff_And_1Ux1U_1U_4_6_out1;
      wire in_buff_OrReduction_3U_1U_4_5_out1;
      reg[2:0] in_buff_N_Mux_3_2_20_4_9_out1;
      wire in_buff_Eqi3u2_1_4_out1;
      reg read_en;
      wire in_buff_And_1Ux1U_1U_4_15_out1;
      wire in_buff_Nei7u3_4_14_out1;
      reg[2:0] in_buff_MuxAdd2i1u3u3u1_4_16_out1;
      reg[2:0] wr_ptr;
      reg[2:0] fifo_cnt;
      wire in_buff_OrReduction_3U_1U_4_2_out1;
      reg[4:0] in_buff_MuxAdd2i1u5u5u1_4_3_out1;
      reg[4:0] tmp_rd_ptr;
      wire[2:0] rd_ptr;
      /*signed*/reg[31:0] w_data_31;
      /*signed*/reg[31:0] w_data_23;
      /*signed*/reg[31:0] w_data_15;
      /*signed*/reg[31:0] w_data_7;
      /*signed*/reg[31:0] w_data_30;
      /*signed*/reg[31:0] w_data_22;
      /*signed*/reg[31:0] w_data_14;
      /*signed*/reg[31:0] w_data_6;
      /*signed*/reg[31:0] w_data_29;
      /*signed*/reg[31:0] w_data_21;
      /*signed*/reg[31:0] w_data_13;
      /*signed*/reg[31:0] w_data_5;
      /*signed*/reg[31:0] w_data_28;
      /*signed*/reg[31:0] w_data_20;
      /*signed*/reg[31:0] w_data_12;
      /*signed*/reg[31:0] w_data_4;
      /*signed*/reg[31:0] w_data_27;
      /*signed*/reg[31:0] w_data_19;
      /*signed*/reg[31:0] w_data_11;
      /*signed*/reg[31:0] w_data_3;
      /*signed*/reg[31:0] w_data_26;
      /*signed*/reg[31:0] w_data_18;
      /*signed*/reg[31:0] w_data_10;
      /*signed*/reg[31:0] w_data_2;
      /*signed*/reg[31:0] w_data_25;
      /*signed*/reg[31:0] w_data_17;
      /*signed*/reg[31:0] w_data_9;
      /*signed*/reg[31:0] w_data_1;
      /*signed*/reg[31:0] w_data_24;
      /*signed*/reg[31:0] w_data_16;
      /*signed*/reg[31:0] w_data_8;
      /*signed*/reg[31:0] w_data_0;
      reg read_en_1d;
      reg read_en_2d;
      reg read_en_3d;
      reg read_en_4d;
      wire[3:0] in_buff_OrReduction_4U_1U_4_1_in1;
      wire in_buff_OrReduction_4U_1U_4_1_out1;

         // rtl_process:in_buff/drive_out_data_valid
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_out_data_valid
         // at: in_buff.h:240:9
         // at: in_buff.h:243:9
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_valid
            if (rstn == 1'b0) begin
               // op:_out_data_valid/OP0
               out_data_valid <= 1'd0;
            end
            else begin
               // op:_out_data_valid/OP6
               out_data_valid <= in_buff_OrReduction_4U_1U_4_1_out1;
            end
         end

         // rtl_process:in_buff/drive_in_buff_OrReduction_4U_1U_4_1_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_in_buff_OrReduction_4U_1U_4_1_in1
         // at: in_buff.h:243:63
         assign in_buff_OrReduction_4U_1U_4_1_in1 = {{read_en_1d, read_en_2d}, {read_en_3d, read_en_4d}};

         // rtl_instance:in_buff/in_buff_OrReduction_4U_1U_4_1
         // Resource=in_buff_OrReduction_4U_1U_4, Function=or : Inputs=4 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:243:63
         assign in_buff_OrReduction_4U_1U_4_1_out1 = (|in_buff_OrReduction_4U_1U_4_1_in1);

         // rtl_process:in_buff/drive_out_data_0
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_out_data_0
         // at: in_buff.h:210:17
         // at: in_buff.h:215:17
         // at: in_buff.h:221:17
         // at: in_buff.h:227:17
         // at: in_buff.h:233:17
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_0
            if (rstn == 1'b0) begin
               // op:_out_data/OP8
               out_data_0 <= 32'd0000000000;
            end
            else begin
               case (read_en_1d) 

                  1'b1:                   begin
                     // op:_out_data/OP73
                     out_data_0 <= w_data_0;
                  end
                  
                  1'b0:                   begin
                     if (read_en_2d) begin
                        // op:_out_data/OP57
                        out_data_0 <= w_data_8;
                     end
                     else begin
                        if (read_en_3d) begin
                           // op:_out_data/OP41
                           out_data_0 <= w_data_16;
                        end
                        else begin
                           if (read_en_4d) begin
                              // op:_out_data/OP25
                              out_data_0 <= w_data_24;
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_out_data_1
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_out_data_1
         // at: in_buff.h:210:17
         // at: in_buff.h:215:17
         // at: in_buff.h:221:17
         // at: in_buff.h:227:17
         // at: in_buff.h:233:17
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_1
            if (rstn == 1'b0) begin
               // op:_out_data/OP9
               out_data_1 <= 32'd0000000000;
            end
            else begin
               case (read_en_1d) 

                  1'b1:                   begin
                     // op:_out_data/OP75
                     out_data_1 <= w_data_1;
                  end
                  
                  1'b0:                   begin
                     if (read_en_2d) begin
                        // op:_out_data/OP59
                        out_data_1 <= w_data_9;
                     end
                     else begin
                        if (read_en_3d) begin
                           // op:_out_data/OP43
                           out_data_1 <= w_data_17;
                        end
                        else begin
                           if (read_en_4d) begin
                              // op:_out_data/OP27
                              out_data_1 <= w_data_25;
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_out_data_2
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_out_data_2
         // at: in_buff.h:210:17
         // at: in_buff.h:215:17
         // at: in_buff.h:221:17
         // at: in_buff.h:227:17
         // at: in_buff.h:233:17
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_2
            if (rstn == 1'b0) begin
               // op:_out_data/OP10
               out_data_2 <= 32'd0000000000;
            end
            else begin
               case (read_en_1d) 

                  1'b1:                   begin
                     // op:_out_data/OP77
                     out_data_2 <= w_data_2;
                  end
                  
                  1'b0:                   begin
                     if (read_en_2d) begin
                        // op:_out_data/OP61
                        out_data_2 <= w_data_10;
                     end
                     else begin
                        if (read_en_3d) begin
                           // op:_out_data/OP45
                           out_data_2 <= w_data_18;
                        end
                        else begin
                           if (read_en_4d) begin
                              // op:_out_data/OP29
                              out_data_2 <= w_data_26;
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_out_data_3
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_out_data_3
         // at: in_buff.h:210:17
         // at: in_buff.h:215:17
         // at: in_buff.h:221:17
         // at: in_buff.h:227:17
         // at: in_buff.h:233:17
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_3
            if (rstn == 1'b0) begin
               // op:_out_data/OP11
               out_data_3 <= 32'd0000000000;
            end
            else begin
               case (read_en_1d) 

                  1'b1:                   begin
                     // op:_out_data/OP79
                     out_data_3 <= w_data_3;
                  end
                  
                  1'b0:                   begin
                     if (read_en_2d) begin
                        // op:_out_data/OP63
                        out_data_3 <= w_data_11;
                     end
                     else begin
                        if (read_en_3d) begin
                           // op:_out_data/OP47
                           out_data_3 <= w_data_19;
                        end
                        else begin
                           if (read_en_4d) begin
                              // op:_out_data/OP31
                              out_data_3 <= w_data_27;
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_out_data_4
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_out_data_4
         // at: in_buff.h:210:17
         // at: in_buff.h:215:17
         // at: in_buff.h:221:17
         // at: in_buff.h:227:17
         // at: in_buff.h:233:17
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_4
            if (rstn == 1'b0) begin
               // op:_out_data/OP12
               out_data_4 <= 32'd0000000000;
            end
            else begin
               case (read_en_1d) 

                  1'b1:                   begin
                     // op:_out_data/OP81
                     out_data_4 <= w_data_4;
                  end
                  
                  1'b0:                   begin
                     if (read_en_2d) begin
                        // op:_out_data/OP65
                        out_data_4 <= w_data_12;
                     end
                     else begin
                        if (read_en_3d) begin
                           // op:_out_data/OP49
                           out_data_4 <= w_data_20;
                        end
                        else begin
                           if (read_en_4d) begin
                              // op:_out_data/OP33
                              out_data_4 <= w_data_28;
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_out_data_5
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_out_data_5
         // at: in_buff.h:210:17
         // at: in_buff.h:215:17
         // at: in_buff.h:221:17
         // at: in_buff.h:227:17
         // at: in_buff.h:233:17
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_5
            if (rstn == 1'b0) begin
               // op:_out_data/OP13
               out_data_5 <= 32'd0000000000;
            end
            else begin
               case (read_en_1d) 

                  1'b1:                   begin
                     // op:_out_data/OP83
                     out_data_5 <= w_data_5;
                  end
                  
                  1'b0:                   begin
                     if (read_en_2d) begin
                        // op:_out_data/OP67
                        out_data_5 <= w_data_13;
                     end
                     else begin
                        if (read_en_3d) begin
                           // op:_out_data/OP51
                           out_data_5 <= w_data_21;
                        end
                        else begin
                           if (read_en_4d) begin
                              // op:_out_data/OP35
                              out_data_5 <= w_data_29;
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_out_data_6
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_out_data_6
         // at: in_buff.h:210:17
         // at: in_buff.h:215:17
         // at: in_buff.h:221:17
         // at: in_buff.h:227:17
         // at: in_buff.h:233:17
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_6
            if (rstn == 1'b0) begin
               // op:_out_data/OP14
               out_data_6 <= 32'd0000000000;
            end
            else begin
               case (read_en_1d) 

                  1'b1:                   begin
                     // op:_out_data/OP85
                     out_data_6 <= w_data_6;
                  end
                  
                  1'b0:                   begin
                     if (read_en_2d) begin
                        // op:_out_data/OP69
                        out_data_6 <= w_data_14;
                     end
                     else begin
                        if (read_en_3d) begin
                           // op:_out_data/OP53
                           out_data_6 <= w_data_22;
                        end
                        else begin
                           if (read_en_4d) begin
                              // op:_out_data/OP37
                              out_data_6 <= w_data_30;
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_out_data_7
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_out_data_7
         // at: in_buff.h:210:17
         // at: in_buff.h:215:17
         // at: in_buff.h:221:17
         // at: in_buff.h:227:17
         // at: in_buff.h:233:17
         always @(posedge clk or negedge rstn)
          begin :drive_out_data_7
            if (rstn == 1'b0) begin
               // op:_out_data/OP15
               out_data_7 <= 32'd0000000000;
            end
            else begin
               case (read_en_1d) 

                  1'b1:                   begin
                     // op:_out_data/OP87
                     out_data_7 <= w_data_7;
                  end
                  
                  1'b0:                   begin
                     if (read_en_2d) begin
                        // op:_out_data/OP71
                        out_data_7 <= w_data_15;
                     end
                     else begin
                        if (read_en_3d) begin
                           // op:_out_data/OP55
                           out_data_7 <= w_data_23;
                        end
                        else begin
                           if (read_en_4d) begin
                              // op:_out_data/OP39
                              out_data_7 <= w_data_31;
                           end
                        end
                     end
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_rd_ptr
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_rd_ptr
         // at: in_buff.h:201:5
         // at: in_buff.h:89:22
         assign rd_ptr = tmp_rd_ptr[4:2];

         // rtl_process:in_buff/drive_tmp_rd_ptr
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_tmp_rd_ptr
         // at: in_buff.h:194:7
         // at: in_buff.h:196:7
         // at: in_buff.h:201:14
         // at: in_buff.h:172:9
         always @(posedge clk or negedge rstn)
          begin :drive_tmp_rd_ptr
            if (rstn == 1'b0) begin
               // op:_tmp_rd_ptr/OP88
               tmp_rd_ptr <= 5'd00;
            end
            else begin
               // op:_tmp_rd_ptr/OP94
               tmp_rd_ptr <= in_buff_MuxAdd2i1u5u5u1_4_3_out1;
            end
         end

         // rtl_instance:in_buff/in_buff_OrReduction_3U_1U_4_2
         // Resource=in_buff_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:195:14
         assign in_buff_OrReduction_3U_1U_4_2_out1 = (|fifo_cnt);

         // rtl_instance:in_buff/in_buff_MuxAdd2i1u5u5u1_4
         always @(tmp_rd_ptr or in_buff_OrReduction_3U_1U_4_2_out1)
          begin :in_buff_MuxAdd2i1u5u5u1_4_3
            if (in_buff_OrReduction_3U_1U_4_2_out1) begin
               in_buff_MuxAdd2i1u5u5u1_4_3_out1 = tmp_rd_ptr + 5'd01;
            end
            else begin
               in_buff_MuxAdd2i1u5u5u1_4_3_out1 = tmp_rd_ptr;
            end
         end

         // rtl_process:in_buff/drive_wr_ptr
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_wr_ptr
         // at: in_buff.h:186:7
         // at: in_buff.h:188:7
         // at: in_buff.h:80:12
         always @(posedge clk or negedge rstn)
          begin :drive_wr_ptr
            if (rstn == 1'b0) begin
               // op:_wr_ptr/OP211
               wr_ptr <= 3'd0;
            end
            else begin
               // op:_wr_ptr/OP219
               wr_ptr <= in_buff_MuxAdd2i1u3u3u1_4_16_out1;
            end
         end

         // rtl_instance:in_buff/in_buff_Nei7u3_4_14
         // Resource=in_buff_Nei7u3_4, Function=ne : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:187:51
         assign in_buff_Nei7u3_4_14_out1 = fifo_cnt != 3'd7;

         // rtl_instance:in_buff/in_buff_And_1Ux1U_1U_4_15
         // Resource=in_buff_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:187:32
         assign in_buff_And_1Ux1U_1U_4_15_out1 = in_buff_Nei7u3_4_14_out1 & in_data_valid;

         // rtl_instance:in_buff/in_buff_MuxAdd2i1u3u3u1_4
         always @(wr_ptr or in_buff_And_1Ux1U_1U_4_15_out1)
          begin :in_buff_MuxAdd2i1u3u3u1_4_16
            if (in_buff_And_1Ux1U_1U_4_15_out1) begin
               in_buff_MuxAdd2i1u3u3u1_4_16_out1 = wr_ptr + 3'd1;
            end
            else begin
               in_buff_MuxAdd2i1u3u3u1_4_16_out1 = wr_ptr;
            end
         end

         // rtl_process:in_buff/drive_read_en
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_read_en
         // at: in_buff.h:47:20
         // at: in_buff.h:180:5
         always @(posedge clk)
          begin :drive_read_en
            // op:_read_en/OP154
            read_en <= in_buff_Eqi3u2_1_4_out1;
         end

         // rtl_instance:in_buff/in_buff_Eqi3u2_1_4
         // Resource=in_buff_Eqi3u2_1, Function=eq : Inputs=2 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:172:26
         assign in_buff_Eqi3u2_1_4_out1 = tmp_rd_ptr[1:0] == 2'd3;

         // rtl_process:in_buff/drive_fifo_cnt
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_fifo_cnt
         // at: in_buff.h:195:14
         // at: in_buff.h:154:7
         // at: in_buff.h:158:7
         // at: in_buff.h:88:52
         // at: in_buff.h:187:35
         // at: in_buff.h:79:57
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_cnt
            if (rstn == 1'b0) begin
               // op:_fifo_cnt/OP155
               fifo_cnt <= 3'd0;
            end
            else begin
               // op:_fifo_cnt/OP166
               fifo_cnt <= in_buff_N_Mux_3_2_20_4_9_out1;
            end
         end

         // rtl_instance:in_buff/in_buff_OrReduction_3U_1U_4_5
         // Resource=in_buff_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:157:32
         assign in_buff_OrReduction_3U_1U_4_5_out1 = (|fifo_cnt);

         // rtl_instance:in_buff/in_buff_And_1Ux1U_1U_4_6
         // Resource=in_buff_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:157:32
         assign in_buff_And_1Ux1U_1U_4_6_out1 = in_buff_OrReduction_3U_1U_4_5_out1 & in_buff_Eqi3u2_1_4_out1;

         // rtl_instance:in_buff/in_buff_Add2i1u3_4_7
         // Resource=in_buff_Add2i1u3_4, Function=add : Inputs=3 Outputs=3
         // Implements 1 operation(s)
         // at: in_buff.h:156:34
         assign in_buff_Add2i1u3_4_7_out1 = fifo_cnt + 3'd1;

         // rtl_instance:in_buff/in_buff_MuxSubi1u3u3u1_4
         always @(fifo_cnt or in_buff_And_1Ux1U_1U_4_6_out1)
          begin :in_buff_MuxSubi1u3u3u1_4_8
            if (in_buff_And_1Ux1U_1U_4_6_out1) begin
               in_buff_MuxSubi1u3u3u1_4_8_out1 = fifo_cnt - 3'd1;
            end
            else begin
               in_buff_MuxSubi1u3u3u1_4_8_out1 = fifo_cnt;
            end
         end

         // rtl_instance:in_buff/in_buff_N_Mux_3_2_20_4
         always @(in_data_valid or in_buff_Add2i1u3_4_7_out1 or in_buff_MuxSubi1u3u3u1_4_8_out1)
          begin :in_buff_N_Mux_3_2_20_4_9
            if (in_data_valid) begin
               in_buff_N_Mux_3_2_20_4_9_out1 = in_buff_Add2i1u3_4_7_out1;
            end
            else begin
               in_buff_N_Mux_3_2_20_4_9_out1 = in_buff_MuxSubi1u3u3u1_4_8_out1;
            end
         end

         // rtl_process:in_buff/drive_w_data_0
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_0
         // at: in_buff.h:215:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_0
            // op:_w_data/OP100
            w_data_0 <= out_tmp[31:0];
         end

         // rtl_process:in_buff/drive_w_data_1
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_1
         // at: in_buff.h:215:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_1
            // op:_w_data/OP101
            w_data_1 <= out_tmp[63:32];
         end

         // rtl_process:in_buff/drive_w_data_2
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_2
         // at: in_buff.h:215:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_2
            // op:_w_data/OP102
            w_data_2 <= out_tmp[95:64];
         end

         // rtl_process:in_buff/drive_w_data_3
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_3
         // at: in_buff.h:215:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_3
            // op:_w_data/OP103
            w_data_3 <= out_tmp[127:96];
         end

         // rtl_process:in_buff/drive_w_data_4
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_4
         // at: in_buff.h:215:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_4
            // op:_w_data/OP104
            w_data_4 <= out_tmp[159:128];
         end

         // rtl_process:in_buff/drive_w_data_5
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_5
         // at: in_buff.h:215:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_5
            // op:_w_data/OP105
            w_data_5 <= out_tmp[191:160];
         end

         // rtl_process:in_buff/drive_w_data_6
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_6
         // at: in_buff.h:215:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_6
            // op:_w_data/OP106
            w_data_6 <= out_tmp[223:192];
         end

         // rtl_process:in_buff/drive_w_data_7
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_7
         // at: in_buff.h:215:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_7
            // op:_w_data/OP107
            w_data_7 <= out_tmp[255:224];
         end

         // rtl_process:in_buff/drive_w_data_8
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_8
         // at: in_buff.h:221:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_8
            // op:_w_data/OP108
            w_data_8 <= out_tmp[287:256];
         end

         // rtl_process:in_buff/drive_w_data_9
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_9
         // at: in_buff.h:221:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_9
            // op:_w_data/OP109
            w_data_9 <= out_tmp[319:288];
         end

         // rtl_process:in_buff/drive_w_data_10
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_10
         // at: in_buff.h:221:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_10
            // op:_w_data/OP110
            w_data_10 <= out_tmp[351:320];
         end

         // rtl_process:in_buff/drive_w_data_11
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_11
         // at: in_buff.h:221:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_11
            // op:_w_data/OP111
            w_data_11 <= out_tmp[383:352];
         end

         // rtl_process:in_buff/drive_w_data_12
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_12
         // at: in_buff.h:221:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_12
            // op:_w_data/OP112
            w_data_12 <= out_tmp[415:384];
         end

         // rtl_process:in_buff/drive_w_data_13
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_13
         // at: in_buff.h:221:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_13
            // op:_w_data/OP113
            w_data_13 <= out_tmp[447:416];
         end

         // rtl_process:in_buff/drive_w_data_14
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_14
         // at: in_buff.h:221:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_14
            // op:_w_data/OP114
            w_data_14 <= out_tmp[479:448];
         end

         // rtl_process:in_buff/drive_w_data_15
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_15
         // at: in_buff.h:221:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_15
            // op:_w_data/OP115
            w_data_15 <= out_tmp[511:480];
         end

         // rtl_process:in_buff/drive_w_data_16
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_16
         // at: in_buff.h:227:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_16
            // op:_w_data/OP116
            w_data_16 <= out_tmp[543:512];
         end

         // rtl_process:in_buff/drive_w_data_17
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_17
         // at: in_buff.h:227:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_17
            // op:_w_data/OP117
            w_data_17 <= out_tmp[575:544];
         end

         // rtl_process:in_buff/drive_w_data_18
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_18
         // at: in_buff.h:227:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_18
            // op:_w_data/OP118
            w_data_18 <= out_tmp[607:576];
         end

         // rtl_process:in_buff/drive_w_data_19
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_19
         // at: in_buff.h:227:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_19
            // op:_w_data/OP119
            w_data_19 <= out_tmp[639:608];
         end

         // rtl_process:in_buff/drive_w_data_20
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_20
         // at: in_buff.h:227:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_20
            // op:_w_data/OP120
            w_data_20 <= out_tmp[671:640];
         end

         // rtl_process:in_buff/drive_w_data_21
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_21
         // at: in_buff.h:227:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_21
            // op:_w_data/OP121
            w_data_21 <= out_tmp[703:672];
         end

         // rtl_process:in_buff/drive_w_data_22
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_22
         // at: in_buff.h:227:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_22
            // op:_w_data/OP122
            w_data_22 <= out_tmp[735:704];
         end

         // rtl_process:in_buff/drive_w_data_23
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_23
         // at: in_buff.h:227:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_23
            // op:_w_data/OP123
            w_data_23 <= out_tmp[767:736];
         end

         // rtl_process:in_buff/drive_w_data_24
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_24
         // at: in_buff.h:233:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_24
            // op:_w_data/OP124
            w_data_24 <= out_tmp[799:768];
         end

         // rtl_process:in_buff/drive_w_data_25
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_25
         // at: in_buff.h:233:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_25
            // op:_w_data/OP125
            w_data_25 <= out_tmp[831:800];
         end

         // rtl_process:in_buff/drive_w_data_26
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_26
         // at: in_buff.h:233:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_26
            // op:_w_data/OP126
            w_data_26 <= out_tmp[863:832];
         end

         // rtl_process:in_buff/drive_w_data_27
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_27
         // at: in_buff.h:233:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_27
            // op:_w_data/OP127
            w_data_27 <= out_tmp[895:864];
         end

         // rtl_process:in_buff/drive_w_data_28
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_28
         // at: in_buff.h:233:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_28
            // op:_w_data/OP128
            w_data_28 <= out_tmp[927:896];
         end

         // rtl_process:in_buff/drive_w_data_29
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_29
         // at: in_buff.h:233:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_29
            // op:_w_data/OP129
            w_data_29 <= out_tmp[959:928];
         end

         // rtl_process:in_buff/drive_w_data_30
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_30
         // at: in_buff.h:233:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_30
            // op:_w_data/OP130
            w_data_30 <= out_tmp[991:960];
         end

         // rtl_process:in_buff/drive_w_data_31
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_w_data_31
         // at: in_buff.h:233:21
         // at: in_buff.h:97:15
         always @(posedge clk)
          begin :drive_w_data_31
            // op:_w_data/OP131
            w_data_31 <= out_tmp[1023:992];
         end

         // rtl_process:in_buff/drive_out_tmp
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_out_tmp
         // at: in_buff.h:97:25
         // at: in_buff.h:89:15
         always @(posedge clk)
          begin :drive_out_tmp
            case (in_buff_And_1Ux1U_1U_4_12_out1) 

               1'b1:                begin
                  // op:_fifo_read/OP194
                  out_tmp <= in_buff_N_MuxB_1024_8_22_4_13_out1;
               end
               
               1'b0:                begin
               end
               
            endcase

         end

         // rtl_instance:in_buff/in_buff_OrReduction_3U_1U_4_10
         // Resource=in_buff_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:88:49
         assign in_buff_OrReduction_3U_1U_4_10_out1 = (|fifo_cnt);

         // rtl_instance:in_buff/in_buff_And_1Ux1U_1U_4_11
         // Resource=in_buff_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:88:28
         assign in_buff_And_1Ux1U_1U_4_11_out1 = enable & in_buff_Eqi3u2_1_4_out1;

         // rtl_instance:in_buff/in_buff_And_1Ux1U_1U_4_12
         // Resource=in_buff_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:88:49
         assign in_buff_And_1Ux1U_1U_4_12_out1 = in_buff_And_1Ux1U_1U_4_11_out1 & in_buff_OrReduction_3U_1U_4_10_out1;

         // rtl_instance:in_buff/in_buff_N_MuxB_1024_8_22_4
         always @(rd_ptr or fifo_0 or fifo_1 or fifo_2 or fifo_3 or fifo_4 or fifo_5 or fifo_6 or fifo_7)
          begin :in_buff_N_MuxB_1024_8_22_4_13
            case (rd_ptr) 

               3'd0:                begin
                  in_buff_N_MuxB_1024_8_22_4_13_out1 = fifo_0;
               end
               
               3'd1:                begin
                  in_buff_N_MuxB_1024_8_22_4_13_out1 = fifo_1;
               end
               
               3'd2:                begin
                  in_buff_N_MuxB_1024_8_22_4_13_out1 = fifo_2;
               end
               
               3'd3:                begin
                  in_buff_N_MuxB_1024_8_22_4_13_out1 = fifo_3;
               end
               
               3'd4:                begin
                  in_buff_N_MuxB_1024_8_22_4_13_out1 = fifo_4;
               end
               
               3'd5:                begin
                  in_buff_N_MuxB_1024_8_22_4_13_out1 = fifo_5;
               end
               
               3'd6:                begin
                  in_buff_N_MuxB_1024_8_22_4_13_out1 = fifo_6;
               end
               
               default:                begin
                  in_buff_N_MuxB_1024_8_22_4_13_out1 = fifo_7;
               end
               
            endcase

         end

         // rtl_process:in_buff/drive_fifo_0
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_0
         // at: in_buff.h:89:21
         // at: in_buff.h:76:11
         // at: in_buff.h:80:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_0
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP262
               fifo_0 <= 1024'd0;
            end
            else begin
               case (in_buff_And_1Ux1U_1U_4_19_out1 & in_buff_Not_1U_1U_4_28_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP295
                     fifo_0 <= concate_in_data;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_fifo_1
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_1
         // at: in_buff.h:89:21
         // at: in_buff.h:76:11
         // at: in_buff.h:80:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_1
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP263
               fifo_1 <= 1024'd0;
            end
            else begin
               case (in_buff_And_1Ux1U_1U_4_19_out1 & in_buff_Eqi1u3_4_27_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP292
                     fifo_1 <= concate_in_data;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_fifo_2
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_2
         // at: in_buff.h:89:21
         // at: in_buff.h:76:11
         // at: in_buff.h:80:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_2
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP264
               fifo_2 <= 1024'd0;
            end
            else begin
               case (in_buff_And_1Ux1U_1U_4_19_out1 & in_buff_Eqi2u3_4_26_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP290
                     fifo_2 <= concate_in_data;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_fifo_3
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_3
         // at: in_buff.h:89:21
         // at: in_buff.h:76:11
         // at: in_buff.h:80:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_3
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP265
               fifo_3 <= 1024'd0;
            end
            else begin
               case (in_buff_And_1Ux1U_1U_4_19_out1 & in_buff_Eqi3u3_4_25_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP288
                     fifo_3 <= concate_in_data;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_fifo_4
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_4
         // at: in_buff.h:89:21
         // at: in_buff.h:76:11
         // at: in_buff.h:80:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_4
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP266
               fifo_4 <= 1024'd0;
            end
            else begin
               case (in_buff_And_1Ux1U_1U_4_19_out1 & in_buff_Eqi4u3_4_24_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP286
                     fifo_4 <= concate_in_data;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_fifo_5
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_5
         // at: in_buff.h:89:21
         // at: in_buff.h:76:11
         // at: in_buff.h:80:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_5
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP267
               fifo_5 <= 1024'd0;
            end
            else begin
               case (in_buff_And_1Ux1U_1U_4_19_out1 & in_buff_Eqi5u3_4_23_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP284
                     fifo_5 <= concate_in_data;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_fifo_6
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_6
         // at: in_buff.h:89:21
         // at: in_buff.h:76:11
         // at: in_buff.h:80:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_6
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP268
               fifo_6 <= 1024'd0;
            end
            else begin
               case (in_buff_And_1Ux1U_1U_4_19_out1 & in_buff_Eqi6u3_4_22_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP282
                     fifo_6 <= concate_in_data;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_process:in_buff/drive_fifo_7
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_fifo_7
         // at: in_buff.h:89:21
         // at: in_buff.h:76:11
         // at: in_buff.h:80:11
         always @(posedge clk or negedge rstn)
          begin :drive_fifo_7
            if (rstn == 1'b0) begin
               // op:_fifo_write/OP269
               fifo_7 <= 1024'd0;
            end
            else begin
               case (in_buff_And_1Ux1U_1U_4_19_out1 & in_buff_Eqi7u3_4_21_out1) 

                  1'b1:                   begin
                     // op:_fifo_write/OP280
                     fifo_7 <= concate_in_data;
                  end
                  
                  1'b0:                   begin
                  end
                  
               endcase

            end
         end

         // rtl_instance:in_buff/in_buff_And_1Ux1U_1U_4_17
         // Resource=in_buff_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:79:33
         assign in_buff_And_1Ux1U_1U_4_17_out1 = enable & in_data_valid;

         // rtl_instance:in_buff/in_buff_Nei7u3_4_18
         // Resource=in_buff_Nei7u3_4, Function=ne : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:79:73
         assign in_buff_Nei7u3_4_18_out1 = fifo_cnt != 3'd7;

         // rtl_instance:in_buff/in_buff_And_1Ux1U_1U_4_19
         // Resource=in_buff_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:79:54
         assign in_buff_And_1Ux1U_1U_4_19_out1 = in_buff_Nei7u3_4_18_out1 & in_buff_And_1Ux1U_1U_4_17_out1;

         // rtl_instance:in_buff/in_buff_OrReduction_3U_1U_4_20
         // Resource=in_buff_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_OrReduction_3U_1U_4_20_out1 = (|wr_ptr);

         // rtl_instance:in_buff/in_buff_Eqi7u3_4_21
         // Resource=in_buff_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_Eqi7u3_4_21_out1 = wr_ptr == 3'd7;

         // rtl_instance:in_buff/in_buff_Eqi6u3_4_22
         // Resource=in_buff_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_Eqi6u3_4_22_out1 = wr_ptr == 3'd6;

         // rtl_instance:in_buff/in_buff_Eqi5u3_4_23
         // Resource=in_buff_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_Eqi5u3_4_23_out1 = wr_ptr == 3'd5;

         // rtl_instance:in_buff/in_buff_Eqi4u3_4_24
         // Resource=in_buff_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_Eqi4u3_4_24_out1 = wr_ptr == 3'd4;

         // rtl_instance:in_buff/in_buff_Eqi3u3_4_25
         // Resource=in_buff_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_Eqi3u3_4_25_out1 = wr_ptr == 3'd3;

         // rtl_instance:in_buff/in_buff_Eqi2u3_4_26
         // Resource=in_buff_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_Eqi2u3_4_26_out1 = wr_ptr == 3'd2;

         // rtl_instance:in_buff/in_buff_Eqi1u3_4_27
         // Resource=in_buff_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_Eqi1u3_4_27_out1 = wr_ptr == 3'd1;

         // rtl_instance:in_buff/in_buff_Not_1U_1U_4_28
         // Resource=in_buff_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: in_buff.h:80:11
         assign in_buff_Not_1U_1U_4_28_out1 = !in_buff_OrReduction_3U_1U_4_20_out1;

         // rtl_process:in_buff/drive_concate_in_data
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_concate_in_data
         // at: in_buff.h:67:7
         // at: in_buff.h:62:7
         // at: in_buff.h:80:29
         always @(in_data_valid or in_data_0 or in_data_1 or in_data_2 or in_data_3 or in_data_4 or in_data_5 or in_data_6 or in_data_7 or in_data_8 or in_data_9 or in_data_10 or in_data_11 or in_data_12 or in_data_13 or in_data_14 or in_data_15 or in_data_16 or in_data_17 or in_data_18 or in_data_19 or in_data_20 or in_data_21 or in_data_22 or in_data_23 or in_data_24 or in_data_25 or in_data_26 or in_data_27 or in_data_28 or in_data_29 or in_data_30 or in_data_31)
          begin :drive_concate_in_data
            if (in_data_valid) begin
               // op:_in_data_concate/OP261
               concate_in_data = {in_data_31, {in_data_30, {in_data_29, {in_data_28, {in_data_27, {in_data_26, {in_data_25, {in_data_24, {in_data_23, {in_data_22, {in_data_21, {in_data_20, {in_data_19, {in_data_18, {in_data_17, {in_data_16, {in_data_15, {in_data_14, {in_data_13, {in_data_12, {in_data_11, {in_data_10, {in_data_9, {in_data_8, {in_data_7, {in_data_6, {in_data_5, {in_data_4, {in_data_3, {in_data_2, {in_data_1, in_data_0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
            end
            else begin
               // op:_in_data_concate/OP228
               concate_in_data = 1024'd0;
            end
         end

         // rtl_process:in_buff/drive_read_en_4d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_read_en_4d
         // at: in_buff.h:243:65
         // at: in_buff.h:230:14
         // at: in_buff.h:44:7
         // at: in_buff.h:50:7
         always @(posedge clk or negedge rstn)
          begin :drive_read_en_4d
            if (rstn == 1'b0) begin
               // op:_delay/OP135
               read_en_4d <= 1'd0;
            end
            else begin
               // op:_delay/OP143
               read_en_4d <= read_en_3d;
            end
         end

         // rtl_process:in_buff/drive_read_en_3d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_read_en_3d
         // at: in_buff.h:49:7
         // at: in_buff.h:43:7
         always @(posedge clk or negedge rstn)
          begin :drive_read_en_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP134
               read_en_3d <= 1'd0;
            end
            else begin
               // op:_delay/OP144
               read_en_3d <= read_en_2d;
            end
         end

         // rtl_process:in_buff/drive_read_en_2d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_read_en_2d
         // at: in_buff.h:48:7
         // at: in_buff.h:42:7
         always @(posedge clk or negedge rstn)
          begin :drive_read_en_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP133
               read_en_2d <= 1'd0;
            end
            else begin
               // op:_delay/OP145
               read_en_2d <= read_en_1d;
            end
         end

         // rtl_process:in_buff/drive_read_en_1d
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_read_en_1d
         // at: in_buff.h:47:7
         // at: in_buff.h:41:7
         always @(posedge clk or negedge rstn)
          begin :drive_read_en_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP132
               read_en_1d <= 1'd0;
            end
            else begin
               // op:_delay/OP146
               read_en_1d <= read_en;
            end
         end


endmodule


