// Generated by stratus_hls 19.10-p100  (91500.011111)
// Sun Jan 17 18:55:31 2021
// from bias_add.cpp
#include "bias_add_rtl.h"

struct bias_add;
bias_add::bias_add(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rstn("rstn")
    ,enable("enable")
    ,src_valid("src_valid")
    ,src_0("src_0")
    ,src_1("src_1")
    ,src_2("src_2")
    ,src_3("src_3")
    ,src_4("src_4")
    ,src_5("src_5")
    ,src_6("src_6")
    ,src_7("src_7")
    ,bias_data("bias_data")
    ,dst_valid("dst_valid")
    ,dst_0("dst_0")
    ,dst_1("dst_1")
    ,dst_2("dst_2")
    ,dst_3("dst_3")
    ,dst_4("dst_4")
    ,dst_5("dst_5")
    ,dst_6("dst_6")
    ,dst_7("dst_7")
    ,r_src_valid("r_src_valid")
    ,bias_add_Add2i1u2_4_2_out1("bias_add_Add2i1u2_4_2_out1")
    ,bias_add_N_Mux_2_2_3_4_3_out1("bias_add_N_Mux_2_2_3_4_3_out1")
    ,bias_add_N_Mux_16_2_4_1_19_in3("bias_add_N_Mux_16_2_4_1_19_in3")
    ,bias_add_N_Mux_16_2_4_1_18_in3("bias_add_N_Mux_16_2_4_1_18_in3")
    ,bias_add_N_Mux_16_2_4_1_17_in3("bias_add_N_Mux_16_2_4_1_17_in3")
    ,bias_add_N_Mux_16_2_4_1_16_in3("bias_add_N_Mux_16_2_4_1_16_in3")
    ,bias_add_N_Mux_16_2_4_1_15_in3("bias_add_N_Mux_16_2_4_1_15_in3")
    ,bias_add_N_Mux_16_2_4_1_14_in3("bias_add_N_Mux_16_2_4_1_14_in3")
    ,bias_add_N_Mux_16_2_4_1_13_in3("bias_add_N_Mux_16_2_4_1_13_in3")
    ,bias_add_N_Mux_16_3_6_1_12_out1("bias_add_N_Mux_16_3_6_1_12_out1")
    ,bias_add_N_Mux_16_3_6_1_12_in2("bias_add_N_Mux_16_3_6_1_12_in2")
    ,bias_add_N_Mux_16_3_6_1_12_in3("bias_add_N_Mux_16_3_6_1_12_in3")
    ,bias_add_N_Mux_16_3_6_1_12_in4("bias_add_N_Mux_16_3_6_1_12_in4")
    ,bias_add_N_Mux_16_3_6_1_11_out1("bias_add_N_Mux_16_3_6_1_11_out1")
    ,bias_add_N_Mux_16_3_6_1_11_in2("bias_add_N_Mux_16_3_6_1_11_in2")
    ,bias_add_N_Mux_16_3_6_1_11_in3("bias_add_N_Mux_16_3_6_1_11_in3")
    ,bias_add_N_Mux_16_3_6_1_11_in4("bias_add_N_Mux_16_3_6_1_11_in4")
    ,bias_add_N_Mux_16_3_6_1_10_out1("bias_add_N_Mux_16_3_6_1_10_out1")
    ,bias_add_N_Mux_16_3_6_1_10_in2("bias_add_N_Mux_16_3_6_1_10_in2")
    ,bias_add_N_Mux_16_3_6_1_10_in3("bias_add_N_Mux_16_3_6_1_10_in3")
    ,bias_add_N_Mux_16_3_6_1_10_in4("bias_add_N_Mux_16_3_6_1_10_in4")
    ,bias_add_N_Mux_16_3_6_1_9_out1("bias_add_N_Mux_16_3_6_1_9_out1")
    ,bias_add_N_Mux_16_3_6_1_9_in2("bias_add_N_Mux_16_3_6_1_9_in2")
    ,bias_add_N_Mux_16_3_6_1_9_in3("bias_add_N_Mux_16_3_6_1_9_in3")
    ,bias_add_N_Mux_16_3_6_1_9_in4("bias_add_N_Mux_16_3_6_1_9_in4")
    ,bias_add_N_Mux_16_3_6_1_8_out1("bias_add_N_Mux_16_3_6_1_8_out1")
    ,bias_add_N_Mux_16_3_6_1_8_in2("bias_add_N_Mux_16_3_6_1_8_in2")
    ,bias_add_N_Mux_16_3_6_1_8_in3("bias_add_N_Mux_16_3_6_1_8_in3")
    ,bias_add_N_Mux_16_3_6_1_8_in4("bias_add_N_Mux_16_3_6_1_8_in4")
    ,bias_add_N_Mux_16_3_6_1_7_out1("bias_add_N_Mux_16_3_6_1_7_out1")
    ,bias_add_N_Mux_16_3_6_1_7_in2("bias_add_N_Mux_16_3_6_1_7_in2")
    ,bias_add_N_Mux_16_3_6_1_7_in3("bias_add_N_Mux_16_3_6_1_7_in3")
    ,bias_add_N_Mux_16_3_6_1_7_in4("bias_add_N_Mux_16_3_6_1_7_in4")
    ,bias_add_N_Mux_16_3_6_1_6_out1("bias_add_N_Mux_16_3_6_1_6_out1")
    ,bias_add_N_Mux_16_3_6_1_6_in2("bias_add_N_Mux_16_3_6_1_6_in2")
    ,bias_add_N_Mux_16_3_6_1_6_in3("bias_add_N_Mux_16_3_6_1_6_in3")
    ,bias_add_N_Mux_16_3_6_1_6_in4("bias_add_N_Mux_16_3_6_1_6_in4")
    ,bias_add_N_Mux_16_3_6_1_5_out1("bias_add_N_Mux_16_3_6_1_5_out1")
    ,bias_add_N_Mux_16_3_6_1_5_in2("bias_add_N_Mux_16_3_6_1_5_in2")
    ,bias_add_N_Mux_16_3_6_1_5_in3("bias_add_N_Mux_16_3_6_1_5_in3")
    ,bias_add_N_Mux_16_3_6_1_5_in4("bias_add_N_Mux_16_3_6_1_5_in4")
    ,r_bias_data("r_bias_data")
    ,bias_add_OrReduction_2U_1U_4_4_out1("bias_add_OrReduction_2U_1U_4_4_out1")
    ,bias_mux_cnt("bias_mux_cnt")
    ,bias_add_N_Mux_16_2_4_1_13_out1("bias_add_N_Mux_16_2_4_1_13_out1")
    ,r_src_7("r_src_7")
    ,bias_add_N_Mux_16_2_4_1_14_out1("bias_add_N_Mux_16_2_4_1_14_out1")
    ,r_src_6("r_src_6")
    ,bias_add_N_Mux_16_2_4_1_15_out1("bias_add_N_Mux_16_2_4_1_15_out1")
    ,r_src_5("r_src_5")
    ,bias_add_N_Mux_16_2_4_1_16_out1("bias_add_N_Mux_16_2_4_1_16_out1")
    ,r_src_4("r_src_4")
    ,bias_add_N_Mux_16_2_4_1_17_out1("bias_add_N_Mux_16_2_4_1_17_out1")
    ,r_src_3("r_src_3")
    ,bias_add_N_Mux_16_2_4_1_18_out1("bias_add_N_Mux_16_2_4_1_18_out1")
    ,r_src_2("r_src_2")
    ,bias_add_N_Mux_16_2_4_1_19_out1("bias_add_N_Mux_16_2_4_1_19_out1")
    ,r_src_1("r_src_1")
    ,bias_add_N_Mux_16_2_4_1_20_out1("bias_add_N_Mux_16_2_4_1_20_out1")
    ,r_src_0("r_src_0")
    ,bias_add_Add_32Ux16S_32S_4_28_out1("bias_add_Add_32Ux16S_32S_4_28_out1")
    ,bias_add_Add_32Ux16S_32S_4_27_out1("bias_add_Add_32Ux16S_32S_4_27_out1")
    ,bias_add_Add_32Ux16S_32S_4_26_out1("bias_add_Add_32Ux16S_32S_4_26_out1")
    ,bias_add_Add_32Ux16S_32S_4_25_out1("bias_add_Add_32Ux16S_32S_4_25_out1")
    ,bias_add_Add_32Ux16S_32S_4_24_out1("bias_add_Add_32Ux16S_32S_4_24_out1")
    ,bias_add_Add_32Ux16S_32S_4_23_out1("bias_add_Add_32Ux16S_32S_4_23_out1")
    ,bias_add_Add_32Ux16S_32S_4_22_out1("bias_add_Add_32Ux16S_32S_4_22_out1")
    ,bias_add_Add_32Ux16S_32S_4_21_out1("bias_add_Add_32Ux16S_32S_4_21_out1")
    ,add_result_7("add_result_7")
    ,add_result_6("add_result_6")
    ,add_result_5("add_result_5")
    ,add_result_4("add_result_4")
    ,add_result_3("add_result_3")
    ,add_result_2("add_result_2")
    ,add_result_1("add_result_1")
    ,add_result_0("add_result_0")
    ,r2_src_valid("r2_src_valid")
    ,bias_add_N_Muxb_1_2_2_4_1_out1("bias_add_N_Muxb_1_2_2_4_1_out1")
{
  SC_METHOD(drive_dst_valid);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bias_add_N_Muxb_1_2_2_4_1);
  sensitive << ( enable );
  sensitive << ( r2_src_valid );
  sensitive << ( src_valid );

  SC_METHOD(drive_dst_0);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_dst_1);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_dst_2);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_dst_3);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_dst_4);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_dst_5);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_dst_6);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_dst_7);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_add_result_0);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_add_result_1);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_add_result_2);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_add_result_3);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_add_result_4);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_add_result_5);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_add_result_6);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_add_result_7);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bias_add_Add_32Ux16S_32S_4_21);
  sensitive << ( bias_add_N_Mux_16_2_4_1_20_out1 );
  sensitive << ( r_src_0 );

  SC_METHOD(bias_add_Add_32Ux16S_32S_4_22);
  sensitive << ( bias_add_N_Mux_16_2_4_1_19_out1 );
  sensitive << ( r_src_1 );

  SC_METHOD(bias_add_Add_32Ux16S_32S_4_23);
  sensitive << ( bias_add_N_Mux_16_2_4_1_18_out1 );
  sensitive << ( r_src_2 );

  SC_METHOD(bias_add_Add_32Ux16S_32S_4_24);
  sensitive << ( bias_add_N_Mux_16_2_4_1_17_out1 );
  sensitive << ( r_src_3 );

  SC_METHOD(bias_add_Add_32Ux16S_32S_4_25);
  sensitive << ( bias_add_N_Mux_16_2_4_1_16_out1 );
  sensitive << ( r_src_4 );

  SC_METHOD(bias_add_Add_32Ux16S_32S_4_26);
  sensitive << ( bias_add_N_Mux_16_2_4_1_15_out1 );
  sensitive << ( r_src_5 );

  SC_METHOD(bias_add_Add_32Ux16S_32S_4_27);
  sensitive << ( bias_add_N_Mux_16_2_4_1_14_out1 );
  sensitive << ( r_src_6 );

  SC_METHOD(bias_add_Add_32Ux16S_32S_4_28);
  sensitive << ( bias_add_N_Mux_16_2_4_1_13_out1 );
  sensitive << ( r_src_7 );

  SC_METHOD(bias_add_OrReduction_2U_1U_4_4);
  sensitive << ( bias_mux_cnt );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_5_in4);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_5_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_5_in2);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_3_6_1_5);
  sensitive << ( bias_mux_cnt );
  sensitive << ( bias_add_N_Mux_16_3_6_1_5_in4 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_5_in2 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_5_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_6_in4);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_6_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_6_in2);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_3_6_1_6);
  sensitive << ( bias_mux_cnt );
  sensitive << ( bias_add_N_Mux_16_3_6_1_6_in4 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_6_in2 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_6_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_7_in4);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_7_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_7_in2);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_3_6_1_7);
  sensitive << ( bias_mux_cnt );
  sensitive << ( bias_add_N_Mux_16_3_6_1_7_in4 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_7_in2 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_7_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_8_in4);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_8_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_8_in2);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_3_6_1_8);
  sensitive << ( bias_mux_cnt );
  sensitive << ( bias_add_N_Mux_16_3_6_1_8_in4 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_8_in2 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_8_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_9_in4);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_9_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_9_in2);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_3_6_1_9);
  sensitive << ( bias_mux_cnt );
  sensitive << ( bias_add_N_Mux_16_3_6_1_9_in4 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_9_in2 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_9_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_10_in4);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_10_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_10_in2);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_3_6_1_10);
  sensitive << ( bias_mux_cnt );
  sensitive << ( bias_add_N_Mux_16_3_6_1_10_in4 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_10_in2 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_10_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_11_in4);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_11_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_11_in2);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_3_6_1_11);
  sensitive << ( bias_mux_cnt );
  sensitive << ( bias_add_N_Mux_16_3_6_1_11_in4 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_11_in2 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_11_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_12_in4);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_12_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_add_N_Mux_16_3_6_1_12_in2);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_3_6_1_12);
  sensitive << ( bias_mux_cnt );
  sensitive << ( bias_add_N_Mux_16_3_6_1_12_in4 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_12_in2 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_12_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_2_4_1_13_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_2_4_1_13);
  sensitive << ( bias_add_OrReduction_2U_1U_4_4_out1 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_5_out1 );
  sensitive << ( bias_add_N_Mux_16_2_4_1_13_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_2_4_1_14_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_2_4_1_14);
  sensitive << ( bias_add_OrReduction_2U_1U_4_4_out1 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_6_out1 );
  sensitive << ( bias_add_N_Mux_16_2_4_1_14_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_2_4_1_15_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_2_4_1_15);
  sensitive << ( bias_add_OrReduction_2U_1U_4_4_out1 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_7_out1 );
  sensitive << ( bias_add_N_Mux_16_2_4_1_15_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_2_4_1_16_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_2_4_1_16);
  sensitive << ( bias_add_OrReduction_2U_1U_4_4_out1 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_8_out1 );
  sensitive << ( bias_add_N_Mux_16_2_4_1_16_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_2_4_1_17_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_2_4_1_17);
  sensitive << ( bias_add_OrReduction_2U_1U_4_4_out1 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_9_out1 );
  sensitive << ( bias_add_N_Mux_16_2_4_1_17_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_2_4_1_18_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_2_4_1_18);
  sensitive << ( bias_add_OrReduction_2U_1U_4_4_out1 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_10_out1 );
  sensitive << ( bias_add_N_Mux_16_2_4_1_18_in3 );

  SC_METHOD(drive_bias_add_N_Mux_16_2_4_1_19_in3);
  sensitive << ( r_bias_data );

  SC_METHOD(bias_add_N_Mux_16_2_4_1_19);
  sensitive << ( bias_add_OrReduction_2U_1U_4_4_out1 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_11_out1 );
  sensitive << ( bias_add_N_Mux_16_2_4_1_19_in3 );

  SC_METHOD(bias_add_N_Mux_16_2_4_1_20);
  sensitive << ( bias_add_OrReduction_2U_1U_4_4_out1 );
  sensitive << ( bias_add_N_Mux_16_3_6_1_12_out1 );
  sensitive << ( r_bias_data );

  SC_METHOD(drive_bias_mux_cnt);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(bias_add_Add2i1u2_4_2);
  sensitive << ( bias_mux_cnt );

  SC_METHOD(bias_add_N_Mux_2_2_3_4_3);
  sensitive << ( r_src_valid );
  sensitive << ( bias_add_Add2i1u2_4_2_out1 );
  sensitive << ( bias_mux_cnt );

  SC_METHOD(drive_r2_src_valid);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_bias_data);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_valid);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_0);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_1);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_2);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_3);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_4);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_5);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_6);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

  SC_METHOD(drive_r_src_7);
  sensitive << clk.pos();
  sensitive << rstn.neg();
  dont_initialize();

}
// resource: regr_ac_1
void bias_add::drive_dst_valid(){
  if ( (rstn.read() == 0ULL) ) {
    dst_valid = 0ULL;
  } else {
    dst_valid = (sc_uint<1> ) (bias_add_N_Muxb_1_2_2_4_1_out1.read());
  }
}
// resource: bias_add_N_Muxb_1_2_2_4
void bias_add::bias_add_N_Muxb_1_2_2_4_1(){
  if ( enable.read() ) {
    bias_add_N_Muxb_1_2_2_4_1_out1 = (sc_uint<1> ) (r2_src_valid.read());
  } else {
    bias_add_N_Muxb_1_2_2_4_1_out1 = (sc_uint<1> ) (src_valid.read());
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_ac_32
void bias_add::drive_dst_0(){
  if ( (rstn.read() == 0ULL) ) {
    dst_0 = 0ULL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      if ( r2_src_valid.read() ) {
        dst_0 = (sc_uint<32> ) (add_result_0.read());
      } 
      break;
    case 0ULL: 
      dst_0 = (sc_uint<32> ) ((sc_uint<16> )src_0.read());
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_ac_32
void bias_add::drive_dst_1(){
  if ( (rstn.read() == 0ULL) ) {
    dst_1 = 0ULL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      if ( r2_src_valid.read() ) {
        dst_1 = (sc_uint<32> ) (add_result_1.read());
      } 
      break;
    case 0ULL: 
      dst_1 = (sc_uint<32> ) ((sc_uint<16> )src_1.read());
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_ac_32
void bias_add::drive_dst_2(){
  if ( (rstn.read() == 0ULL) ) {
    dst_2 = 0ULL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      if ( r2_src_valid.read() ) {
        dst_2 = (sc_uint<32> ) (add_result_2.read());
      } 
      break;
    case 0ULL: 
      dst_2 = (sc_uint<32> ) ((sc_uint<16> )src_2.read());
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_ac_32
void bias_add::drive_dst_3(){
  if ( (rstn.read() == 0ULL) ) {
    dst_3 = 0ULL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      if ( r2_src_valid.read() ) {
        dst_3 = (sc_uint<32> ) (add_result_3.read());
      } 
      break;
    case 0ULL: 
      dst_3 = (sc_uint<32> ) ((sc_uint<16> )src_3.read());
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_ac_32
void bias_add::drive_dst_4(){
  if ( (rstn.read() == 0ULL) ) {
    dst_4 = 0ULL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      if ( r2_src_valid.read() ) {
        dst_4 = (sc_uint<32> ) (add_result_4.read());
      } 
      break;
    case 0ULL: 
      dst_4 = (sc_uint<32> ) ((sc_uint<16> )src_4.read());
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_ac_32
void bias_add::drive_dst_5(){
  if ( (rstn.read() == 0ULL) ) {
    dst_5 = 0ULL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      if ( r2_src_valid.read() ) {
        dst_5 = (sc_uint<32> ) (add_result_5.read());
      } 
      break;
    case 0ULL: 
      dst_5 = (sc_uint<32> ) ((sc_uint<16> )src_5.read());
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_ac_32
void bias_add::drive_dst_6(){
  if ( (rstn.read() == 0ULL) ) {
    dst_6 = 0ULL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      if ( r2_src_valid.read() ) {
        dst_6 = (sc_uint<32> ) (add_result_6.read());
      } 
      break;
    case 0ULL: 
      dst_6 = (sc_uint<32> ) ((sc_uint<16> )src_6.read());
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_ac_32
void bias_add::drive_dst_7(){
  if ( (rstn.read() == 0ULL) ) {
    dst_7 = 0ULL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      if ( r2_src_valid.read() ) {
        dst_7 = (sc_uint<32> ) (add_result_7.read());
      } 
      break;
    case 0ULL: 
      dst_7 = (sc_uint<32> ) ((sc_uint<16> )src_7.read());
      break;
    }
  }
}
// resource: mux_32bx2i1c
// resource: regr_ac_32
void bias_add::drive_add_result_0(){
  if ( (rstn.read() == 0ULL) ) {
    add_result_0 = 0LL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      add_result_0 = (sc_int<32> ) (bias_add_Add_32Ux16S_32S_4_21_out1.read());
      break;
    case 0ULL: 
      add_result_0 = 0LL;
      break;
    }
  }
}
// resource: mux_32bx2i1c
// resource: regr_ac_32
void bias_add::drive_add_result_1(){
  if ( (rstn.read() == 0ULL) ) {
    add_result_1 = 0LL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      add_result_1 = (sc_int<32> ) (bias_add_Add_32Ux16S_32S_4_22_out1.read());
      break;
    case 0ULL: 
      add_result_1 = 0LL;
      break;
    }
  }
}
// resource: mux_32bx2i1c
// resource: regr_ac_32
void bias_add::drive_add_result_2(){
  if ( (rstn.read() == 0ULL) ) {
    add_result_2 = 0LL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      add_result_2 = (sc_int<32> ) (bias_add_Add_32Ux16S_32S_4_23_out1.read());
      break;
    case 0ULL: 
      add_result_2 = 0LL;
      break;
    }
  }
}
// resource: mux_32bx2i1c
// resource: regr_ac_32
void bias_add::drive_add_result_3(){
  if ( (rstn.read() == 0ULL) ) {
    add_result_3 = 0LL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      add_result_3 = (sc_int<32> ) (bias_add_Add_32Ux16S_32S_4_24_out1.read());
      break;
    case 0ULL: 
      add_result_3 = 0LL;
      break;
    }
  }
}
// resource: mux_32bx2i1c
// resource: regr_ac_32
void bias_add::drive_add_result_4(){
  if ( (rstn.read() == 0ULL) ) {
    add_result_4 = 0LL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      add_result_4 = (sc_int<32> ) (bias_add_Add_32Ux16S_32S_4_25_out1.read());
      break;
    case 0ULL: 
      add_result_4 = 0LL;
      break;
    }
  }
}
// resource: mux_32bx2i1c
// resource: regr_ac_32
void bias_add::drive_add_result_5(){
  if ( (rstn.read() == 0ULL) ) {
    add_result_5 = 0LL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      add_result_5 = (sc_int<32> ) (bias_add_Add_32Ux16S_32S_4_26_out1.read());
      break;
    case 0ULL: 
      add_result_5 = 0LL;
      break;
    }
  }
}
// resource: mux_32bx2i1c
// resource: regr_ac_32
void bias_add::drive_add_result_6(){
  if ( (rstn.read() == 0ULL) ) {
    add_result_6 = 0LL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      add_result_6 = (sc_int<32> ) (bias_add_Add_32Ux16S_32S_4_27_out1.read());
      break;
    case 0ULL: 
      add_result_6 = 0LL;
      break;
    }
  }
}
// resource: mux_32bx2i1c
// resource: regr_ac_32
void bias_add::drive_add_result_7(){
  if ( (rstn.read() == 0ULL) ) {
    add_result_7 = 0LL;
  } else {
    switch( (sc_uint<1>)(enable.read()) ) {
    case 1ULL: 
      add_result_7 = (sc_int<32> ) (bias_add_Add_32Ux16S_32S_4_28_out1.read());
      break;
    case 0ULL: 
      add_result_7 = 0LL;
      break;
    }
  }
}
// resource: bias_add_Add_32Ux16S_32S_4  instance: bias_add_Add_32Ux16S_32S_4_21
void bias_add::bias_add_Add_32Ux16S_32S_4_21(){
  bias_add_Add_32Ux16S_32S_4_21_out1 = (/*cliff*/sc_int<32>)(r_src_0.read() + (
                                       sc_int<16> )
                                       bias_add_N_Mux_16_2_4_1_20_out1.read());
}
// resource: bias_add_Add_32Ux16S_32S_4  instance: bias_add_Add_32Ux16S_32S_4_22
void bias_add::bias_add_Add_32Ux16S_32S_4_22(){
  bias_add_Add_32Ux16S_32S_4_22_out1 = (/*cliff*/sc_int<32>)(r_src_1.read() + (
                                       sc_int<16> )
                                       bias_add_N_Mux_16_2_4_1_19_out1.read());
}
// resource: bias_add_Add_32Ux16S_32S_4  instance: bias_add_Add_32Ux16S_32S_4_23
void bias_add::bias_add_Add_32Ux16S_32S_4_23(){
  bias_add_Add_32Ux16S_32S_4_23_out1 = (/*cliff*/sc_int<32>)(r_src_2.read() + (
                                       sc_int<16> )
                                       bias_add_N_Mux_16_2_4_1_18_out1.read());
}
// resource: bias_add_Add_32Ux16S_32S_4  instance: bias_add_Add_32Ux16S_32S_4_24
void bias_add::bias_add_Add_32Ux16S_32S_4_24(){
  bias_add_Add_32Ux16S_32S_4_24_out1 = (/*cliff*/sc_int<32>)(r_src_3.read() + (
                                       sc_int<16> )
                                       bias_add_N_Mux_16_2_4_1_17_out1.read());
}
// resource: bias_add_Add_32Ux16S_32S_4  instance: bias_add_Add_32Ux16S_32S_4_25
void bias_add::bias_add_Add_32Ux16S_32S_4_25(){
  bias_add_Add_32Ux16S_32S_4_25_out1 = (/*cliff*/sc_int<32>)(r_src_4.read() + (
                                       sc_int<16> )
                                       bias_add_N_Mux_16_2_4_1_16_out1.read());
}
// resource: bias_add_Add_32Ux16S_32S_4  instance: bias_add_Add_32Ux16S_32S_4_26
void bias_add::bias_add_Add_32Ux16S_32S_4_26(){
  bias_add_Add_32Ux16S_32S_4_26_out1 = (/*cliff*/sc_int<32>)(r_src_5.read() + (
                                       sc_int<16> )
                                       bias_add_N_Mux_16_2_4_1_15_out1.read());
}
// resource: bias_add_Add_32Ux16S_32S_4  instance: bias_add_Add_32Ux16S_32S_4_27
void bias_add::bias_add_Add_32Ux16S_32S_4_27(){
  bias_add_Add_32Ux16S_32S_4_27_out1 = (/*cliff*/sc_int<32>)(r_src_6.read() + (
                                       sc_int<16> )
                                       bias_add_N_Mux_16_2_4_1_14_out1.read());
}
// resource: bias_add_Add_32Ux16S_32S_4  instance: bias_add_Add_32Ux16S_32S_4_28
void bias_add::bias_add_Add_32Ux16S_32S_4_28(){
  bias_add_Add_32Ux16S_32S_4_28_out1 = (/*cliff*/sc_int<32>)(r_src_7.read() + (
                                       sc_int<16> )
                                       bias_add_N_Mux_16_2_4_1_13_out1.read());
}
// resource: bias_add_OrReduction_2U_1U_4  instance: bias_add_OrReduction_2U_1U_4_4
void bias_add::bias_add_OrReduction_2U_1U_4_4(){
  bias_add_OrReduction_2U_1U_4_4_out1 = ((sc_uint<2>)bias_mux_cnt.read())
                                        .or_reduce();
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_5_in4(){
  bias_add_N_Mux_16_3_6_1_5_in4 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(511,496)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_5_in3(){
  bias_add_N_Mux_16_3_6_1_5_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(383,368)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_5_in2(){
  bias_add_N_Mux_16_3_6_1_5_in2 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(255,240)));
}
// resource: bias_add_N_Mux_16_3_6_1
void bias_add::bias_add_N_Mux_16_3_6_1_5(){
  switch( (sc_uint<2>)(bias_mux_cnt.read()) ) {
  default:
    bias_add_N_Mux_16_3_6_1_5_out1 = bias_add_N_Mux_16_3_6_1_5_in4.read();
    break;
  case 1ULL: 
    bias_add_N_Mux_16_3_6_1_5_out1 = bias_add_N_Mux_16_3_6_1_5_in2.read();
    break;
  case 2ULL: 
    bias_add_N_Mux_16_3_6_1_5_out1 = bias_add_N_Mux_16_3_6_1_5_in3.read();
    break;
  }
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_6_in4(){
  bias_add_N_Mux_16_3_6_1_6_in4 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(495,480)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_6_in3(){
  bias_add_N_Mux_16_3_6_1_6_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(367,352)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_6_in2(){
  bias_add_N_Mux_16_3_6_1_6_in2 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(239,224)));
}
// resource: bias_add_N_Mux_16_3_6_1
void bias_add::bias_add_N_Mux_16_3_6_1_6(){
  switch( (sc_uint<2>)(bias_mux_cnt.read()) ) {
  default:
    bias_add_N_Mux_16_3_6_1_6_out1 = bias_add_N_Mux_16_3_6_1_6_in4.read();
    break;
  case 1ULL: 
    bias_add_N_Mux_16_3_6_1_6_out1 = bias_add_N_Mux_16_3_6_1_6_in2.read();
    break;
  case 2ULL: 
    bias_add_N_Mux_16_3_6_1_6_out1 = bias_add_N_Mux_16_3_6_1_6_in3.read();
    break;
  }
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_7_in4(){
  bias_add_N_Mux_16_3_6_1_7_in4 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(479,464)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_7_in3(){
  bias_add_N_Mux_16_3_6_1_7_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(351,336)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_7_in2(){
  bias_add_N_Mux_16_3_6_1_7_in2 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(223,208)));
}
// resource: bias_add_N_Mux_16_3_6_1
void bias_add::bias_add_N_Mux_16_3_6_1_7(){
  switch( (sc_uint<2>)(bias_mux_cnt.read()) ) {
  default:
    bias_add_N_Mux_16_3_6_1_7_out1 = bias_add_N_Mux_16_3_6_1_7_in4.read();
    break;
  case 1ULL: 
    bias_add_N_Mux_16_3_6_1_7_out1 = bias_add_N_Mux_16_3_6_1_7_in2.read();
    break;
  case 2ULL: 
    bias_add_N_Mux_16_3_6_1_7_out1 = bias_add_N_Mux_16_3_6_1_7_in3.read();
    break;
  }
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_8_in4(){
  bias_add_N_Mux_16_3_6_1_8_in4 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(463,448)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_8_in3(){
  bias_add_N_Mux_16_3_6_1_8_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(335,320)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_8_in2(){
  bias_add_N_Mux_16_3_6_1_8_in2 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(207,192)));
}
// resource: bias_add_N_Mux_16_3_6_1
void bias_add::bias_add_N_Mux_16_3_6_1_8(){
  switch( (sc_uint<2>)(bias_mux_cnt.read()) ) {
  default:
    bias_add_N_Mux_16_3_6_1_8_out1 = bias_add_N_Mux_16_3_6_1_8_in4.read();
    break;
  case 1ULL: 
    bias_add_N_Mux_16_3_6_1_8_out1 = bias_add_N_Mux_16_3_6_1_8_in2.read();
    break;
  case 2ULL: 
    bias_add_N_Mux_16_3_6_1_8_out1 = bias_add_N_Mux_16_3_6_1_8_in3.read();
    break;
  }
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_9_in4(){
  bias_add_N_Mux_16_3_6_1_9_in4 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(447,432)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_9_in3(){
  bias_add_N_Mux_16_3_6_1_9_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(319,304)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_9_in2(){
  bias_add_N_Mux_16_3_6_1_9_in2 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                  r_bias_data.read().range(191,176)));
}
// resource: bias_add_N_Mux_16_3_6_1
void bias_add::bias_add_N_Mux_16_3_6_1_9(){
  switch( (sc_uint<2>)(bias_mux_cnt.read()) ) {
  default:
    bias_add_N_Mux_16_3_6_1_9_out1 = bias_add_N_Mux_16_3_6_1_9_in4.read();
    break;
  case 1ULL: 
    bias_add_N_Mux_16_3_6_1_9_out1 = bias_add_N_Mux_16_3_6_1_9_in2.read();
    break;
  case 2ULL: 
    bias_add_N_Mux_16_3_6_1_9_out1 = bias_add_N_Mux_16_3_6_1_9_in3.read();
    break;
  }
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_10_in4(){
  bias_add_N_Mux_16_3_6_1_10_in4 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(431,416)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_10_in3(){
  bias_add_N_Mux_16_3_6_1_10_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(303,288)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_10_in2(){
  bias_add_N_Mux_16_3_6_1_10_in2 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(175,160)));
}
// resource: bias_add_N_Mux_16_3_6_1
void bias_add::bias_add_N_Mux_16_3_6_1_10(){
  switch( (sc_uint<2>)(bias_mux_cnt.read()) ) {
  default:
    bias_add_N_Mux_16_3_6_1_10_out1 = bias_add_N_Mux_16_3_6_1_10_in4.read();
    break;
  case 1ULL: 
    bias_add_N_Mux_16_3_6_1_10_out1 = bias_add_N_Mux_16_3_6_1_10_in2.read();
    break;
  case 2ULL: 
    bias_add_N_Mux_16_3_6_1_10_out1 = bias_add_N_Mux_16_3_6_1_10_in3.read();
    break;
  }
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_11_in4(){
  bias_add_N_Mux_16_3_6_1_11_in4 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(415,400)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_11_in3(){
  bias_add_N_Mux_16_3_6_1_11_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(287,272)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_11_in2(){
  bias_add_N_Mux_16_3_6_1_11_in2 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(159,144)));
}
// resource: bias_add_N_Mux_16_3_6_1
void bias_add::bias_add_N_Mux_16_3_6_1_11(){
  switch( (sc_uint<2>)(bias_mux_cnt.read()) ) {
  default:
    bias_add_N_Mux_16_3_6_1_11_out1 = bias_add_N_Mux_16_3_6_1_11_in4.read();
    break;
  case 1ULL: 
    bias_add_N_Mux_16_3_6_1_11_out1 = bias_add_N_Mux_16_3_6_1_11_in2.read();
    break;
  case 2ULL: 
    bias_add_N_Mux_16_3_6_1_11_out1 = bias_add_N_Mux_16_3_6_1_11_in3.read();
    break;
  }
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_12_in4(){
  bias_add_N_Mux_16_3_6_1_12_in4 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(399,384)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_12_in3(){
  bias_add_N_Mux_16_3_6_1_12_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(271,256)));
}
void bias_add::drive_bias_add_N_Mux_16_3_6_1_12_in2(){
  bias_add_N_Mux_16_3_6_1_12_in2 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(143,128)));
}
// resource: bias_add_N_Mux_16_3_6_1
void bias_add::bias_add_N_Mux_16_3_6_1_12(){
  switch( (sc_uint<2>)(bias_mux_cnt.read()) ) {
  default:
    bias_add_N_Mux_16_3_6_1_12_out1 = bias_add_N_Mux_16_3_6_1_12_in4.read();
    break;
  case 1ULL: 
    bias_add_N_Mux_16_3_6_1_12_out1 = bias_add_N_Mux_16_3_6_1_12_in2.read();
    break;
  case 2ULL: 
    bias_add_N_Mux_16_3_6_1_12_out1 = bias_add_N_Mux_16_3_6_1_12_in3.read();
    break;
  }
}
void bias_add::drive_bias_add_N_Mux_16_2_4_1_13_in3(){
  bias_add_N_Mux_16_2_4_1_13_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(127,112)));
}
// resource: bias_add_N_Mux_16_2_4_1
void bias_add::bias_add_N_Mux_16_2_4_1_13(){
  if ( bias_add_OrReduction_2U_1U_4_4_out1.read() ) {
    bias_add_N_Mux_16_2_4_1_13_out1 = bias_add_N_Mux_16_3_6_1_5_out1.read();
  } else {
    bias_add_N_Mux_16_2_4_1_13_out1 = bias_add_N_Mux_16_2_4_1_13_in3.read();
  }
}
void bias_add::drive_bias_add_N_Mux_16_2_4_1_14_in3(){
  bias_add_N_Mux_16_2_4_1_14_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(111,96)));
}
// resource: bias_add_N_Mux_16_2_4_1
void bias_add::bias_add_N_Mux_16_2_4_1_14(){
  if ( bias_add_OrReduction_2U_1U_4_4_out1.read() ) {
    bias_add_N_Mux_16_2_4_1_14_out1 = bias_add_N_Mux_16_3_6_1_6_out1.read();
  } else {
    bias_add_N_Mux_16_2_4_1_14_out1 = bias_add_N_Mux_16_2_4_1_14_in3.read();
  }
}
void bias_add::drive_bias_add_N_Mux_16_2_4_1_15_in3(){
  bias_add_N_Mux_16_2_4_1_15_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(95,80)));
}
// resource: bias_add_N_Mux_16_2_4_1
void bias_add::bias_add_N_Mux_16_2_4_1_15(){
  if ( bias_add_OrReduction_2U_1U_4_4_out1.read() ) {
    bias_add_N_Mux_16_2_4_1_15_out1 = bias_add_N_Mux_16_3_6_1_7_out1.read();
  } else {
    bias_add_N_Mux_16_2_4_1_15_out1 = bias_add_N_Mux_16_2_4_1_15_in3.read();
  }
}
void bias_add::drive_bias_add_N_Mux_16_2_4_1_16_in3(){
  bias_add_N_Mux_16_2_4_1_16_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(79,64)));
}
// resource: bias_add_N_Mux_16_2_4_1
void bias_add::bias_add_N_Mux_16_2_4_1_16(){
  if ( bias_add_OrReduction_2U_1U_4_4_out1.read() ) {
    bias_add_N_Mux_16_2_4_1_16_out1 = bias_add_N_Mux_16_3_6_1_8_out1.read();
  } else {
    bias_add_N_Mux_16_2_4_1_16_out1 = bias_add_N_Mux_16_2_4_1_16_in3.read();
  }
}
void bias_add::drive_bias_add_N_Mux_16_2_4_1_17_in3(){
  bias_add_N_Mux_16_2_4_1_17_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(63,48)));
}
// resource: bias_add_N_Mux_16_2_4_1
void bias_add::bias_add_N_Mux_16_2_4_1_17(){
  if ( bias_add_OrReduction_2U_1U_4_4_out1.read() ) {
    bias_add_N_Mux_16_2_4_1_17_out1 = bias_add_N_Mux_16_3_6_1_9_out1.read();
  } else {
    bias_add_N_Mux_16_2_4_1_17_out1 = bias_add_N_Mux_16_2_4_1_17_in3.read();
  }
}
void bias_add::drive_bias_add_N_Mux_16_2_4_1_18_in3(){
  bias_add_N_Mux_16_2_4_1_18_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(47,32)));
}
// resource: bias_add_N_Mux_16_2_4_1
void bias_add::bias_add_N_Mux_16_2_4_1_18(){
  if ( bias_add_OrReduction_2U_1U_4_4_out1.read() ) {
    bias_add_N_Mux_16_2_4_1_18_out1 = bias_add_N_Mux_16_3_6_1_10_out1.read();
  } else {
    bias_add_N_Mux_16_2_4_1_18_out1 = bias_add_N_Mux_16_2_4_1_18_in3.read();
  }
}
void bias_add::drive_bias_add_N_Mux_16_2_4_1_19_in3(){
  bias_add_N_Mux_16_2_4_1_19_in3 = (sc_uint<16> ) (((/*imp*/sc_uint<16> ) 
                                   r_bias_data.read().range(31,16)));
}
// resource: bias_add_N_Mux_16_2_4_1
void bias_add::bias_add_N_Mux_16_2_4_1_19(){
  if ( bias_add_OrReduction_2U_1U_4_4_out1.read() ) {
    bias_add_N_Mux_16_2_4_1_19_out1 = bias_add_N_Mux_16_3_6_1_11_out1.read();
  } else {
    bias_add_N_Mux_16_2_4_1_19_out1 = bias_add_N_Mux_16_2_4_1_19_in3.read();
  }
}
// resource: bias_add_N_Mux_16_2_4_1
void bias_add::bias_add_N_Mux_16_2_4_1_20(){
  if ( bias_add_OrReduction_2U_1U_4_4_out1.read() ) {
    bias_add_N_Mux_16_2_4_1_20_out1 = bias_add_N_Mux_16_3_6_1_12_out1.read();
  } else {
    bias_add_N_Mux_16_2_4_1_20_out1 = (sc_uint<16> )r_bias_data.read();
  }
}
// resource: regr_ac_2
void bias_add::drive_bias_mux_cnt(){
  if ( (rstn.read() == 0ULL) ) {
    bias_mux_cnt = 0ULL;
  } else {
    bias_mux_cnt = bias_add_N_Mux_2_2_3_4_3_out1.read();
  }
}
// resource: bias_add_Add2i1u2_4  instance: bias_add_Add2i1u2_4_2
void bias_add::bias_add_Add2i1u2_4_2(){
  bias_add_Add2i1u2_4_2_out1 = (bias_mux_cnt.read() + 1ULL);
}
// resource: bias_add_N_Mux_2_2_3_4
void bias_add::bias_add_N_Mux_2_2_3_4_3(){
  if ( r_src_valid.read() ) {
    bias_add_N_Mux_2_2_3_4_3_out1 = bias_add_Add2i1u2_4_2_out1.read();
  } else {
    bias_add_N_Mux_2_2_3_4_3_out1 = bias_mux_cnt.read();
  }
}
// resource: regr_ac_1
void bias_add::drive_r2_src_valid(){
  if ( (rstn.read() == 0ULL) ) {
    r2_src_valid = 0ULL;
  } else {
    r2_src_valid = r_src_valid.read();
  }
}
// resource: regr_ac_512
void bias_add::drive_r_bias_data(){
  if ( (rstn.read() == 0ULL) ) {
    r_bias_data = sc_biguint<512>(0ULL);
  } else {
    r_bias_data = bias_data.read();
  }
}
// resource: regr_ac_1
void bias_add::drive_r_src_valid(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_valid = 0ULL;
  } else {
    r_src_valid = src_valid.read();
  }
}
// resource: regr_ac_32
void bias_add::drive_r_src_0(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_0 = 0ULL;
  } else {
    r_src_0 = src_0.read();
  }
}
// resource: regr_ac_32
void bias_add::drive_r_src_1(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_1 = 0ULL;
  } else {
    r_src_1 = src_1.read();
  }
}
// resource: regr_ac_32
void bias_add::drive_r_src_2(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_2 = 0ULL;
  } else {
    r_src_2 = src_2.read();
  }
}
// resource: regr_ac_32
void bias_add::drive_r_src_3(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_3 = 0ULL;
  } else {
    r_src_3 = src_3.read();
  }
}
// resource: regr_ac_32
void bias_add::drive_r_src_4(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_4 = 0ULL;
  } else {
    r_src_4 = src_4.read();
  }
}
// resource: regr_ac_32
void bias_add::drive_r_src_5(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_5 = 0ULL;
  } else {
    r_src_5 = src_5.read();
  }
}
// resource: regr_ac_32
void bias_add::drive_r_src_6(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_6 = 0ULL;
  } else {
    r_src_6 = src_6.read();
  }
}
// resource: regr_ac_32
void bias_add::drive_r_src_7(){
  if ( (rstn.read() == 0ULL) ) {
    r_src_7 = 0ULL;
  } else {
    r_src_7 = src_7.read();
  }
}
