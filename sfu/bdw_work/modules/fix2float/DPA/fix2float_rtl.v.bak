// Generated by stratus_hls 19.10-p100  (91500.011111)
// Wed Jan  6 14:49:31 2021
// from fix2float.cpp

`timescale 1ps / 1ps

      
module fix2float(clk, rstn, enable, fraction_len, src_valid, src, dst_valid, dst);

      input clk;
      input rstn;
      input enable;
      input [31:0] fraction_len;
      input src_valid;
      input [31:0] src;
      output dst_valid;
      reg dst_valid;
      output [31:0] dst;
      reg [31:0] dst;
      reg[31:0] fix2float_N_Mux_32_2_51_4_12_out1;
      reg fix2float_N_Muxb_1_2_9_4_11_out1;
      reg[31:0] fix2float_N_Mux_32_2_51_4_10_out1;
      wire fix2float_N_Mux_32_2_51_4_10_ctrl1;
      /*signed*/wire[31:0] fix2float_Add2i1s32_4_9_out1;
      /*signed*/wire[31:0] fix2float_NotBit_32S_32S_4_8_out1;
      wire fix2float_And_1Ux1U_1U_4_13_out1;
      reg r_sign;
      reg[31:0] fix2float_N_Mux_32_2_49_4_14_out1;
      reg[7:0] fix2float_MuxSubu8i127i0u1_4_7_out1;
      wire fix2float_Muxi1u5u1_1_56_ctrl1;
      reg[4:0] fix2float_Muxi2u5u1_1_55_out1;
      wire fix2float_Muxi2u5u1_1_55_ctrl1;
      reg[4:0] fix2float_Muxi3u5u1_1_54_out1;
      wire fix2float_Muxi3u5u1_1_54_ctrl1;
      reg[4:0] fix2float_Muxi4u5u1_1_53_out1;
      wire fix2float_Muxi4u5u1_1_53_ctrl1;
      reg[4:0] fix2float_Muxi5u5u1_1_52_out1;
      wire fix2float_Muxi5u5u1_1_52_ctrl1;
      reg[4:0] fix2float_Muxi6u5u1_1_51_out1;
      wire fix2float_Muxi6u5u1_1_51_ctrl1;
      reg[4:0] fix2float_Muxi7u5u1_1_50_out1;
      wire fix2float_Muxi7u5u1_1_50_ctrl1;
      reg[4:0] fix2float_Muxi8u5u1_1_49_out1;
      wire fix2float_Muxi8u5u1_1_49_ctrl1;
      reg[4:0] fix2float_Muxi9u5u1_1_48_out1;
      wire fix2float_Muxi9u5u1_1_48_ctrl1;
      reg[4:0] fix2float_Muxi10u5u1_1_47_out1;
      wire fix2float_Muxi10u5u1_1_47_ctrl1;
      reg[4:0] fix2float_Muxi11u5u1_1_46_out1;
      wire fix2float_Muxi11u5u1_1_46_ctrl1;
      reg[4:0] fix2float_Muxi12u5u1_1_45_out1;
      wire fix2float_Muxi12u5u1_1_45_ctrl1;
      reg[4:0] fix2float_Muxi13u5u1_1_44_out1;
      wire fix2float_Muxi13u5u1_1_44_ctrl1;
      reg[4:0] fix2float_Muxi14u5u1_1_43_out1;
      wire fix2float_Muxi14u5u1_1_43_ctrl1;
      reg[4:0] fix2float_Muxi15u5u1_1_42_out1;
      wire fix2float_Muxi15u5u1_1_42_ctrl1;
      reg[4:0] fix2float_Muxi16u5u1_1_41_out1;
      wire fix2float_Muxi16u5u1_1_41_ctrl1;
      reg[4:0] fix2float_Muxi17u5u1_1_40_out1;
      wire fix2float_Muxi17u5u1_1_40_ctrl1;
      reg[4:0] fix2float_Muxi18u5u1_1_39_out1;
      wire fix2float_Muxi18u5u1_1_39_ctrl1;
      reg[4:0] fix2float_Muxi19u5u1_1_38_out1;
      wire fix2float_Muxi19u5u1_1_38_ctrl1;
      reg[4:0] fix2float_Muxi20u5u1_1_37_out1;
      wire fix2float_Muxi20u5u1_1_37_ctrl1;
      reg[4:0] fix2float_Muxi21u5u1_1_36_out1;
      wire fix2float_Muxi21u5u1_1_36_ctrl1;
      reg[4:0] fix2float_Muxi22u5u1_1_35_out1;
      wire fix2float_Muxi22u5u1_1_35_ctrl1;
      reg[4:0] fix2float_Muxi23u5u1_1_34_out1;
      wire fix2float_Muxi23u5u1_1_34_ctrl1;
      reg[4:0] fix2float_Muxi24u5u1_1_33_out1;
      wire fix2float_Muxi24u5u1_1_33_ctrl1;
      reg[4:0] fix2float_Muxi25u5u1_1_32_out1;
      wire fix2float_Muxi25u5u1_1_32_ctrl1;
      reg[4:0] fix2float_Muxi26u5u1_1_31_out1;
      wire fix2float_Muxi26u5u1_1_31_ctrl1;
      reg[4:0] fix2float_Muxi27u5u1_1_30_out1;
      wire fix2float_Muxi27u5u1_1_30_ctrl1;
      reg[4:0] fix2float_Muxi28u5u1_1_29_out1;
      wire fix2float_Muxi28u5u1_1_29_ctrl1;
      reg[4:0] fix2float_Muxi29u5u1_1_28_out1;
      wire fix2float_Muxi29u5u1_1_28_ctrl1;
      reg[4:0] fix2float_Muxi30u5u1_1_27_out1;
      wire fix2float_Muxi30u5u1_1_27_ctrl1;
      reg[4:0] fix2float_Muxi31i0u1_4_26_out1;
      reg[4:0] r2_shift_num;
      wire fix2float_OrReduction_32S_1U_1_15_out1;
      /*signed*/reg[31:0] r_in_data;
      reg[4:0] fix2float_Muxi1u5u1_1_56_out1;
      /*signed*/wire[31:0] fix2float_LeftShift_32Sx5U_32S_1_59_out1;
      reg src_valid_1d;
      wire fix2float_And_1Ux1U_1U_4_58_out1;
      wire fix2float_Not_1U_1U_1_18_out1;
      wire fix2float_Not_1U_1U_4_57_out1;
      reg[31:0] fix2float_N_Mux_32_2_49_4_60_out1;
      wire round_bit;
      wire guard;
      /*signed*/wire[22:0] z_m;
      wire fix2float_OrReduction_6U_1U_1_16_out1;
      /*signed*/reg[31:0] r2_in_data;
      wire fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_in2;
      /*signed*/wire[5:0] fix2float_Subu5i31_1_17_out1;
      reg r2_sign;
      wire fix2float_And_1Ux1U_1U_4_22_out1;
      reg src_valid_2d;
      wire fix2float_And_1Ux1U_1U_4_21_out1;
      reg r2_zero_sig;
      wire fix2float_Not_1U_1U_4_19_out1;
      wire fix2float_And_1Ux1U_1U_4_23_out1;
      /*signed*/reg[5:0] fix2float_N_Mux_8_2_15_4_24_out1_slice;
      reg[22:0] fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_out1;
      reg r_z_s;
      /*signed*/reg[22:0] r_z_m;
      wire[31:0] fix2float_N_Mux_32_2_49_4_6_in2;
      /*signed*/reg[5:0] r_z_e_slice;
      reg[7:0] r_fraction_len;
      wire[7:0] fix2float_Add_8Ux8U_8U_4_5_out1;
      wire fix2float_And_1Ux1U_1U_4_4_out1;
      wire fix2float_And_1Ux1U_1U_4_3_out1;
      reg r3_zero_sig;
      wire fix2float_Not_1U_1U_4_2_out1;
      reg[31:0] fix2float_N_Mux_32_2_49_4_6_out1;
      reg src_valid_3d;
      wire fix2float_And_1Ux1U_1U_4_1_out1;

         // rtl_process:fix2float/drive_dst_valid
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_dst_valid
         // at: fix2float.h:239:7
         // at: fix2float.h:243:7
         always @(posedge clk or negedge rstn)
          begin :drive_dst_valid
            if (rstn == 1'b0) begin
               // op:_dst_valid/OP0
               dst_valid <= 1'd0;
            end
            else begin
               // op:_dst_valid/OP4
               dst_valid <= fix2float_And_1Ux1U_1U_4_1_out1;
            end
         end

         // rtl_instance:fix2float/fix2float_And_1Ux1U_1U_4_1
         // Resource=fix2float_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:240:10
         assign fix2float_And_1Ux1U_1U_4_1_out1 = enable & src_valid_3d;

         // rtl_process:fix2float/drive_dst
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_dst
         // at: fix2float.h:222:7
         // at: fix2float.h:230:7
         always @(posedge clk or negedge rstn)
          begin :drive_dst
            if (rstn == 1'b0) begin
               // op:_dst/OP7
               dst <= 32'd0000000000;
            end
            else begin
               // op:_dst/OP20
               dst <= fix2float_N_Mux_32_2_49_4_6_out1;
            end
         end

         // rtl_instance:fix2float/fix2float_Not_1U_1U_4_2
         // Resource=fix2float_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:227:14
         assign fix2float_Not_1U_1U_4_2_out1 = !r3_zero_sig;

         // rtl_instance:fix2float/fix2float_And_1Ux1U_1U_4_3
         // Resource=fix2float_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:225:15
         assign fix2float_And_1Ux1U_1U_4_3_out1 = fix2float_Not_1U_1U_4_2_out1 & src_valid_3d;

         // rtl_instance:fix2float/fix2float_And_1Ux1U_1U_4_4
         // Resource=fix2float_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:223:15
         assign fix2float_And_1Ux1U_1U_4_4_out1 = fix2float_And_1Ux1U_1U_4_3_out1 & enable;

         // rtl_instance:fix2float/fix2float_Add_8Ux8U_8U_4_5
         // Resource=fix2float_Add_8Ux8U_8U_4, Function=add : Inputs=8,8 Outputs=8
         // Implements 1 operation(s)
         // at: fix2float.h:230:62
         assign fix2float_Add_8Ux8U_8U_4_5_out1 = {{ 2 {r_z_e_slice[5]}}, r_z_e_slice} + r_fraction_len;

         // rtl_process:fix2float/drive_fix2float_N_Mux_32_2_49_4_6_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_N_Mux_32_2_49_4_6_in2
         // at: fix2float.h:230:86
         assign fix2float_N_Mux_32_2_49_4_6_in2 = {{r_z_s, fix2float_Add_8Ux8U_8U_4_5_out1}, r_z_m};

         // rtl_instance:fix2float/fix2float_N_Mux_32_2_49_4
         always @(fix2float_And_1Ux1U_1U_4_4_out1 or fix2float_N_Mux_32_2_49_4_6_in2)
          begin :fix2float_N_Mux_32_2_49_4_6
            if (fix2float_And_1Ux1U_1U_4_4_out1) begin
               fix2float_N_Mux_32_2_49_4_6_out1 = fix2float_N_Mux_32_2_49_4_6_in2;
            end
            else begin
               fix2float_N_Mux_32_2_49_4_6_out1 = 32'd0000000000;
            end
         end

         // rtl_process:fix2float/drive_r_z_m
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_r_z_m
         // at: fix2float.h:230:99
         // at: fix2float.h:187:7
         // at: fix2float.h:213:7
         always @(posedge clk or negedge rstn)
          begin :drive_r_z_m
            if (rstn == 1'b0) begin
               // op:_r_z/OP90
               r_z_m <= 23'd0000000;
            end
            else begin
               // op:_r_z/OP111
               r_z_m <= fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_out1;
            end
         end

         // rtl_process:fix2float/drive_r_z_e_slice
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_r_z_e_slice
         // at: fix2float.h:230:49
         // at: fix2float.h:188:7
         // at: fix2float.h:214:7
         always @(posedge clk or negedge rstn)
          begin :drive_r_z_e_slice
            if (rstn == 1'b0) begin
               // op:_r_z/OP91
               r_z_e_slice <= 6'd00;
            end
            else begin
               // op:_r_z/OP109
               r_z_e_slice <= fix2float_N_Mux_8_2_15_4_24_out1_slice;
            end
         end

         // rtl_process:fix2float/drive_r_z_s
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_r_z_s
         // at: fix2float.h:230:24
         // at: fix2float.h:189:7
         // at: fix2float.h:215:7
         always @(posedge clk or negedge rstn)
          begin :drive_r_z_s
            if (rstn == 1'b0) begin
               // op:_r_z/OP92
               r_z_s <= 1'd0;
            end
            else begin
               // op:_r_z/OP105
               r_z_s <= fix2float_And_1Ux1U_1U_4_23_out1;
            end
         end

         // rtl_instance:fix2float/fix2float_Not_1U_1U_4_19
         // Resource=fix2float_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 2 operation(s)
         // at: fix2float.h:196:10
         // at: fix2float.h:196:14
         assign fix2float_Not_1U_1U_4_19_out1 = !r2_zero_sig;

         // rtl_instance:fix2float/fix2float_And_1Ux1U_1U_4_21
         // Resource=fix2float_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:191:15
         assign fix2float_And_1Ux1U_1U_4_21_out1 = fix2float_Not_1U_1U_4_19_out1 & src_valid_2d;

         // rtl_instance:fix2float/fix2float_And_1Ux1U_1U_4_22
         // Resource=fix2float_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:196:10
         assign fix2float_And_1Ux1U_1U_4_22_out1 = fix2float_Not_1U_1U_4_19_out1 & r2_sign;

         // rtl_instance:fix2float/fix2float_And_1Ux1U_1U_4_23
         // Resource=fix2float_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:191:10
         assign fix2float_And_1Ux1U_1U_4_23_out1 = fix2float_And_1Ux1U_1U_4_22_out1 & src_valid_2d;

         // rtl_instance:fix2float/fix2float_N_Mux_8_2_15_4
         always @(fix2float_Subu5i31_1_17_out1 or fix2float_And_1Ux1U_1U_4_21_out1)
          begin :fix2float_N_Mux_8_2_15_4_24
            if (fix2float_And_1Ux1U_1U_4_21_out1) begin
               fix2float_N_Mux_8_2_15_4_24_out1_slice = fix2float_Subu5i31_1_17_out1;
            end
            else begin
               fix2float_N_Mux_8_2_15_4_24_out1_slice = 6'd00;
            end
         end

         // rtl_process:fix2float/drive_fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_in2
         // at: fix2float.h:201:107
         assign fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_in2 = r2_in_data[8];

         // rtl_instance:fix2float/fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4
         always @(round_bit or guard or z_m or fix2float_OrReduction_6U_1U_1_16_out1 or fix2float_And_1Ux1U_1U_4_21_out1 or fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_in2)
          begin :fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25
            if (fix2float_And_1Ux1U_1U_4_21_out1) begin
               fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_out1 = z_m + {22'b0000000000000000000000, guard & (round_bit | fix2float_OrReduction_6U_1U_1_16_out1 | fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_in2)};
            end
            else begin
               fix2float_MuxAdd2And2Or3u1u1u1u1s23i0u1_4_25_out1 = 23'd0000000;
            end
         end

         // rtl_process:fix2float/drive_r2_in_data
         // Sharing or Control mux
         // Sharing/Controlling 6 operation(s) on drive_r2_in_data
         // at: fix2float.h:169:17
         // at: fix2float.h:167:15
         // at: fix2float.h:168:19
         // at: fix2float.h:201:90
         // at: fix2float.h:175:7
         // at: fix2float.h:181:7
         always @(posedge clk or negedge rstn)
          begin :drive_r2_in_data
            if (rstn == 1'b0) begin
               // op:_r2_in_data/OP252
               r2_in_data <= 32'd0000000000;
            end
            else begin
               // op:_r2_in_data/OP261
               r2_in_data <= fix2float_N_Mux_32_2_49_4_60_out1;
            end
         end

         // rtl_instance:fix2float/fix2float_Not_1U_1U_4_57
         // Resource=fix2float_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:178:14
         assign fix2float_Not_1U_1U_4_57_out1 = !fix2float_Not_1U_1U_1_18_out1;

         // rtl_instance:fix2float/fix2float_And_1Ux1U_1U_4_58
         // Resource=fix2float_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:176:15
         assign fix2float_And_1Ux1U_1U_4_58_out1 = fix2float_Not_1U_1U_4_57_out1 & src_valid_1d;

         // rtl_instance:fix2float/fix2float_LeftShift_32Sx5U_32S_1_59
         // Resource=fix2float_LeftShift_32Sx5U_32S_1, Function=ls : Inputs=32S,5 Outputs=32S
         // Implements 1 operation(s)
         // at: fix2float.h:181:37
         assign fix2float_LeftShift_32Sx5U_32S_1_59_out1 = r_in_data << fix2float_Muxi1u5u1_1_56_out1;

         // rtl_instance:fix2float/fix2float_N_Mux_32_2_49_4
         always @(fix2float_And_1Ux1U_1U_4_58_out1 or fix2float_LeftShift_32Sx5U_32S_1_59_out1)
          begin :fix2float_N_Mux_32_2_49_4_60
            if (fix2float_And_1Ux1U_1U_4_58_out1) begin
               fix2float_N_Mux_32_2_49_4_60_out1 = fix2float_LeftShift_32Sx5U_32S_1_59_out1;
            end
            else begin
               fix2float_N_Mux_32_2_49_4_60_out1 = 32'd0000000000;
            end
         end

         // rtl_process:fix2float/drive_round_bit
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_round_bit
         // at: fix2float.h:168:7
         // at: fix2float.h:201:39
         assign round_bit = r2_in_data[6];

         // rtl_process:fix2float/drive_guard
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_guard
         // at: fix2float.h:167:7
         // at: fix2float.h:201:15
         assign guard = r2_in_data[7];

         // rtl_process:fix2float/drive_z_m
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_z_m
         // at: fix2float.h:165:7
         // at: fix2float.h:202:15
         assign z_m = r2_in_data[30:8];

         // rtl_instance:fix2float/fix2float_OrReduction_32S_1U_1_15
         // Resource=fix2float_OrReduction_32S_1U_1, Function=or : Inputs=32S Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:164:36
         assign fix2float_OrReduction_32S_1U_1_15_out1 = (|r_in_data);

         // rtl_instance:fix2float/fix2float_OrReduction_6U_1U_1_16
         // Resource=fix2float_OrReduction_6U_1U_1, Function=or : Inputs=6 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:169:40
         assign fix2float_OrReduction_6U_1U_1_16_out1 = (|r2_in_data[5:0]);

         // rtl_instance:fix2float/fix2float_Subu5i31_1_17
         // Resource=fix2float_Subu5i31_1, Function=sub : Inputs=5 Outputs=6S
         // Implements 1 operation(s)
         // at: fix2float.h:166:16
         assign fix2float_Subu5i31_1_17_out1 = 6'd31 - {1'b0, r2_shift_num};

         // rtl_instance:fix2float/fix2float_Not_1U_1U_1_18
         // Resource=fix2float_Not_1U_1U_1, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:164:36
         assign fix2float_Not_1U_1U_1_18_out1 = !fix2float_OrReduction_32S_1U_1_15_out1;

         // rtl_instance:fix2float/fix2float_Muxi31i0u1_4
         always @(r_in_data[0])
          begin :fix2float_Muxi31i0u1_4_26
            if (r_in_data[0]) begin
               fix2float_Muxi31i0u1_4_26_out1 = 5'd31;
            end
            else begin
               fix2float_Muxi31i0u1_4_26_out1 = 5'd00;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi30u5u1_1_27_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi30u5u1_1_27_ctrl1
         // at: fix2float.h:153:31
         assign fix2float_Muxi30u5u1_1_27_ctrl1 = r_in_data[1];

         // rtl_instance:fix2float/fix2float_Muxi30u5u1_1
         always @(fix2float_Muxi31i0u1_4_26_out1 or fix2float_Muxi30u5u1_1_27_ctrl1)
          begin :fix2float_Muxi30u5u1_1_27
            if (fix2float_Muxi30u5u1_1_27_ctrl1) begin
               fix2float_Muxi30u5u1_1_27_out1 = 5'd30;
            end
            else begin
               fix2float_Muxi30u5u1_1_27_out1 = fix2float_Muxi31i0u1_4_26_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi29u5u1_1_28_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi29u5u1_1_28_ctrl1
         // at: fix2float.h:151:31
         assign fix2float_Muxi29u5u1_1_28_ctrl1 = r_in_data[2];

         // rtl_instance:fix2float/fix2float_Muxi29u5u1_1
         always @(fix2float_Muxi30u5u1_1_27_out1 or fix2float_Muxi29u5u1_1_28_ctrl1)
          begin :fix2float_Muxi29u5u1_1_28
            if (fix2float_Muxi29u5u1_1_28_ctrl1) begin
               fix2float_Muxi29u5u1_1_28_out1 = 5'd29;
            end
            else begin
               fix2float_Muxi29u5u1_1_28_out1 = fix2float_Muxi30u5u1_1_27_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi28u5u1_1_29_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi28u5u1_1_29_ctrl1
         // at: fix2float.h:149:31
         assign fix2float_Muxi28u5u1_1_29_ctrl1 = r_in_data[3];

         // rtl_instance:fix2float/fix2float_Muxi28u5u1_1
         always @(fix2float_Muxi29u5u1_1_28_out1 or fix2float_Muxi28u5u1_1_29_ctrl1)
          begin :fix2float_Muxi28u5u1_1_29
            if (fix2float_Muxi28u5u1_1_29_ctrl1) begin
               fix2float_Muxi28u5u1_1_29_out1 = 5'd28;
            end
            else begin
               fix2float_Muxi28u5u1_1_29_out1 = fix2float_Muxi29u5u1_1_28_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi27u5u1_1_30_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi27u5u1_1_30_ctrl1
         // at: fix2float.h:147:31
         assign fix2float_Muxi27u5u1_1_30_ctrl1 = r_in_data[4];

         // rtl_instance:fix2float/fix2float_Muxi27u5u1_1
         always @(fix2float_Muxi28u5u1_1_29_out1 or fix2float_Muxi27u5u1_1_30_ctrl1)
          begin :fix2float_Muxi27u5u1_1_30
            if (fix2float_Muxi27u5u1_1_30_ctrl1) begin
               fix2float_Muxi27u5u1_1_30_out1 = 5'd27;
            end
            else begin
               fix2float_Muxi27u5u1_1_30_out1 = fix2float_Muxi28u5u1_1_29_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi26u5u1_1_31_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi26u5u1_1_31_ctrl1
         // at: fix2float.h:145:31
         assign fix2float_Muxi26u5u1_1_31_ctrl1 = r_in_data[5];

         // rtl_instance:fix2float/fix2float_Muxi26u5u1_1
         always @(fix2float_Muxi27u5u1_1_30_out1 or fix2float_Muxi26u5u1_1_31_ctrl1)
          begin :fix2float_Muxi26u5u1_1_31
            if (fix2float_Muxi26u5u1_1_31_ctrl1) begin
               fix2float_Muxi26u5u1_1_31_out1 = 5'd26;
            end
            else begin
               fix2float_Muxi26u5u1_1_31_out1 = fix2float_Muxi27u5u1_1_30_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi25u5u1_1_32_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi25u5u1_1_32_ctrl1
         // at: fix2float.h:143:31
         assign fix2float_Muxi25u5u1_1_32_ctrl1 = r_in_data[6];

         // rtl_instance:fix2float/fix2float_Muxi25u5u1_1
         always @(fix2float_Muxi26u5u1_1_31_out1 or fix2float_Muxi25u5u1_1_32_ctrl1)
          begin :fix2float_Muxi25u5u1_1_32
            if (fix2float_Muxi25u5u1_1_32_ctrl1) begin
               fix2float_Muxi25u5u1_1_32_out1 = 5'd25;
            end
            else begin
               fix2float_Muxi25u5u1_1_32_out1 = fix2float_Muxi26u5u1_1_31_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi24u5u1_1_33_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi24u5u1_1_33_ctrl1
         // at: fix2float.h:141:31
         assign fix2float_Muxi24u5u1_1_33_ctrl1 = r_in_data[7];

         // rtl_instance:fix2float/fix2float_Muxi24u5u1_1
         always @(fix2float_Muxi25u5u1_1_32_out1 or fix2float_Muxi24u5u1_1_33_ctrl1)
          begin :fix2float_Muxi24u5u1_1_33
            if (fix2float_Muxi24u5u1_1_33_ctrl1) begin
               fix2float_Muxi24u5u1_1_33_out1 = 5'd24;
            end
            else begin
               fix2float_Muxi24u5u1_1_33_out1 = fix2float_Muxi25u5u1_1_32_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi23u5u1_1_34_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi23u5u1_1_34_ctrl1
         // at: fix2float.h:139:31
         assign fix2float_Muxi23u5u1_1_34_ctrl1 = r_in_data[8];

         // rtl_instance:fix2float/fix2float_Muxi23u5u1_1
         always @(fix2float_Muxi24u5u1_1_33_out1 or fix2float_Muxi23u5u1_1_34_ctrl1)
          begin :fix2float_Muxi23u5u1_1_34
            if (fix2float_Muxi23u5u1_1_34_ctrl1) begin
               fix2float_Muxi23u5u1_1_34_out1 = 5'd23;
            end
            else begin
               fix2float_Muxi23u5u1_1_34_out1 = fix2float_Muxi24u5u1_1_33_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi22u5u1_1_35_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi22u5u1_1_35_ctrl1
         // at: fix2float.h:137:31
         assign fix2float_Muxi22u5u1_1_35_ctrl1 = r_in_data[9];

         // rtl_instance:fix2float/fix2float_Muxi22u5u1_1
         always @(fix2float_Muxi23u5u1_1_34_out1 or fix2float_Muxi22u5u1_1_35_ctrl1)
          begin :fix2float_Muxi22u5u1_1_35
            if (fix2float_Muxi22u5u1_1_35_ctrl1) begin
               fix2float_Muxi22u5u1_1_35_out1 = 5'd22;
            end
            else begin
               fix2float_Muxi22u5u1_1_35_out1 = fix2float_Muxi23u5u1_1_34_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi21u5u1_1_36_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi21u5u1_1_36_ctrl1
         // at: fix2float.h:135:31
         assign fix2float_Muxi21u5u1_1_36_ctrl1 = r_in_data[10];

         // rtl_instance:fix2float/fix2float_Muxi21u5u1_1
         always @(fix2float_Muxi22u5u1_1_35_out1 or fix2float_Muxi21u5u1_1_36_ctrl1)
          begin :fix2float_Muxi21u5u1_1_36
            if (fix2float_Muxi21u5u1_1_36_ctrl1) begin
               fix2float_Muxi21u5u1_1_36_out1 = 5'd21;
            end
            else begin
               fix2float_Muxi21u5u1_1_36_out1 = fix2float_Muxi22u5u1_1_35_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi20u5u1_1_37_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi20u5u1_1_37_ctrl1
         // at: fix2float.h:133:31
         assign fix2float_Muxi20u5u1_1_37_ctrl1 = r_in_data[11];

         // rtl_instance:fix2float/fix2float_Muxi20u5u1_1
         always @(fix2float_Muxi21u5u1_1_36_out1 or fix2float_Muxi20u5u1_1_37_ctrl1)
          begin :fix2float_Muxi20u5u1_1_37
            if (fix2float_Muxi20u5u1_1_37_ctrl1) begin
               fix2float_Muxi20u5u1_1_37_out1 = 5'd20;
            end
            else begin
               fix2float_Muxi20u5u1_1_37_out1 = fix2float_Muxi21u5u1_1_36_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi19u5u1_1_38_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi19u5u1_1_38_ctrl1
         // at: fix2float.h:131:31
         assign fix2float_Muxi19u5u1_1_38_ctrl1 = r_in_data[12];

         // rtl_instance:fix2float/fix2float_Muxi19u5u1_1
         always @(fix2float_Muxi20u5u1_1_37_out1 or fix2float_Muxi19u5u1_1_38_ctrl1)
          begin :fix2float_Muxi19u5u1_1_38
            if (fix2float_Muxi19u5u1_1_38_ctrl1) begin
               fix2float_Muxi19u5u1_1_38_out1 = 5'd19;
            end
            else begin
               fix2float_Muxi19u5u1_1_38_out1 = fix2float_Muxi20u5u1_1_37_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi18u5u1_1_39_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi18u5u1_1_39_ctrl1
         // at: fix2float.h:129:31
         assign fix2float_Muxi18u5u1_1_39_ctrl1 = r_in_data[13];

         // rtl_instance:fix2float/fix2float_Muxi18u5u1_1
         always @(fix2float_Muxi19u5u1_1_38_out1 or fix2float_Muxi18u5u1_1_39_ctrl1)
          begin :fix2float_Muxi18u5u1_1_39
            if (fix2float_Muxi18u5u1_1_39_ctrl1) begin
               fix2float_Muxi18u5u1_1_39_out1 = 5'd18;
            end
            else begin
               fix2float_Muxi18u5u1_1_39_out1 = fix2float_Muxi19u5u1_1_38_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi17u5u1_1_40_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi17u5u1_1_40_ctrl1
         // at: fix2float.h:127:31
         assign fix2float_Muxi17u5u1_1_40_ctrl1 = r_in_data[14];

         // rtl_instance:fix2float/fix2float_Muxi17u5u1_1
         always @(fix2float_Muxi18u5u1_1_39_out1 or fix2float_Muxi17u5u1_1_40_ctrl1)
          begin :fix2float_Muxi17u5u1_1_40
            if (fix2float_Muxi17u5u1_1_40_ctrl1) begin
               fix2float_Muxi17u5u1_1_40_out1 = 5'd17;
            end
            else begin
               fix2float_Muxi17u5u1_1_40_out1 = fix2float_Muxi18u5u1_1_39_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi16u5u1_1_41_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi16u5u1_1_41_ctrl1
         // at: fix2float.h:125:31
         assign fix2float_Muxi16u5u1_1_41_ctrl1 = r_in_data[15];

         // rtl_instance:fix2float/fix2float_Muxi16u5u1_1
         always @(fix2float_Muxi17u5u1_1_40_out1 or fix2float_Muxi16u5u1_1_41_ctrl1)
          begin :fix2float_Muxi16u5u1_1_41
            if (fix2float_Muxi16u5u1_1_41_ctrl1) begin
               fix2float_Muxi16u5u1_1_41_out1 = 5'd16;
            end
            else begin
               fix2float_Muxi16u5u1_1_41_out1 = fix2float_Muxi17u5u1_1_40_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi15u5u1_1_42_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi15u5u1_1_42_ctrl1
         // at: fix2float.h:123:31
         assign fix2float_Muxi15u5u1_1_42_ctrl1 = r_in_data[16];

         // rtl_instance:fix2float/fix2float_Muxi15u5u1_1
         always @(fix2float_Muxi16u5u1_1_41_out1 or fix2float_Muxi15u5u1_1_42_ctrl1)
          begin :fix2float_Muxi15u5u1_1_42
            if (fix2float_Muxi15u5u1_1_42_ctrl1) begin
               fix2float_Muxi15u5u1_1_42_out1 = 5'd15;
            end
            else begin
               fix2float_Muxi15u5u1_1_42_out1 = fix2float_Muxi16u5u1_1_41_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi14u5u1_1_43_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi14u5u1_1_43_ctrl1
         // at: fix2float.h:121:31
         assign fix2float_Muxi14u5u1_1_43_ctrl1 = r_in_data[17];

         // rtl_instance:fix2float/fix2float_Muxi14u5u1_1
         always @(fix2float_Muxi15u5u1_1_42_out1 or fix2float_Muxi14u5u1_1_43_ctrl1)
          begin :fix2float_Muxi14u5u1_1_43
            if (fix2float_Muxi14u5u1_1_43_ctrl1) begin
               fix2float_Muxi14u5u1_1_43_out1 = 5'd14;
            end
            else begin
               fix2float_Muxi14u5u1_1_43_out1 = fix2float_Muxi15u5u1_1_42_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi13u5u1_1_44_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi13u5u1_1_44_ctrl1
         // at: fix2float.h:119:31
         assign fix2float_Muxi13u5u1_1_44_ctrl1 = r_in_data[18];

         // rtl_instance:fix2float/fix2float_Muxi13u5u1_1
         always @(fix2float_Muxi14u5u1_1_43_out1 or fix2float_Muxi13u5u1_1_44_ctrl1)
          begin :fix2float_Muxi13u5u1_1_44
            if (fix2float_Muxi13u5u1_1_44_ctrl1) begin
               fix2float_Muxi13u5u1_1_44_out1 = 5'd13;
            end
            else begin
               fix2float_Muxi13u5u1_1_44_out1 = fix2float_Muxi14u5u1_1_43_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi12u5u1_1_45_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi12u5u1_1_45_ctrl1
         // at: fix2float.h:117:31
         assign fix2float_Muxi12u5u1_1_45_ctrl1 = r_in_data[19];

         // rtl_instance:fix2float/fix2float_Muxi12u5u1_1
         always @(fix2float_Muxi13u5u1_1_44_out1 or fix2float_Muxi12u5u1_1_45_ctrl1)
          begin :fix2float_Muxi12u5u1_1_45
            if (fix2float_Muxi12u5u1_1_45_ctrl1) begin
               fix2float_Muxi12u5u1_1_45_out1 = 5'd12;
            end
            else begin
               fix2float_Muxi12u5u1_1_45_out1 = fix2float_Muxi13u5u1_1_44_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi11u5u1_1_46_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi11u5u1_1_46_ctrl1
         // at: fix2float.h:115:31
         assign fix2float_Muxi11u5u1_1_46_ctrl1 = r_in_data[20];

         // rtl_instance:fix2float/fix2float_Muxi11u5u1_1
         always @(fix2float_Muxi12u5u1_1_45_out1 or fix2float_Muxi11u5u1_1_46_ctrl1)
          begin :fix2float_Muxi11u5u1_1_46
            if (fix2float_Muxi11u5u1_1_46_ctrl1) begin
               fix2float_Muxi11u5u1_1_46_out1 = 5'd11;
            end
            else begin
               fix2float_Muxi11u5u1_1_46_out1 = fix2float_Muxi12u5u1_1_45_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi10u5u1_1_47_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi10u5u1_1_47_ctrl1
         // at: fix2float.h:113:31
         assign fix2float_Muxi10u5u1_1_47_ctrl1 = r_in_data[21];

         // rtl_instance:fix2float/fix2float_Muxi10u5u1_1
         always @(fix2float_Muxi11u5u1_1_46_out1 or fix2float_Muxi10u5u1_1_47_ctrl1)
          begin :fix2float_Muxi10u5u1_1_47
            if (fix2float_Muxi10u5u1_1_47_ctrl1) begin
               fix2float_Muxi10u5u1_1_47_out1 = 5'd10;
            end
            else begin
               fix2float_Muxi10u5u1_1_47_out1 = fix2float_Muxi11u5u1_1_46_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi9u5u1_1_48_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi9u5u1_1_48_ctrl1
         // at: fix2float.h:111:31
         assign fix2float_Muxi9u5u1_1_48_ctrl1 = r_in_data[22];

         // rtl_instance:fix2float/fix2float_Muxi9u5u1_1
         always @(fix2float_Muxi10u5u1_1_47_out1 or fix2float_Muxi9u5u1_1_48_ctrl1)
          begin :fix2float_Muxi9u5u1_1_48
            if (fix2float_Muxi9u5u1_1_48_ctrl1) begin
               fix2float_Muxi9u5u1_1_48_out1 = 5'd09;
            end
            else begin
               fix2float_Muxi9u5u1_1_48_out1 = fix2float_Muxi10u5u1_1_47_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi8u5u1_1_49_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi8u5u1_1_49_ctrl1
         // at: fix2float.h:109:31
         assign fix2float_Muxi8u5u1_1_49_ctrl1 = r_in_data[23];

         // rtl_instance:fix2float/fix2float_Muxi8u5u1_1
         always @(fix2float_Muxi9u5u1_1_48_out1 or fix2float_Muxi8u5u1_1_49_ctrl1)
          begin :fix2float_Muxi8u5u1_1_49
            if (fix2float_Muxi8u5u1_1_49_ctrl1) begin
               fix2float_Muxi8u5u1_1_49_out1 = 5'd08;
            end
            else begin
               fix2float_Muxi8u5u1_1_49_out1 = fix2float_Muxi9u5u1_1_48_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi7u5u1_1_50_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi7u5u1_1_50_ctrl1
         // at: fix2float.h:107:31
         assign fix2float_Muxi7u5u1_1_50_ctrl1 = r_in_data[24];

         // rtl_instance:fix2float/fix2float_Muxi7u5u1_1
         always @(fix2float_Muxi8u5u1_1_49_out1 or fix2float_Muxi7u5u1_1_50_ctrl1)
          begin :fix2float_Muxi7u5u1_1_50
            if (fix2float_Muxi7u5u1_1_50_ctrl1) begin
               fix2float_Muxi7u5u1_1_50_out1 = 5'd07;
            end
            else begin
               fix2float_Muxi7u5u1_1_50_out1 = fix2float_Muxi8u5u1_1_49_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi6u5u1_1_51_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi6u5u1_1_51_ctrl1
         // at: fix2float.h:105:31
         assign fix2float_Muxi6u5u1_1_51_ctrl1 = r_in_data[25];

         // rtl_instance:fix2float/fix2float_Muxi6u5u1_1
         always @(fix2float_Muxi7u5u1_1_50_out1 or fix2float_Muxi6u5u1_1_51_ctrl1)
          begin :fix2float_Muxi6u5u1_1_51
            if (fix2float_Muxi6u5u1_1_51_ctrl1) begin
               fix2float_Muxi6u5u1_1_51_out1 = 5'd06;
            end
            else begin
               fix2float_Muxi6u5u1_1_51_out1 = fix2float_Muxi7u5u1_1_50_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi5u5u1_1_52_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi5u5u1_1_52_ctrl1
         // at: fix2float.h:103:31
         assign fix2float_Muxi5u5u1_1_52_ctrl1 = r_in_data[26];

         // rtl_instance:fix2float/fix2float_Muxi5u5u1_1
         always @(fix2float_Muxi6u5u1_1_51_out1 or fix2float_Muxi5u5u1_1_52_ctrl1)
          begin :fix2float_Muxi5u5u1_1_52
            if (fix2float_Muxi5u5u1_1_52_ctrl1) begin
               fix2float_Muxi5u5u1_1_52_out1 = 5'd05;
            end
            else begin
               fix2float_Muxi5u5u1_1_52_out1 = fix2float_Muxi6u5u1_1_51_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi4u5u1_1_53_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi4u5u1_1_53_ctrl1
         // at: fix2float.h:101:31
         assign fix2float_Muxi4u5u1_1_53_ctrl1 = r_in_data[27];

         // rtl_instance:fix2float/fix2float_Muxi4u5u1_1
         always @(fix2float_Muxi5u5u1_1_52_out1 or fix2float_Muxi4u5u1_1_53_ctrl1)
          begin :fix2float_Muxi4u5u1_1_53
            if (fix2float_Muxi4u5u1_1_53_ctrl1) begin
               fix2float_Muxi4u5u1_1_53_out1 = 5'd04;
            end
            else begin
               fix2float_Muxi4u5u1_1_53_out1 = fix2float_Muxi5u5u1_1_52_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi3u5u1_1_54_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi3u5u1_1_54_ctrl1
         // at: fix2float.h:99:31
         assign fix2float_Muxi3u5u1_1_54_ctrl1 = r_in_data[28];

         // rtl_instance:fix2float/fix2float_Muxi3u5u1_1
         always @(fix2float_Muxi4u5u1_1_53_out1 or fix2float_Muxi3u5u1_1_54_ctrl1)
          begin :fix2float_Muxi3u5u1_1_54
            if (fix2float_Muxi3u5u1_1_54_ctrl1) begin
               fix2float_Muxi3u5u1_1_54_out1 = 5'd03;
            end
            else begin
               fix2float_Muxi3u5u1_1_54_out1 = fix2float_Muxi4u5u1_1_53_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi2u5u1_1_55_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi2u5u1_1_55_ctrl1
         // at: fix2float.h:97:31
         assign fix2float_Muxi2u5u1_1_55_ctrl1 = r_in_data[29];

         // rtl_instance:fix2float/fix2float_Muxi2u5u1_1
         always @(fix2float_Muxi3u5u1_1_54_out1 or fix2float_Muxi2u5u1_1_55_ctrl1)
          begin :fix2float_Muxi2u5u1_1_55
            if (fix2float_Muxi2u5u1_1_55_ctrl1) begin
               fix2float_Muxi2u5u1_1_55_out1 = 5'd02;
            end
            else begin
               fix2float_Muxi2u5u1_1_55_out1 = fix2float_Muxi3u5u1_1_54_out1;
            end
         end

         // rtl_process:fix2float/drive_fix2float_Muxi1u5u1_1_56_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_Muxi1u5u1_1_56_ctrl1
         // at: fix2float.h:95:26
         assign fix2float_Muxi1u5u1_1_56_ctrl1 = r_in_data[30];

         // rtl_instance:fix2float/fix2float_Muxi1u5u1_1
         always @(fix2float_Muxi2u5u1_1_55_out1 or fix2float_Muxi1u5u1_1_56_ctrl1)
          begin :fix2float_Muxi1u5u1_1_56
            if (fix2float_Muxi1u5u1_1_56_ctrl1) begin
               fix2float_Muxi1u5u1_1_56_out1 = 5'd01;
            end
            else begin
               fix2float_Muxi1u5u1_1_56_out1 = fix2float_Muxi2u5u1_1_55_out1;
            end
         end

         // rtl_process:fix2float/drive_r_fraction_len
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_r_fraction_len
         // at: fix2float.h:230:64
         // at: fix2float.h:83:7
         // at: fix2float.h:87:7
         always @(posedge clk or negedge rstn)
          begin :drive_r_fraction_len
            if (rstn == 1'b0) begin
               // op:_r_fraction_len/OP30
               r_fraction_len <= 8'd000;
            end
            else begin
               // op:_r_fraction_len/OP34
               r_fraction_len <= fix2float_MuxSubu8i127i0u1_4_7_out1;
            end
         end

         // rtl_instance:fix2float/fix2float_MuxSubu8i127i0u1_4
         always @(fraction_len[7:0] or enable)
          begin :fix2float_MuxSubu8i127i0u1_4_7
            if (enable) begin
               fix2float_MuxSubu8i127i0u1_4_7_out1 = 8'd127 - fraction_len[7:0];
            end
            else begin
               fix2float_MuxSubu8i127i0u1_4_7_out1 = 8'd000;
            end
         end

         // rtl_process:fix2float/drive_r_in_data
         // Sharing or Control mux
         // Sharing/Controlling 36 operation(s) on drive_r_in_data
         // at: fix2float.h:61:7
         // at: fix2float.h:74:7
         // at: fix2float.h:164:19
         // at: fix2float.h:95:10
         // at: fix2float.h:97:15
         // at: fix2float.h:99:15
         // at: fix2float.h:101:15
         // at: fix2float.h:103:15
         // at: fix2float.h:105:15
         // at: fix2float.h:107:15
         // at: fix2float.h:109:15
         // at: fix2float.h:111:15
         // at: fix2float.h:113:15
         // at: fix2float.h:115:15
         // at: fix2float.h:117:15
         // at: fix2float.h:119:15
         // at: fix2float.h:121:15
         // at: fix2float.h:123:15
         // at: fix2float.h:125:15
         // at: fix2float.h:127:15
         // at: fix2float.h:129:15
         // at: fix2float.h:131:15
         // at: fix2float.h:133:15
         // at: fix2float.h:135:15
         // at: fix2float.h:137:15
         // at: fix2float.h:139:15
         // at: fix2float.h:141:15
         // at: fix2float.h:143:15
         // at: fix2float.h:145:15
         // at: fix2float.h:147:15
         // at: fix2float.h:149:15
         // at: fix2float.h:151:15
         // at: fix2float.h:153:15
         // at: fix2float.h:155:15
         // at: fix2float.h:181:20
         always @(posedge clk or negedge rstn)
          begin :drive_r_in_data
            if (rstn == 1'b0) begin
               // op:_r_in_data_sign/OP37
               r_in_data <= 32'd0000000000;
            end
            else begin
               // op:_r_in_data_sign/OP55
               r_in_data <= fix2float_N_Mux_32_2_49_4_14_out1;
            end
         end

         // rtl_process:fix2float/drive_r_sign
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_r_sign
         // at: fix2float.h:62:7
         // at: fix2float.h:75:7
         // at: fix2float.h:54:17
         always @(posedge clk or negedge rstn)
          begin :drive_r_sign
            if (rstn == 1'b0) begin
               // op:_r_in_data_sign/OP38
               r_sign <= 1'd0;
            end
            else begin
               // op:_r_in_data_sign/OP49
               r_sign <= fix2float_And_1Ux1U_1U_4_13_out1;
            end
         end

         // rtl_instance:fix2float/fix2float_NotBit_32S_32S_4_8
         // Resource=fix2float_NotBit_32S_32S_4, Function=not : Inputs=32S Outputs=32S
         // Implements 1 operation(s)
         // at: fix2float.h:70:20
         assign fix2float_NotBit_32S_32S_4_8_out1 = ~src;

         // rtl_instance:fix2float/fix2float_Add2i1s32_4_9
         // Resource=fix2float_Add2i1s32_4, Function=add : Inputs=32S Outputs=32S
         // Implements 1 operation(s)
         // at: fix2float.h:70:33
         assign fix2float_Add2i1s32_4_9_out1 = fix2float_NotBit_32S_32S_4_8_out1 + 32'd0000000001;

         // rtl_process:fix2float/drive_fix2float_N_Mux_32_2_51_4_10_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_fix2float_N_Mux_32_2_51_4_10_ctrl1
         // at: fix2float.h:69:20
         assign fix2float_N_Mux_32_2_51_4_10_ctrl1 = src[31];

         // rtl_instance:fix2float/fix2float_N_Mux_32_2_51_4
         always @(src or fix2float_Add2i1s32_4_9_out1 or fix2float_N_Mux_32_2_51_4_10_ctrl1)
          begin :fix2float_N_Mux_32_2_51_4_10
            if (fix2float_N_Mux_32_2_51_4_10_ctrl1) begin
               fix2float_N_Mux_32_2_51_4_10_out1 = fix2float_Add2i1s32_4_9_out1;
            end
            else begin
               fix2float_N_Mux_32_2_51_4_10_out1 = src;
            end
         end

         // rtl_instance:fix2float/fix2float_N_Muxb_1_2_9_4
         always @(src_valid or r_sign or fix2float_N_Mux_32_2_51_4_10_ctrl1)
          begin :fix2float_N_Muxb_1_2_9_4_11
            if (src_valid) begin
               fix2float_N_Muxb_1_2_9_4_11_out1 = fix2float_N_Mux_32_2_51_4_10_ctrl1;
            end
            else begin
               fix2float_N_Muxb_1_2_9_4_11_out1 = r_sign;
            end
         end

         // rtl_instance:fix2float/fix2float_N_Mux_32_2_51_4
         always @(src_valid or r_in_data or fix2float_N_Mux_32_2_51_4_10_out1)
          begin :fix2float_N_Mux_32_2_51_4_12
            if (src_valid) begin
               fix2float_N_Mux_32_2_51_4_12_out1 = fix2float_N_Mux_32_2_51_4_10_out1;
            end
            else begin
               fix2float_N_Mux_32_2_51_4_12_out1 = r_in_data;
            end
         end

         // rtl_instance:fix2float/fix2float_And_1Ux1U_1U_4_13
         // Resource=fix2float_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fix2float.h:64:10
         assign fix2float_And_1Ux1U_1U_4_13_out1 = fix2float_N_Muxb_1_2_9_4_11_out1 & enable;

         // rtl_instance:fix2float/fix2float_N_Mux_32_2_49_4
         always @(enable or fix2float_N_Mux_32_2_51_4_12_out1)
          begin :fix2float_N_Mux_32_2_49_4_14
            if (enable) begin
               fix2float_N_Mux_32_2_49_4_14_out1 = fix2float_N_Mux_32_2_51_4_12_out1;
            end
            else begin
               fix2float_N_Mux_32_2_49_4_14_out1 = 32'd0000000000;
            end
         end

         // rtl_process:fix2float/drive_src_valid_3d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_src_valid_3d
         // at: fix2float.h:243:19
         // at: fix2float.h:225:15
         // at: fix2float.h:41:7
         // at: fix2float.h:50:7
         always @(posedge clk or negedge rstn)
          begin :drive_src_valid_3d
            if (rstn == 1'b0) begin
               // op:_delay/OP271
               src_valid_3d <= 1'd0;
            end
            else begin
               // op:_delay/OP290
               src_valid_3d <= src_valid_2d;
            end
         end

         // rtl_process:fix2float/drive_r3_zero_sig
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_r3_zero_sig
         // at: fix2float.h:227:14
         // at: fix2float.h:44:7
         // at: fix2float.h:53:7
         always @(posedge clk or negedge rstn)
          begin :drive_r3_zero_sig
            if (rstn == 1'b0) begin
               // op:_delay/OP274
               r3_zero_sig <= 1'd0;
            end
            else begin
               // op:_delay/OP287
               r3_zero_sig <= r2_zero_sig;
            end
         end

         // rtl_process:fix2float/drive_src_valid_2d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_src_valid_2d
         // at: fix2float.h:191:15
         // at: fix2float.h:40:7
         // at: fix2float.h:49:7
         always @(posedge clk or negedge rstn)
          begin :drive_src_valid_2d
            if (rstn == 1'b0) begin
               // op:_delay/OP270
               src_valid_2d <= 1'd0;
            end
            else begin
               // op:_delay/OP291
               src_valid_2d <= src_valid_1d;
            end
         end

         // rtl_process:fix2float/drive_r2_zero_sig
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_r2_zero_sig
         // at: fix2float.h:196:14
         // at: fix2float.h:43:7
         // at: fix2float.h:52:7
         always @(posedge clk or negedge rstn)
          begin :drive_r2_zero_sig
            if (rstn == 1'b0) begin
               // op:_delay/OP273
               r2_zero_sig <= 1'd0;
            end
            else begin
               // op:_delay/OP288
               r2_zero_sig <= fix2float_Not_1U_1U_1_18_out1;
            end
         end

         // rtl_process:fix2float/drive_r2_sign
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_r2_sign
         // at: fix2float.h:210:15
         // at: fix2float.h:45:7
         // at: fix2float.h:54:7
         always @(posedge clk or negedge rstn)
          begin :drive_r2_sign
            if (rstn == 1'b0) begin
               // op:_delay/OP275
               r2_sign <= 1'd0;
            end
            else begin
               // op:_delay/OP286
               r2_sign <= r_sign;
            end
         end

         // rtl_process:fix2float/drive_src_valid_1d
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_src_valid_1d
         // at: fix2float.h:176:15
         // at: fix2float.h:39:7
         // at: fix2float.h:48:7
         always @(posedge clk or negedge rstn)
          begin :drive_src_valid_1d
            if (rstn == 1'b0) begin
               // op:_delay/OP269
               src_valid_1d <= 1'd0;
            end
            else begin
               // op:_delay/OP292
               src_valid_1d <= src_valid;
            end
         end

         // rtl_process:fix2float/drive_r2_shift_num
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_r2_shift_num
         // at: fix2float.h:166:18
         // at: fix2float.h:42:7
         // at: fix2float.h:51:7
         always @(posedge clk or negedge rstn)
          begin :drive_r2_shift_num
            if (rstn == 1'b0) begin
               // op:_delay/OP272
               r2_shift_num <= 5'd00;
            end
            else begin
               // op:_delay/OP289
               r2_shift_num <= fix2float_Muxi1u5u1_1_56_out1;
            end
         end


endmodule


