// Generated by stratus_hls 19.10-p100  (91500.011111)
// Wed Jan  6 18:27:00 2021
// from fp_cmp.cpp

`timescale 1ps / 1ps

      
module fp_cmp(clk, rstn, enable, src_valid, a_man, a_exp, a_sign, b_man, b_exp, b_sign, r_man, r_exp, r_sign, dst_valid);

      input clk;
      input rstn;
      input enable;
      input src_valid;
      input [22:0] a_man;
      input [7:0] a_exp;
      input a_sign;
      input [22:0] b_man;
      input [7:0] b_exp;
      input b_sign;
      output [22:0] r_man;
      reg [22:0] r_man;
      output [7:0] r_exp;
      reg [7:0] r_exp;
      output r_sign;
      reg r_sign;
      output dst_valid;
      reg dst_valid;
      wire fp_cmp_cynw_cm_float_ltle_4_2_amtmp039;
      wire fp_cmp_cynw_cm_float_ltle_4_2_amtmp011;
      wire[30:0] fp_cmp_cynw_cm_float_ltle_4_2_amtmp008;
      wire[30:0] fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp013;
      wire fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp046;
      wire fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp040;
      wire fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp030;
      wire fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp015;
      reg fp_cmp_N_Mux_1_2_4_4_13_out1;
      reg[7:0] fp_cmp_N_Mux_8_2_6_4_11_out1;
      reg[22:0] fp_cmp_N_Mux_23_2_8_4_10_out1;
      wire fp_cmp_And_1Ux1U_1U_4_8_out1;
      wire fp_cmp_OrReduction_2S_1U_4_7_out1;
      wire fp_cmp_Not_1U_1U_4_5_out1;
      wire fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0;
      wire fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocbSign_i0_u0;
      reg u_597;
      wire fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp014;
      /*signed*/wire[1:0] fp_cmp_cynw_cm_float_ltle_alt0_1_4_out1;
      wire fp_cmp_OrReduction_2S_1U_4_3_out1;
      wire fp_cmp_cynw_cm_float_ltle_4_2_ocaSign_u0;
      reg u_598;
      wire fp_cmp_cynw_cm_float_ltle_4_2_amtmp010;
      /*signed*/wire[1:0] fp_cmp_cynw_cm_float_ltle_4_2_out1;
      reg[22:0] fp_cmp_Muxu23i0u1_4_14_out1;
      reg[7:0] fp_cmp_Muxu8i0u1_4_15_out1;
      wire fp_cmp_And_1Ux1U_1U_4_16_out1;
      wire fp_cmp_And_1Ux1U_1U_4_1_out1;

         // rtl_process:fp_cmp/drive_dst_valid
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_dst_valid
         // at: fp_cmp.h:47:7
         // at: fp_cmp.h:51:7
         always @(posedge clk or negedge rstn)
          begin :drive_dst_valid
            if (rstn == 1'b0) begin
               // op:_dst_valid/OP0
               dst_valid <= 1'd0;
            end
            else begin
               // op:_dst_valid/OP4
               dst_valid <= fp_cmp_And_1Ux1U_1U_4_1_out1;
            end
         end

         // rtl_instance:fp_cmp/fp_cmp_And_1Ux1U_1U_4_1
         // Resource=fp_cmp_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fp_cmp.h:48:10
         assign fp_cmp_And_1Ux1U_1U_4_1_out1 = enable & src_valid;

         // rtl_process:fp_cmp/drive_r_sign
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_r_sign
         // at: cynw_cm_float_int.h:409:14
         always @(posedge clk or negedge rstn)
          begin :drive_r_sign
            if (rstn == 1'b0) begin
               // op:_float_cmp/OP7
               r_sign <= 1'b0;
            end
            else begin
               // op:_float_cmp/OP34
               r_sign <= fp_cmp_And_1Ux1U_1U_4_16_out1;
            end
         end

         // rtl_process:fp_cmp/drive_r_exp
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_r_exp
         // at: cynw_cm_float_int.h:408:14
         always @(posedge clk or negedge rstn)
          begin :drive_r_exp
            if (rstn == 1'b0) begin
               // op:_float_cmp/OP8
               r_exp <= 8'd000;
            end
            else begin
               // op:_float_cmp/OP28
               r_exp <= fp_cmp_Muxu8i0u1_4_15_out1;
            end
         end

         // rtl_process:fp_cmp/drive_r_man
         // Sharing or Control mux
         // Sharing/Controlling 2 operation(s) on drive_r_man
         // at: cynw_cm_float_int.h:407:14
         always @(posedge clk or negedge rstn)
          begin :drive_r_man
            if (rstn == 1'b0) begin
               // op:_float_cmp/OP9
               r_man <= 23'd0000000;
            end
            else begin
               // op:_float_cmp/OP25
               r_man <= fp_cmp_Muxu23i0u1_4_14_out1;
            end
         end

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_4_2
         // Resource=fp_cmp_cynw_cm_float_ltle_4, Function=mux mux mux mux not not not not not and and and and and and or or or or lt lt lt lt : Inputs=1,8,23 Outputs=2S
         // Implements 1 operation(s)
         // at: cynw_cm_float_int.h:1850:3
         assign fp_cmp_cynw_cm_float_ltle_4_2_out1 = {1'b0, (fp_cmp_cynw_cm_float_ltle_4_2_ocaSign_u0 | u_598) & !fp_cmp_cynw_cm_float_ltle_4_2_amtmp010};

         // rtl_instance:fp_cmp/fp_cmp_OrReduction_2S_1U_4_3
         // Resource=fp_cmp_OrReduction_2S_1U_4, Function=or : Inputs=2S Outputs=1
         // Implements 2 operation(s)
         // at: cynw_cm_float_int.h:1850:3
         assign fp_cmp_OrReduction_2S_1U_4_3_out1 = (|fp_cmp_cynw_cm_float_ltle_4_2_out1);

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // Resource=fp_cmp_cynw_cm_float_ltle_alt0_1, Function=mux mux mux mux not not not not not and and and and and and and and and or or or or or or or lt lt lt lt : Inputs=1,8,23,8,23,1 Outputs=2S
         // Implements 1 operation(s)
         // at: cynw_cm_float_int.h:1850:3
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_out1 = {1'b0, (fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0 & ~fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocbSign_i0_u0 | (fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0 | ~fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocbSign_i0_u0) & u_597) & ~fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp014};

         // rtl_instance:fp_cmp/fp_cmp_Not_1U_1U_4_5
         // Resource=fp_cmp_Not_1U_1U_4, Function=not : Inputs=1 Outputs=1
         // Implements 2 operation(s)
         // at: cynw_cm_float_int.h:1850:3
         assign fp_cmp_Not_1U_1U_4_5_out1 = !fp_cmp_OrReduction_2S_1U_4_3_out1;

         // rtl_instance:fp_cmp/fp_cmp_OrReduction_2S_1U_4_7
         // Resource=fp_cmp_OrReduction_2S_1U_4, Function=or : Inputs=2S Outputs=1
         // Implements 1 operation(s)
         // at: cynw_cm_float_int.h:1850:3
         assign fp_cmp_OrReduction_2S_1U_4_7_out1 = (|fp_cmp_cynw_cm_float_ltle_alt0_1_4_out1);

         // rtl_instance:fp_cmp/fp_cmp_And_1Ux1U_1U_4_8
         // Resource=fp_cmp_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 2 operation(s)
         // at: fp_cmp.h:28:14
         assign fp_cmp_And_1Ux1U_1U_4_8_out1 = fp_cmp_Not_1U_1U_4_5_out1 & enable;

         // rtl_instance:fp_cmp/fp_cmp_N_Mux_23_2_8_4
         always @(b_man or a_man or fp_cmp_OrReduction_2S_1U_4_7_out1)
          begin :fp_cmp_N_Mux_23_2_8_4_10
            if (fp_cmp_OrReduction_2S_1U_4_7_out1) begin
               fp_cmp_N_Mux_23_2_8_4_10_out1 = b_man;
            end
            else begin
               fp_cmp_N_Mux_23_2_8_4_10_out1 = a_man;
            end
         end

         // rtl_instance:fp_cmp/fp_cmp_N_Mux_8_2_6_4
         always @(b_exp or a_exp or fp_cmp_OrReduction_2S_1U_4_7_out1)
          begin :fp_cmp_N_Mux_8_2_6_4_11
            if (fp_cmp_OrReduction_2S_1U_4_7_out1) begin
               fp_cmp_N_Mux_8_2_6_4_11_out1 = b_exp;
            end
            else begin
               fp_cmp_N_Mux_8_2_6_4_11_out1 = a_exp;
            end
         end

         // rtl_instance:fp_cmp/fp_cmp_N_Mux_1_2_4_4
         always @(b_sign or a_sign or fp_cmp_OrReduction_2S_1U_4_7_out1)
          begin :fp_cmp_N_Mux_1_2_4_4_13
            if (fp_cmp_OrReduction_2S_1U_4_7_out1) begin
               fp_cmp_N_Mux_1_2_4_4_13_out1 = b_sign;
            end
            else begin
               fp_cmp_N_Mux_1_2_4_4_13_out1 = a_sign;
            end
         end

         // rtl_instance:fp_cmp/fp_cmp_Muxu23i0u1_4
         always @(fp_cmp_And_1Ux1U_1U_4_8_out1 or fp_cmp_N_Mux_23_2_8_4_10_out1)
          begin :fp_cmp_Muxu23i0u1_4_14
            if (fp_cmp_And_1Ux1U_1U_4_8_out1) begin
               fp_cmp_Muxu23i0u1_4_14_out1 = fp_cmp_N_Mux_23_2_8_4_10_out1;
            end
            else begin
               fp_cmp_Muxu23i0u1_4_14_out1 = 23'd0000000;
            end
         end

         // rtl_instance:fp_cmp/fp_cmp_Muxu8i0u1_4
         always @(fp_cmp_And_1Ux1U_1U_4_8_out1 or fp_cmp_N_Mux_8_2_6_4_11_out1)
          begin :fp_cmp_Muxu8i0u1_4_15
            if (fp_cmp_And_1Ux1U_1U_4_8_out1) begin
               fp_cmp_Muxu8i0u1_4_15_out1 = fp_cmp_N_Mux_8_2_6_4_11_out1;
            end
            else begin
               fp_cmp_Muxu8i0u1_4_15_out1 = 8'd000;
            end
         end

         // rtl_instance:fp_cmp/fp_cmp_And_1Ux1U_1U_4_16
         // Resource=fp_cmp_And_1Ux1U_1U_4, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: fp_cmp.h:28:9
         assign fp_cmp_And_1Ux1U_1U_4_16_out1 = fp_cmp_N_Mux_1_2_4_4_13_out1 & fp_cmp_And_1Ux1U_1U_4_8_out1;

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp014 = (&b_exp) & (|b_man) | (&a_exp) & (|a_man);

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0 = (|{b_exp, b_man}) & b_sign;

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp015 = a_man < b_man;

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp030 = b_man < a_man;

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp040 = a_exp < b_exp;

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp046 = b_exp < a_exp;

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocbSign_i0_u0 = (|fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp013) & a_sign;

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         assign fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp013 = {a_exp, a_man};

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_alt0_1_4
         // This resource is split across multiple concurrent processes.
         // See line:117
         always @(fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0 or fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp015 or fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp030 or fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp040 or fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp046)
          begin :mux_597
            if (fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp046) begin
               u_597 = ~fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0;
            end
            else begin
               if (fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp040) begin
                  u_597 = fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0;
               end
               else begin
                  if (fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp030) begin
                     u_597 = ~fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0;
                  end
                  else begin
                     if (fp_cmp_cynw_cm_float_ltle_alt0_1_4_amtmp015) begin
                        u_597 = fp_cmp_cynw_cm_float_ltle_alt0_1_4_ocaSign_i0_u0;
                     end
                     else begin
                        u_597 = 1'b0;
                     end
                  end
               end
            end
         end

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_4_2
         // This resource is split across multiple concurrent processes.
         // See line:111
         assign fp_cmp_cynw_cm_float_ltle_4_2_amtmp010 = (&a_exp) & (|a_man);

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_4_2
         // This resource is split across multiple concurrent processes.
         // See line:111
         assign fp_cmp_cynw_cm_float_ltle_4_2_ocaSign_u0 = (|fp_cmp_cynw_cm_float_ltle_4_2_amtmp008) & a_sign;

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_4_2
         // This resource is split across multiple concurrent processes.
         // See line:111
         assign fp_cmp_cynw_cm_float_ltle_4_2_amtmp011 = (|a_man);

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_4_2
         // This resource is split across multiple concurrent processes.
         // See line:111
         assign fp_cmp_cynw_cm_float_ltle_4_2_amtmp039 = (|a_exp);

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_4_2
         // This resource is split across multiple concurrent processes.
         // See line:111
         assign fp_cmp_cynw_cm_float_ltle_4_2_amtmp008 = {a_exp, a_man};

         // rtl_instance:fp_cmp/fp_cmp_cynw_cm_float_ltle_4_2
         // This resource is split across multiple concurrent processes.
         // See line:111
         always @(fp_cmp_cynw_cm_float_ltle_4_2_ocaSign_u0 or fp_cmp_cynw_cm_float_ltle_4_2_amtmp011 or fp_cmp_cynw_cm_float_ltle_4_2_amtmp039)
          begin :mux_598
            if (fp_cmp_cynw_cm_float_ltle_4_2_amtmp039) begin
               u_598 = fp_cmp_cynw_cm_float_ltle_4_2_ocaSign_u0;
            end
            else begin
               if (fp_cmp_cynw_cm_float_ltle_4_2_amtmp011) begin
                  u_598 = fp_cmp_cynw_cm_float_ltle_4_2_ocaSign_u0;
               end
               else begin
                  u_598 = 1'b0;
               end
            end
         end


endmodule


