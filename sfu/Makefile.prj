
##############################################################################
# Makefile generated by bdw_makegen version 19.10-p100
#      Cadence Design Systems
#      Thu Jan 28 20:22:50 KST 2021
#          Project file was <project.tcl>
##############################################################################

######################################################################
## Exported variables.  
## Each of these variables will be accessible to all child processes.
######################################################################

export BDW_TECH_LIBS	=	/usr/cadence/installs/Stratus/share/stratus/techlibs/GPDK045/gsclib045_svt_v4.4/gsclib045/timing/slow_vdd1v2_basicCells.lib
export BDW_WORKLIB
ifeq ($(BDW_WORKLIB),)
	BDW_WORKLIB = bdw_work
endif

ifeq ($(shell if `which bdw_shell >&/dev/null` ; then echo 1; fi),1)
export STRATUS_HOME := $(shell echo "puts [get_install_path]" | bdw_shell)
else
export STRATUS_HOME := /usr/cadence/installs/Stratus
endif
export STRATUS_PLATFORM := lnx86

export BDW_TCL_DIR = $(STRATUS_HOME)/share/stratus/tcl


export BDW_SYSTEMC_VERSION = 2.3.1


# Use internal SystemC 2.3.1 for simulation
export SYSTEMC := $(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/systemc/2.3.1


# Use builtin gcc 4.8 for simulations.
export BDW_CC := $(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/gcc/4.8/bin/g++
export BDW_AR := $(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/gcc/4.8/bin/ar rc
export BDW_CCDEP := $(BDW_CC)
export BDW_LINK := $(BDW_CC)


export BDW_USE_ESCLIB = 1
export BDW_VERILOG_DIALECT = 1995
export BDW_OBJDIR		=	$(BDW_WORKLIB)/objs
export BDW_SIMDIR		=	$(BDW_WORKLIB)/sims
export BDW_MODULEDIR	=	$(BDW_WORKLIB)/modules
export BDW_LIBDIR		=	$(BDW_WORKLIB)/libs
export BDW_WRAPDIR		=	$(BDW_WORKLIB)/wrappers
export BDW_HLSLIB_DIRS
export BDW_HLSLIB_NAMES
export BDW_PROJECT_FILE =   project.tcl
export BDW_SIM_CONFIG
export BDW_SIM_CONFIG_DIR
export BDW_LS_CONFIG
export BDW_LS_CONFIG_DIR
export BDW_LS_CONFIG_LOGS
export BDW_VRTL_FILE
export BDW_MODULE
export BDW_HLS_CONFIG
export BDW_HLS_CONFIG_DIR
export BDW_CYNTH_CONFIG
export BDW_CYNTH_CONFIG_DIR
export BDW_LS_INFO

export BDW_COWARE = 0
export BDW_COWARE_LOAD_FLAGS
export BDW_COWARE_PREPROC_FLAGS
export BDW_VISTA = 0
export BDW_NCSC = 0
export BDW_XMSC = 0
export BDW_VLOGSIM_ARGS
export BDW_VLOGCOMP_ARGS
export BDW_VLOG_LIBS
export BDW_VLOG_DEFINES
export BDW_VLOG_DUT_FILES
export BDW_EXTRA_LDFLAGS
export BDW_EXTRA_LIBS
export BDW_EXTRA_LIB_FLAGS
export BDW_COV_LIB_FLAGS
export BDW_EXTRA_CCFLAGS
export BDW_CCOPTIONS
export BDW_SCSIM_ARGS
export BDW_HUB_ARGV
export BDW_USE_SCV
export BDW_FSDBVCSPLATFORM
BDW_FSDBVCSPLATFORM = LINUX64
export BDW_USE_SCV = 0
ifeq ($(CM_USERLOGDIR),)
	export CM_USERLOGDIR = $(shell pwd)/$(BDW_WORKLIB)/tmp
endif
ifeq ($(CM_USERTMPDIR),)
	export CM_USERTMPDIR = $(shell pwd)/$(BDW_WORKLIB)/tmp
endif

# Provide backwards compatibility with CONF variable used in some applications
# to set the configuration on the command line.
ifneq ($(CONF),)
	BDW_SIM_CONFIG = $(CONF)
endif

######################################################################
## Definitions for remote execution
######################################################################
export BDW_EXEC_CMD
export BDW_PMAKE_FLG
ifeq ($(BDW_EXEC_CMD),)
    BDW_EXEC_CMD=
endif

######################################################################
## Definitions for compilation and synthesis
######################################################################

MAKE			   = make --no-print-directory -f $(firstword $(MAKEFILE_LIST))
PERL			   = perl
CYNTHHL			   = ${STRATUS_HOME}/bin/stratus_hls
CYNTHVLG		   = ${STRATUS_HOME}/bin/stratus_vlg --project project.tcl
ifneq ($(BDW_TMPLNK_DIR),)
BDW_TMPLNK_FILE    := $(shell $(STRATUS_HOME)/bin/bdw_tmpfile $(BDW_TMPLNK_DIR)/BDWLNK.$(USER).XXXXXX)
endif

######################################################################
## Set variables for and include BDW common Makefile bdw.mak
######################################################################

export BDW_USEHUB	   = $(BDW_USE_ESCLIB)
export BDW_USECYNTH	   = 1
export BDW_WRITEFSDB   = 0
ifeq ($(BDW_WRITEFSDB),1)
	export BDW_NOVAS_INST_DIR = $(shell $(STRATUS_HOME)/bin/bdw_find_novas_install)
	ifeq ($(wildcard $(BDW_NOVAS_INST_DIR)/share/PLI/VCS*),$(BDW_NOVAS_INST_DIR)/share/PLI/VCS)
		# The PLI/VCS dir is an indication that this is a 2010 or later Novas release, and we can use automatic VCS platform selection.
		BDW_FSDB_VCS_ARGS = -debug_pp -LDFLAGS -Wl,-rpath,$(BDW_NOVAS_INST_DIR)/share/PLI/VCS/$(BDW_FSDBVCSPLATFORM) -P $(BDW_NOVAS_INST_DIR)/share/PLI/VCS/$(BDW_FSDBVCSPLATFORM)/novas.tab $(BDW_NOVAS_INST_DIR)/share/PLI/VCS/$(BDW_FSDBVCSPLATFORM)/pli.a
	else
		# For older versions of Novas, use vcs_latest, which works with all supported VCS versions.
		BDW_FSDB_VCS_ARGS = -P $(BDW_NOVAS_INST_DIR)/share/PLI/vcs_latest/$(BDW_FSDBVCSPLATFORM)/novas.tab $(BDW_NOVAS_INST_DIR)/share/PLI/vcs_latest/$(BDW_FSDBVCSPLATFORM)/pli.a
	endif
else
	BDW_FSDB_VCS_ARGS =
endif
BDW_INCLUDE_DIRS = 
BDW_CCFLAGS        = -I./ -I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(addprefix -I,$(BDW_INCLUDE_DIRS))
ifneq ($(BDW_SIM_CONFIG),)
    BDW_SOURCES		   += 
endif
BDW_CCOPTIONS	   = -DCLOCK_PERIOD=2.0 -g 
BDW_COV_LIB_FLAGS = 
BDW_DEP_FILTER	   = | bdw_depfilter project.tcl

VPATH += $(BDW_INCLUDE_DIRS)

vpath %.bdt $(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/lib

BDW_LOGOPTIONS_FILE = $(BDW_WRAPDIR)/.logOptions

# rule to create .logOptions if it gets accidentally removed
$(BDW_LOGOPTIONS_FILE): project.tcl
	@bdw_makegen project.tcl -q 

######################################################################
## Start of Configurations
######################################################################
BDW_SHAREDLIB		=	0
BDW_VLOG_DUT_FILES	=	
VLOG_COSIM_TOP	=
BDW_ALL_WRAPPERS    =


HL_FLAGS           = --logfile=stratus_hls.log -I. -I$(BDW_WRAPDIR) -I$(STRATUS_HOME)/share/stratus/include  $(BDW_EXTRA_HLFLAGS) $(addprefix --tl=,$(BDW_TECH_LIBS)) --clock_period=1.400 --default_input_delay=0.100 --flatten_arrays=none --message_detail=3 --path_delay_limit=100.000 --rtl_annotation=op,stack
VLG_FLAGS          = -DBDW_RTL=1 -I$(BDW_WRAPDIR)  $(BDW_EXTRA_VLGFLAGS)

HL_FLAGS_avg_pool_BASIC	= -DBASIC=1 -DBDW_RTL_avg_pool_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_avg_pool_BASIC)))
HL_FLAGS_avg_pool_DPA	= -DDPA=1 -DBDW_RTL_avg_pool_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_avg_pool_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/avg_pool_wrap.h
HL_FLAGS_in_buff_BASIC	= -DBASIC=1 -DBDW_RTL_in_buff_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_in_buff_BASIC)))
HL_FLAGS_in_buff_DPA	= -DDPA=1 -DBDW_RTL_in_buff_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_in_buff_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/in_buff_wrap.h
HL_FLAGS_fix2float_BASIC	= -DBASIC=1 -DBDW_RTL_fix2float_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fix2float_BASIC)))
HL_FLAGS_fix2float_DPA	= -DDPA=1 -DBDW_RTL_fix2float_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fix2float_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/fix2float_wrap.h
HL_FLAGS_fp_div_BASIC	= -DBASIC=1 -DBDW_RTL_fp_div_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_div_BASIC)))
HL_FLAGS_fp_div_DPA	= -DDPA=1 -DBDW_RTL_fp_div_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_div_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/fp_div_wrap.h
HL_FLAGS_linear_dequant_BASIC	= -DBASIC=1 -DBDW_RTL_linear_dequant_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_linear_dequant_BASIC)))
HL_FLAGS_linear_dequant_DPA	= -DDPA=1 -DBDW_RTL_linear_dequant_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_linear_dequant_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.h
HL_FLAGS_fp_mul_BASIC	= -DBASIC=1 -DBDW_RTL_fp_mul_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_mul_BASIC)))
HL_FLAGS_fp_mul_DPA	= -DDPA=1 -DBDW_RTL_fp_mul_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_mul_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h
HL_FLAGS_fp_add_BASIC	= -DBASIC=1 -DBDW_RTL_fp_add_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_add_BASIC)))
HL_FLAGS_fp_add_DPA	= -DDPA=1 -DBDW_RTL_fp_add_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_add_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/fp_add_wrap.h
HL_FLAGS_bn_float32_BASIC	= -DBASIC=1 -DBDW_RTL_bn_float32_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_bn_float32_BASIC)))
HL_FLAGS_bn_float32_DPA	= -DDPA=1 -DBDW_RTL_bn_float32_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_bn_float32_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/bn_float32_wrap.h
HL_FLAGS_fp_cmp_BASIC	= -DBASIC=1 -DBDW_RTL_fp_cmp_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_cmp_BASIC)))
HL_FLAGS_fp_cmp_DPA	= -DDPA=1 -DBDW_RTL_fp_cmp_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_cmp_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h
HL_FLAGS_relu_offset_float_BASIC	= -DBASIC=1 -DBDW_RTL_relu_offset_float_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_relu_offset_float_BASIC)))
HL_FLAGS_relu_offset_float_DPA	= -DDPA=1 -DBDW_RTL_relu_offset_float_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_relu_offset_float_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.h
HL_FLAGS_learn_clip_BASIC	= -DBASIC=1 -DBDW_RTL_learn_clip_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_learn_clip_BASIC)))
HL_FLAGS_learn_clip_DPA	= -DDPA=1 -DBDW_RTL_learn_clip_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_learn_clip_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/learn_clip_wrap.h
HL_FLAGS_float2fix_BASIC	= -DBASIC=1 -DBDW_RTL_float2fix_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_float2fix_BASIC)))
HL_FLAGS_float2fix_DPA	= -DDPA=1 -DBDW_RTL_float2fix_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_float2fix_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/float2fix_wrap.h
HL_FLAGS_m_float2fix_BASIC	= -DBASIC=1 -DBDW_RTL_m_float2fix_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_m_float2fix_BASIC)))
HL_FLAGS_m_float2fix_DPA	= -DDPA=1 -DBDW_RTL_m_float2fix_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_m_float2fix_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.h
HL_FLAGS_bias_add_BASIC	= -DBASIC=1 -DBDW_RTL_bias_add_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_bias_add_BASIC)))
HL_FLAGS_bias_add_DPA	= -DDPA=1 -DBDW_RTL_bias_add_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_bias_add_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/bias_add_wrap.h
HL_FLAGS_sfu_out_buff_BASIC	= -DBASIC=1 -DBDW_RTL_sfu_out_buff_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_sfu_out_buff_BASIC)))
HL_FLAGS_sfu_out_buff_DPA	= -DDPA=1 -DBDW_RTL_sfu_out_buff_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_sfu_out_buff_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.h
HL_FLAGS_finish_gen_BASIC	= -DBASIC=1 -DBDW_RTL_finish_gen_BASIC=1 --clock_period=1.400 $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_finish_gen_BASIC)))
HL_FLAGS_finish_gen_DPA	= -DDPA=1 -DBDW_RTL_finish_gen_DPA=1 --clock_period=1.400 --dpopt_auto=op,expr $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_finish_gen_DPA)))
BDW_ALL_WRAPPERS += $(BDW_WORKLIB)/wrappers/finish_gen_wrap.h
ifeq ($(BDW_SIM_CONFIG),B)



SIM_OBJS			=	$(BDW_WORKLIB)/objs/avg_pool.o $(BDW_WORKLIB)/objs/in_buff.o $(BDW_WORKLIB)/objs/fix2float.o $(BDW_WORKLIB)/objs/fp_div.o $(BDW_WORKLIB)/objs/linear_dequant.o $(BDW_WORKLIB)/objs/fp_mul.o $(BDW_WORKLIB)/objs/fp_add.o $(BDW_WORKLIB)/objs/bn_float32.o $(BDW_WORKLIB)/objs/fp_cmp.o $(BDW_WORKLIB)/objs/relu_offset_float.o $(BDW_WORKLIB)/objs/learn_clip.o $(BDW_WORKLIB)/objs/float2fix.o $(BDW_WORKLIB)/objs/m_float2fix.o $(BDW_WORKLIB)/objs/bias_add.o $(BDW_WORKLIB)/objs/sfu_out_buff.o $(BDW_WORKLIB)/objs/finish_gen.o $(BDW_OBJS)
SIM_RTL_SRCS		=	avg_pool.cpp in_buff.cpp fix2float.cpp fp_div.cpp linear_dequant.cpp fp_mul.cpp fp_add.cpp bn_float32.cpp fp_cmp.cpp relu_offset_float.cpp learn_clip.cpp float2fix.cpp m_float2fix.cpp bias_add.cpp sfu_out_buff.cpp finish_gen.cpp
VLOG_COSIM_TOP		=	
BDW_NCSC_COV_OPTS   =   
BDW_VLOG_DUT_FILES	+=	 
BDW_VLOG_LIBS		=	
BDW_VLOG_DEFINES	=	
BDW_VLOG_TOP_MODS   =   
BDW_CPARTS_A		=	$(cynw_cm_float_C_PARTS_A)
BDW_LIBPREP			=	prep_c_cynw_cm_float
BDW_LIBREF          =   $(BDW_WORKLIB)/INCA_libs/bdw_worklib
BDW_LIBREF_ARGS     =   $(addprefix -reflib ,$(BDW_LIBREF))
DEP_FILES			+=	$(BDW_WORKLIB)/wrappers/avg_pool_wrap.d $(BDW_WORKLIB)/modules/avg_pool//avg_pool.d $(BDW_WORKLIB)/wrappers/in_buff_wrap.d $(BDW_WORKLIB)/modules/in_buff//in_buff.d $(BDW_WORKLIB)/wrappers/fix2float_wrap.d $(BDW_WORKLIB)/modules/fix2float//fix2float.d $(BDW_WORKLIB)/wrappers/fp_div_wrap.d $(BDW_WORKLIB)/modules/fp_div//fp_div.d $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.d $(BDW_WORKLIB)/modules/linear_dequant//linear_dequant.d $(BDW_WORKLIB)/wrappers/fp_mul_wrap.d $(BDW_WORKLIB)/modules/fp_mul//fp_mul.d $(BDW_WORKLIB)/wrappers/fp_add_wrap.d $(BDW_WORKLIB)/modules/fp_add//fp_add.d $(BDW_WORKLIB)/wrappers/bn_float32_wrap.d $(BDW_WORKLIB)/modules/bn_float32//bn_float32.d $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.d $(BDW_WORKLIB)/modules/fp_cmp//fp_cmp.d $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.d $(BDW_WORKLIB)/modules/relu_offset_float//relu_offset_float.d $(BDW_WORKLIB)/wrappers/learn_clip_wrap.d $(BDW_WORKLIB)/modules/learn_clip//learn_clip.d $(BDW_WORKLIB)/wrappers/float2fix_wrap.d $(BDW_WORKLIB)/modules/float2fix//float2fix.d $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.d $(BDW_WORKLIB)/modules/m_float2fix//m_float2fix.d $(BDW_WORKLIB)/wrappers/bias_add_wrap.d $(BDW_WORKLIB)/modules/bias_add//bias_add.d $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.d $(BDW_WORKLIB)/modules/sfu_out_buff//sfu_out_buff.d $(BDW_WORKLIB)/wrappers/finish_gen_wrap.d $(BDW_WORKLIB)/modules/finish_gen//finish_gen.d $(BDW_OBJDIR)/finish_gen.d $(BDW_OBJDIR)/sfu_out_buff.d $(BDW_OBJDIR)/bias_add.d $(BDW_OBJDIR)/m_float2fix.d $(BDW_OBJDIR)/float2fix.d $(BDW_OBJDIR)/learn_clip.d $(BDW_OBJDIR)/relu_offset_float.d $(BDW_OBJDIR)/fp_cmp.d $(BDW_OBJDIR)/bn_float32.d $(BDW_OBJDIR)/fp_add.d $(BDW_OBJDIR)/fp_mul.d $(BDW_OBJDIR)/linear_dequant.d $(BDW_OBJDIR)/fp_div.d $(BDW_OBJDIR)/fix2float.d $(BDW_OBJDIR)/in_buff.d $(BDW_OBJDIR)/avg_pool.d 
SIM_RTL_TARGETS		=

BDW_MISSING_WRAPPERS=	
ifeq ($(BDW_VLOG_SIM),)
	BDW_VLOG_SIM	=	
	BDW_VLOG_SIM_PATH =	
endif


else

BDW_MISSING_WRAPPERS=	
ifneq ($(BDW_DEP_CYNTH_CONFIG),)
DEP_FILES           =   bdw_work/wrappers/avg_pool_wrap.d bdw_work/wrappers/in_buff_wrap.d bdw_work/wrappers/fix2float_wrap.d bdw_work/wrappers/fp_div_wrap.d bdw_work/wrappers/linear_dequant_wrap.d bdw_work/wrappers/fp_mul_wrap.d bdw_work/wrappers/fp_add_wrap.d bdw_work/wrappers/bn_float32_wrap.d bdw_work/wrappers/fp_cmp_wrap.d bdw_work/wrappers/relu_offset_float_wrap.d bdw_work/wrappers/learn_clip_wrap.d bdw_work/wrappers/float2fix_wrap.d bdw_work/wrappers/m_float2fix_wrap.d bdw_work/wrappers/bias_add_wrap.d bdw_work/wrappers/sfu_out_buff_wrap.d bdw_work/wrappers/finish_gen_wrap.d
endif
endif

################################################################
# start of logicSynth Configurations
################################################################

# global logicSynth definitions


        
# logicSynthConfig specific definitions

ifeq ($(BDW_LS_CONFIG),G_MAC_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_MAC_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_MAC_BASIC/avg_pool.log} {$(BDW_WORKLIB)/logicsynth/G_MAC_BASIC/avg_pool.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),avg_pool)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_MAC_BASIC/avg_pool.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/avg_pool/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/avg_pool/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_MAC_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_MAC_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_MAC_DPA/avg_pool.log} {$(BDW_WORKLIB)/logicsynth/G_MAC_DPA/avg_pool.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),avg_pool)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_MAC_DPA/avg_pool.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/avg_pool/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/avg_pool/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_CACHE_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_CACHE_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_CACHE_BASIC/in_buff.log} {$(BDW_WORKLIB)/logicsynth/G_CACHE_BASIC/in_buff.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),in_buff)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_CACHE_BASIC/in_buff.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/in_buff/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/in_buff/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_CACHE_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_CACHE_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_CACHE_DPA/in_buff.log} {$(BDW_WORKLIB)/logicsynth/G_CACHE_DPA/in_buff.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),in_buff)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_CACHE_DPA/in_buff.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/in_buff/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/in_buff/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_FIX2FLOAT_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_BASIC/fix2float.log} {$(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_BASIC/fix2float.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fix2float)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_BASIC/fix2float.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fix2float/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fix2float/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_FIX2FLOAT_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_DPA/fix2float.log} {$(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_DPA/fix2float.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fix2float)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_DPA/fix2float.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fix2float/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fix2float/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_FP_DIV_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_FP_DIV_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_FP_DIV_BASIC/fp_div.log} {$(BDW_WORKLIB)/logicsynth/G_FP_DIV_BASIC/fp_div.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fp_div)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_FP_DIV_BASIC/fp_div.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_div/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_div/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_FP_DIV_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_FP_DIV_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_FP_DIV_DPA/fp_div.log} {$(BDW_WORKLIB)/logicsynth/G_FP_DIV_DPA/fp_div.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fp_div)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_FP_DIV_DPA/fp_div.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_div/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_div/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_linear_dequant_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_linear_dequant_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_linear_dequant_BASIC/linear_dequant.log} {$(BDW_WORKLIB)/logicsynth/G_linear_dequant_BASIC/linear_dequant.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),linear_dequant)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_linear_dequant_BASIC/linear_dequant.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/linear_dequant/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/linear_dequant/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_linear_dequant_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_linear_dequant_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_linear_dequant_DPA/linear_dequant.log} {$(BDW_WORKLIB)/logicsynth/G_linear_dequant_DPA/linear_dequant.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),linear_dequant)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_linear_dequant_DPA/linear_dequant.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/linear_dequant/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/linear_dequant/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_fp_mul_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_fp_mul_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_fp_mul_BASIC/fp_mul.log} {$(BDW_WORKLIB)/logicsynth/G_fp_mul_BASIC/fp_mul.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fp_mul)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_fp_mul_BASIC/fp_mul.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_mul/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_mul/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_fp_mul_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_fp_mul_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_fp_mul_DPA/fp_mul.log} {$(BDW_WORKLIB)/logicsynth/G_fp_mul_DPA/fp_mul.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fp_mul)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_fp_mul_DPA/fp_mul.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_mul/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_mul/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_fp_add_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_fp_add_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_fp_add_BASIC/fp_add.log} {$(BDW_WORKLIB)/logicsynth/G_fp_add_BASIC/fp_add.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fp_add)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_fp_add_BASIC/fp_add.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_add/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_add/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_fp_add_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_fp_add_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_fp_add_DPA/fp_add.log} {$(BDW_WORKLIB)/logicsynth/G_fp_add_DPA/fp_add.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fp_add)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_fp_add_DPA/fp_add.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_add/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_add/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_bn_float32_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_bn_float32_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_bn_float32_BASIC/bn_float32.log} {$(BDW_WORKLIB)/logicsynth/G_bn_float32_BASIC/bn_float32.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),bn_float32)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_bn_float32_BASIC/bn_float32.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/bn_float32/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/bn_float32/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_bn_float32_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_bn_float32_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_bn_float32_DPA/bn_float32.log} {$(BDW_WORKLIB)/logicsynth/G_bn_float32_DPA/bn_float32.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),bn_float32)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_bn_float32_DPA/bn_float32.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/bn_float32/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/bn_float32/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_fp_cmp_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_fp_cmp_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_fp_cmp_BASIC/fp_cmp.log} {$(BDW_WORKLIB)/logicsynth/G_fp_cmp_BASIC/fp_cmp.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fp_cmp)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_fp_cmp_BASIC/fp_cmp.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_cmp/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_cmp/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_fp_cmp_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_fp_cmp_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_fp_cmp_DPA/fp_cmp.log} {$(BDW_WORKLIB)/logicsynth/G_fp_cmp_DPA/fp_cmp.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),fp_cmp)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_fp_cmp_DPA/fp_cmp.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_cmp/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/fp_cmp/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_relu_offset_float_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_relu_offset_float_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_relu_offset_float_BASIC/relu_offset_float.log} {$(BDW_WORKLIB)/logicsynth/G_relu_offset_float_BASIC/relu_offset_float.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),relu_offset_float)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_relu_offset_float_BASIC/relu_offset_float.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/relu_offset_float/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/relu_offset_float/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_relu_offset_float_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_relu_offset_float_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_relu_offset_float_DPA/relu_offset_float.log} {$(BDW_WORKLIB)/logicsynth/G_relu_offset_float_DPA/relu_offset_float.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),relu_offset_float)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_relu_offset_float_DPA/relu_offset_float.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/relu_offset_float/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/relu_offset_float/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_learn_clip_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_learn_clip_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_learn_clip_BASIC/learn_clip.log} {$(BDW_WORKLIB)/logicsynth/G_learn_clip_BASIC/learn_clip.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),learn_clip)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_learn_clip_BASIC/learn_clip.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/learn_clip/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/learn_clip/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_learn_clip_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_learn_clip_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_learn_clip_DPA/learn_clip.log} {$(BDW_WORKLIB)/logicsynth/G_learn_clip_DPA/learn_clip.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),learn_clip)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_learn_clip_DPA/learn_clip.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/learn_clip/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/learn_clip/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_float2fix_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_float2fix_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_float2fix_BASIC/float2fix.log} {$(BDW_WORKLIB)/logicsynth/G_float2fix_BASIC/float2fix.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),float2fix)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_float2fix_BASIC/float2fix.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/float2fix/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/float2fix/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_float2fix_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_float2fix_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_float2fix_DPA/float2fix.log} {$(BDW_WORKLIB)/logicsynth/G_float2fix_DPA/float2fix.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),float2fix)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_float2fix_DPA/float2fix.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/float2fix/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/float2fix/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_m_float2fix_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_m_float2fix_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_m_float2fix_BASIC/m_float2fix.log} {$(BDW_WORKLIB)/logicsynth/G_m_float2fix_BASIC/m_float2fix.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),m_float2fix)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_m_float2fix_BASIC/m_float2fix.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/m_float2fix/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/m_float2fix/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_m_float2fix_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_m_float2fix_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_m_float2fix_DPA/m_float2fix.log} {$(BDW_WORKLIB)/logicsynth/G_m_float2fix_DPA/m_float2fix.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),m_float2fix)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_m_float2fix_DPA/m_float2fix.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/m_float2fix/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/m_float2fix/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_bias_add_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_bias_add_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_bias_add_BASIC/bias_add.log} {$(BDW_WORKLIB)/logicsynth/G_bias_add_BASIC/bias_add.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),bias_add)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_bias_add_BASIC/bias_add.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/bias_add/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/bias_add/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_bias_add_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_bias_add_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_bias_add_DPA/bias_add.log} {$(BDW_WORKLIB)/logicsynth/G_bias_add_DPA/bias_add.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),bias_add)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_bias_add_DPA/bias_add.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/bias_add/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/bias_add/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_sfu_out_buff_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_BASIC/sfu_out_buff.log} {$(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_BASIC/sfu_out_buff.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),sfu_out_buff)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_BASIC/sfu_out_buff.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_sfu_out_buff_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_DPA/sfu_out_buff.log} {$(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_DPA/sfu_out_buff.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),sfu_out_buff)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_DPA/sfu_out_buff.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/sfu_out_buff/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/sfu_out_buff/DPA
endif
else
ifeq ($(BDW_LS_CONFIG),G_finish_gen_BASIC)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_finish_gen_BASIC
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_finish_gen_BASIC/finish_gen.log} {$(BDW_WORKLIB)/logicsynth/G_finish_gen_BASIC/finish_gen.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),finish_gen)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_finish_gen_BASIC/finish_gen.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.v
BDW_CYNTH_CONFIG = BASIC
BDW_HLS_CONFIG = BASIC
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/finish_gen/BASIC
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/finish_gen/BASIC
endif
else
ifeq ($(BDW_LS_CONFIG),G_finish_gen_DPA)

BDW_LS_CONFIG_DIR = $(BDW_WORKLIB)/logicsynth/G_finish_gen_DPA
BDW_LS_CONFIG_LOGS = {$(BDW_WORKLIB)/logicsynth/G_finish_gen_DPA/finish_gen.log} {$(BDW_WORKLIB)/logicsynth/G_finish_gen_DPA/finish_gen.bdr}
BDW_LS_CMD = bdw_runsgenus
ifeq ($(BDW_MODULE),finish_gen)
BDW_LS_INFO = $(BDW_WORKLIB)/logicsynth/G_finish_gen_DPA/finish_gen.info
BDW_VRTL_FILE = $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.v
BDW_CYNTH_CONFIG = DPA
BDW_HLS_CONFIG = DPA
BDW_CYNTH_CONFIG_DIR = $(BDW_WORKLIB)/modules/finish_gen/DPA
BDW_HLS_CONFIG_DIR = $(BDW_WORKLIB)/modules/finish_gen/DPA
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif

################################################################
# start of analysis Configurations
################################################################

# global analysis definitions


        
# analysisConfig specific definitions


ifeq ($(BDW_SHAREDLIB),0)
	EXECUTABLE			= scsim_$(BDW_SIM_CONFIG)
	SIM_BUILD			= $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG)
else
	EXECUTABLE			= $(BDW_VLOG_SIM)
	COSIM_FILES			= $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG).so $(VLOG_COSIM_TOP)
	SIM_BUILD			= $(COSIM_FILES)
endif


################################################################
# start of place and route configurations
################################################################

# pnrConfig specific definitions 


######################################################################
# Include dependency files for this configuration.
# These will be automatically generted if they do not exist.
# Avoid including (and so generating) these files for 'clean' and
# 'help' commands.
######################################################################
ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
    ifeq ($(findstring clean,$(MAKECMDGOALS)),)
        ifeq ($(findstring help,$(MAKECMDGOALS)),)
            ifneq ($(DEP_FILES),)
                -include $(DEP_FILES)
            endif
        endif
    endif
endif

######################################################################
## Include pre-defined variables and rules provided with BDW
######################################################################
include ${STRATUS_HOME}/share/stratus/source/bdw.mak

######################################################################
## Error checking rules for variable and environment settings.
######################################################################
vista_needs_gcc3:
ifeq ($(BDW_GCC_VERSION),2.95.3)
	@echo "*** You must use GCC 3 to use Vista." ;  exit
endif

#########################################################
## Start of the "ALL" rule set
#########################################################

pnr_all:


kill_pnr_all:


clean_pnr_all:


power_all:


kill_power_all:


clean_power_all:


equiv_all:


kill_equiv_all:


clean_equiv_all:


ls_all: ls_G_MAC_BASIC ls_G_MAC_DPA ls_G_CACHE_BASIC ls_G_CACHE_DPA ls_G_FIX2FLOAT_BASIC ls_G_FIX2FLOAT_DPA ls_G_FP_DIV_BASIC ls_G_FP_DIV_DPA ls_G_linear_dequant_BASIC ls_G_linear_dequant_DPA ls_G_fp_mul_BASIC ls_G_fp_mul_DPA ls_G_fp_add_BASIC ls_G_fp_add_DPA ls_G_bn_float32_BASIC ls_G_bn_float32_DPA ls_G_fp_cmp_BASIC ls_G_fp_cmp_DPA ls_G_relu_offset_float_BASIC ls_G_relu_offset_float_DPA ls_G_learn_clip_BASIC ls_G_learn_clip_DPA ls_G_float2fix_BASIC ls_G_float2fix_DPA ls_G_m_float2fix_BASIC ls_G_m_float2fix_DPA ls_G_bias_add_BASIC ls_G_bias_add_DPA ls_G_sfu_out_buff_BASIC ls_G_sfu_out_buff_DPA ls_G_finish_gen_BASIC ls_G_finish_gen_DPA


kill_ls_all: kill_ls_G_MAC_BASIC kill_ls_G_MAC_DPA kill_ls_G_CACHE_BASIC kill_ls_G_CACHE_DPA kill_ls_G_FIX2FLOAT_BASIC kill_ls_G_FIX2FLOAT_DPA kill_ls_G_FP_DIV_BASIC kill_ls_G_FP_DIV_DPA kill_ls_G_linear_dequant_BASIC kill_ls_G_linear_dequant_DPA kill_ls_G_fp_mul_BASIC kill_ls_G_fp_mul_DPA kill_ls_G_fp_add_BASIC kill_ls_G_fp_add_DPA kill_ls_G_bn_float32_BASIC kill_ls_G_bn_float32_DPA kill_ls_G_fp_cmp_BASIC kill_ls_G_fp_cmp_DPA kill_ls_G_relu_offset_float_BASIC kill_ls_G_relu_offset_float_DPA kill_ls_G_learn_clip_BASIC kill_ls_G_learn_clip_DPA kill_ls_G_float2fix_BASIC kill_ls_G_float2fix_DPA kill_ls_G_m_float2fix_BASIC kill_ls_G_m_float2fix_DPA kill_ls_G_bias_add_BASIC kill_ls_G_bias_add_DPA kill_ls_G_sfu_out_buff_BASIC kill_ls_G_sfu_out_buff_DPA kill_ls_G_finish_gen_BASIC kill_ls_G_finish_gen_DPA


clean_ls_all: clean_ls_G_MAC_BASIC clean_ls_G_MAC_DPA clean_ls_G_CACHE_BASIC clean_ls_G_CACHE_DPA clean_ls_G_FIX2FLOAT_BASIC clean_ls_G_FIX2FLOAT_DPA clean_ls_G_FP_DIV_BASIC clean_ls_G_FP_DIV_DPA clean_ls_G_linear_dequant_BASIC clean_ls_G_linear_dequant_DPA clean_ls_G_fp_mul_BASIC clean_ls_G_fp_mul_DPA clean_ls_G_fp_add_BASIC clean_ls_G_fp_add_DPA clean_ls_G_bn_float32_BASIC clean_ls_G_bn_float32_DPA clean_ls_G_fp_cmp_BASIC clean_ls_G_fp_cmp_DPA clean_ls_G_relu_offset_float_BASIC clean_ls_G_relu_offset_float_DPA clean_ls_G_learn_clip_BASIC clean_ls_G_learn_clip_DPA clean_ls_G_float2fix_BASIC clean_ls_G_float2fix_DPA clean_ls_G_m_float2fix_BASIC clean_ls_G_m_float2fix_DPA clean_ls_G_bias_add_BASIC clean_ls_G_bias_add_DPA clean_ls_G_sfu_out_buff_BASIC clean_ls_G_sfu_out_buff_DPA clean_ls_G_finish_gen_BASIC clean_ls_G_finish_gen_DPA


analysis_all:


kill_analysis_all:


clean_analysis_all:


hls_all: hls_B


hls_avg_pool_all: hls_avg_pool_BASIC hls_avg_pool_DPA


hls_in_buff_all: hls_in_buff_BASIC hls_in_buff_DPA


hls_fix2float_all: hls_fix2float_BASIC hls_fix2float_DPA


hls_fp_div_all: hls_fp_div_BASIC hls_fp_div_DPA


hls_linear_dequant_all: hls_linear_dequant_BASIC hls_linear_dequant_DPA


hls_fp_mul_all: hls_fp_mul_BASIC hls_fp_mul_DPA


hls_fp_add_all: hls_fp_add_BASIC hls_fp_add_DPA


hls_bn_float32_all: hls_bn_float32_BASIC hls_bn_float32_DPA


hls_fp_cmp_all: hls_fp_cmp_BASIC hls_fp_cmp_DPA


hls_relu_offset_float_all: hls_relu_offset_float_BASIC hls_relu_offset_float_DPA


hls_learn_clip_all: hls_learn_clip_BASIC hls_learn_clip_DPA


hls_float2fix_all: hls_float2fix_BASIC hls_float2fix_DPA


hls_m_float2fix_all: hls_m_float2fix_BASIC hls_m_float2fix_DPA


hls_bias_add_all: hls_bias_add_BASIC hls_bias_add_DPA


hls_sfu_out_buff_all: hls_sfu_out_buff_BASIC hls_sfu_out_buff_DPA


hls_finish_gen_all: hls_finish_gen_BASIC hls_finish_gen_DPA


cynth_all: cynth_B


kill_hls_all kill_cynth_all: kill_hls_avg_pool_BASIC kill_hls_avg_pool_DPA kill_hls_in_buff_BASIC kill_hls_in_buff_DPA kill_hls_fix2float_BASIC kill_hls_fix2float_DPA kill_hls_fp_div_BASIC kill_hls_fp_div_DPA kill_hls_linear_dequant_BASIC kill_hls_linear_dequant_DPA kill_hls_fp_mul_BASIC kill_hls_fp_mul_DPA kill_hls_fp_add_BASIC kill_hls_fp_add_DPA kill_hls_bn_float32_BASIC kill_hls_bn_float32_DPA kill_hls_fp_cmp_BASIC kill_hls_fp_cmp_DPA kill_hls_relu_offset_float_BASIC kill_hls_relu_offset_float_DPA kill_hls_learn_clip_BASIC kill_hls_learn_clip_DPA kill_hls_float2fix_BASIC kill_hls_float2fix_DPA kill_hls_m_float2fix_BASIC kill_hls_m_float2fix_DPA kill_hls_bias_add_BASIC kill_hls_bias_add_DPA kill_hls_sfu_out_buff_BASIC kill_hls_sfu_out_buff_DPA kill_hls_finish_gen_BASIC kill_hls_finish_gen_DPA


all_deps: clean_deps
	-@$(MAKE) gen_all_deps >& /dev/null



gen_all_deps: 
	-@$(MAKE) deps BDW_SIM_CONFIG=B >& /dev/null


.PHONY: gen_all_deps
.PHONY: all_deps


all_wrappers : prebuild_wrappers

prebuild_wrappers:
ifneq ($(BDW_ALL_WRAPPERS),)
	@$(MAKE) -j 1 $(BDW_ALL_WRAPPERS)
endif

prebuild_rtl:
ifneq ($(SIM_RTL_TARGETS),)
	@$(MAKE) $(SIM_RTL_TARGETS)
endif


clean_hls_all: clean_hls_B

hls_clean_all: clean_hls_all
cynth_clean_all: clean_hls_all
clean_cynth_all: clean_hls_all
prebuild_all: prebuild_B

build_all: build_B

sim_all: sim_B

kill_sim_all: kill_sim_B

clean_wrap_all: clean_wrap_B

kill_all: 
	@bdw_kill -all


clean_cachelib:
	@rm -rf /home/hanji/stratus/mv1/train_npu/sfu/cachelib

clean_all:
	@if [ -d $(BDW_WORKLIB) ] ; then \
		td=`mktemp -d $(BDW_WORKLIB).XXXXXXXX` ; \
		mv $(BDW_WORKLIB) $${td} ; \
		for f in *.vcd *.fsdb ; do \
			if [ -f $$f ] ; then \
				mv $$f $${td} ; \
			fi ; \
		done ; \
		rm -rf $${td} & \
	fi

clean_sim_all: clean_B clean_deps
	@rm -rf *.vcd *.fsdb $(BDW_OBJDIR) $(BDW_SIMDIR) $(BDW_MODULEDIR) $(BDW_WRAPDIR)

jobs:
	@bdw_ps

clean_libs:
	@rm -rf $(BDW_LIBDIR)

clean_deps:
	@if [ -d $(BDW_WORKLIB) ]; then find $(BDW_WORKLIB) -name '*.d' -exec rm {} \; ; fi

deps : $(DEP_FILES)

#########################################################
## End of the "ALL" rule set
#########################################################



help:
	@echo 
	@echo "Makefile generated by bdw_makegen version 19.10-p100 from project.tcl"
	@echo 
	@echo "PROJECT-WIDE RULES:"
	@echo "    workbench   - Stratus Workbench for the project."
	@echo 
	@echo "GROUP RULES:"
	@echo "    hls_all             - Run stratus_hls for all modules for all configurations."
	@echo "    clean_hls_all       - Clear all RTL files generated for all stratus_hls runs for each configuration."
	@echo "    ls_all      - Run logic synthesis for all logicSynthConfigs "
	@echo "    clean_ls_all- Removes logic synthesis results for all logicSynthConfigs "
	@echo "    build_all           - Build all simulation executables or shared libraries (but don't run them)."
	@echo "    sim_all             - Build AND run all simulation configurations."
	@echo "    power_all           - Run all Power configurations."
	@echo "    pnr_all             - Run all place and route configurations."
	@echo "    equiv_all           - Run all whole-design equivalence checking configurations."
	@echo "    clean_all           - Removes the $(BDW_WORKLIB) directory, thus cleaning up everything."
	@echo "    clean_sim_all       - Clean up all modules for all simulation configurations."
	@echo "    clean_power_all     - Clean all files generated for all power estimation configs."
	@echo "    clean_pnr_all       - Clean all files generated for all place and route configs."
	@echo "    clean_equiv_all     - Clean all files generated for all equivalence checking configs."
	@echo "    clean_libs          - Clean up all locally built items for cynthLibs."
	@echo "    clean_cachelib      - Clean up the local Cache Library."
	@echo "    clean_deps          - Clean up auto-generated dependencies so they will be re-generated."
	@echo "    clean_wrap_all      - Clean all generated wrapper files."
	@echo "    all_deps            - Re-creates all dependencies."
	@echo "    all_wrappers        - Generates all out of data cynthModule wrappers."
	@echo "    jobs                - List all current jobs for this project."
	@echo "    kill_all            - Kills alls current jobs for this project."
	@echo "    kill_hls_all        - Kills alls stratus_hls jobs for this project."
	@echo "    kill_ls_all         - Kill all logic synthesis jobs for this project."
	@echo "    kill_sim_all        - Kill all simulation jobs for this project."
	@echo "    kill_pnr_all        - Kill all place and route jobs for this project."
	@echo "    kill_power_all      - Kill all power estimation jobs for this project."
	@echo "    kill_equiv_all      - Kill all equivalence checking jobs for this project."
	@echo 
	@echo "PER-hls_config RULES:"
	@echo "    hls_<hls_config>   - Run stratus_hls on all modules that have a hls_config with the given name to Verilog"
	@echo "    clean_<hls_config> - Clean the given hls_config from all modules that have it"
	@echo "    view_<hls_config>  - View schematics all modules that have a hls_config with the given name"
	@echo 
	@echo "PER-module-and-hls_config RULES:"
	@echo "    hls_<module>_all           - Run stratus_hls on the given module and all its hls_configs to Verilog"
	@echo "    hls_<module>_<hls_config>  - Run stratus_hls on the given module and hls_config to Verilog"
	@echo "    clean_hls_<module>_<hls_config>  - Clean synthesis results for the given module and hls_config"
	@echo "    view_<module>_<hls_config> - View schematic for the given module and cynhtConfig"
	@echo "    kill_<module>_<hls_config> - Kill stratus_hls job for this module and hls_config"
	@echo 
	@echo "DEFINED module and hls_config NAMES:"
	@echo "	hls_config for module avg_pool:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module in_buff:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module fix2float:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module fp_div:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module linear_dequant:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module fp_mul:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module fp_add:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module bn_float32:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module fp_cmp:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module relu_offset_float:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module learn_clip:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module float2fix:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module m_float2fix:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module bias_add:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module sfu_out_buff:"
	@echo "		BASIC	DPA"
	@echo "	hls_config for module finish_gen:"
	@echo "		BASIC	DPA"
	@echo 
	@echo "PER-sim_config RULES:"
	@echo "    clean_hls_<sim_config> - Clean stratus_hls output files for all modules required by the named sim_config"
	@echo "    build_<sim_config>   - Build the simulation executable for the named sim_config"
	@echo "    sim_<sim_config>     - Builds and executes a simulation for the named sim_config"
	@echo "    kill_sim_<sim_config> - Kills the simulation for the  named sim_config"
	@echo "    debug_<sim_config>   - Builds a simulation for the named sim_config for use with the gdb debugger under stratus_ide"
	@echo "    view_<sim_config>    - View schematics for all modules required by the named sim_config"
	@echo "    clean_<sim_config>   - Clean up files built for the named sim_config"
	@echo 
	@echo "DEFINED sim_config NAMES:"

	@echo "	B"

	@echo
	@echo "PER-logicSynthConfig Rules:"
	@echo "    ls_<logicSynthConfig> - Run logic synthesis for the modules in this logicSynthConfig"
	@echo "    view_ls_<logicSynthConfig> - View schematics for the modules in this logicSynthConfig"
	@echo "    clean_ls_<logicSynthConfig> - Removes logic synthesis results for this logicSynthConfig"
	@echo "    kill_ls_<logicSynthConfig> - Kills the logic synthesis job for this logicSynthConfig"
	@echo
	@echo "DEFINED logicSynthConfig NAMES:"

	@echo "	G_MAC_BASIC	G_MAC_DPA	G_CACHE_BASIC	G_CACHE_DPA"
	@echo "	G_FIX2FLOAT_BASIC	G_FIX2FLOAT_DPA	G_FP_DIV_BASIC	G_FP_DIV_DPA"
	@echo "	G_linear_dequant_BASIC	G_linear_dequant_DPA	G_fp_mul_BASIC	G_fp_mul_DPA"
	@echo "	G_fp_add_BASIC	G_fp_add_DPA	G_bn_float32_BASIC	G_bn_float32_DPA"
	@echo "	G_fp_cmp_BASIC	G_fp_cmp_DPA	G_relu_offset_float_BASIC	G_relu_offset_float_DPA"
	@echo "	G_learn_clip_BASIC	G_learn_clip_DPA	G_float2fix_BASIC	G_float2fix_DPA"
	@echo "	G_m_float2fix_BASIC	G_m_float2fix_DPA	G_bias_add_BASIC	G_bias_add_DPA"
	@echo "	G_sfu_out_buff_BASIC	G_sfu_out_buff_DPA	G_finish_gen_BASIC	G_finish_gen_DPA"

#########################################################
## Start of the rule set for sim_config B
#########################################################


hls_B: 



cynth_B: 

hls_clean_B: clean_hls_B

cynth_clean_B: hls_clean_B

clean_hls_B: $(addprefix clean_, ) 

clean_cynth_B: clean_hls_B

prebuild_B: 

ifeq ($(CWBExec),1)

dbg_build_B:
	@$(MAKE) siminfo BDW_SIM_CONFIG=B
	@$(MAKE) BDW_DEBUG=1 build_B


build_B: 
	@$(MAKE) siminfo BDW_SIM_CONFIG=B
	@$(BDW_EXEC_CMD) $(MAKE) $(BDW_PMAKE_FLG) build_sim_image BDW_SIM_CONFIG=B

else
.PHONY: build_B

dbg_build_B:
	@bdw_exec -jobproject project.tcl -job dbg_build.B $(MAKE) CWBExec=1 BDW_DEBUG=1 build_B

build_B:
	@bdw_exec -jobproject project.tcl -job build.B $(MAKE) CWBExec=1 build_B
endif


ifeq ($(CWBExec),1)
sim_B: build_B
	@$(MAKE) run_sim BDW_SIM_CONFIG=B

else
.PHONY: sim_B

sim_B:
	@bdw_exec -jobproject project.tcl -job sim.B $(MAKE) CWBExec=1 sim_B
endif


kill_sim_B:
	@bdw_kill -job sim.B
	@bdw_kill -job sim.B.s


catlog_B: 
debug_B: 
	@$(MAKE) BDW_DEBUG=1 build_B
	@$(MAKE) run_sim BDW_SIM_CONFIG=B RUN_DEBUGGER=1
    
view_B: build_B
	@bdw_view_verdi -project project.tcl -simconfig B

clean_wrap_B:
	@rm -f 
	@rm -rf $(BDW_WORKLIB)/sims/B $(BDW_WORKLIB)/sims/B/sim_B
	@$(MAKE) clean_sim_objs BDW_SIM_CONFIG=B

clean_B: clean_hls_B clean_sim_B

clean_sim_B: clean_wrap_B
	@rm -rf $(BDW_WORKLIB)/jobs/sim.B.s
	@rm -rf $(BDW_WORKLIB)/jobs/sim.B
	@rm -rf $(BDW_WORKLIB)/jobs/build.B

#############################################################################
# libesc building rules
#############################################################################
libesc_WORKDIR = $(BDW_WORKLIB)/libesc

BDW_ESC_SOURCES = libesc.o esc_elab.o esc_cleanup.o
BDW_ESC_OBJS = $(addprefix $(libesc_WORKDIR)/, $(BDW_ESC_SOURCES))

ifeq ($(BDW_PRECOMP_ESC),1)
export BDW_ESC_LIB = 
else
export BDW_ESC_LIB = $(libesc_WORKDIR)/libesc.a
endif

$(libesc_WORKDIR)/libesc.a : $(BDW_ESC_OBJS)
	$(BDW_AR) $(libesc_WORKDIR)/libesc.a $(BDW_ESC_OBJS)

${libesc_WORKDIR}/%.o   :   ${STRATUS_HOME}/share/stratus/source/%.cc 
	@if [ ! -d ${libesc_WORKDIR} ]; then mkdir -p ${libesc_WORKDIR}; fi
ifeq ($(BDW_NCSC),1)
	${BDW_CC} "-TP ${BDW_CCFLAGS} ${BDW_COUT}$@ " $<
else
	${BDW_CC} -TP ${BDW_CCFLAGS} ${BDW_COUT}$@ $<
endif




##############################################################
## Parts Library "/usr/cadence/installs/Stratus/share/stratus/cynware/cynw_cm_float"
##############################################################

cynw_cm_float_SRCDIR = /usr/cadence/installs/Stratus/share/stratus/cynware/cynw_cm_float
cynw_cm_float_BEH_SRCDIR = $(BDW_WORKLIB)/libs/cynw_cm_float
cynw_cm_float_LIBNAME = cynw_cm_float
cynw_cm_float_WORKLIB = $(BDW_WORKLIB)/libs/cynw_cm_float
cynw_cm_float_C_PARTS_A = $(cynw_cm_float_WORKLIB)/objs/libcynw_cm_float.a

prep_c_cynw_cm_float : $(cynw_cm_float_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(cynw_cm_float_WORKLIB) prep_c

prep_vlog_cynw_cm_float : $(cynw_cm_float_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(cynw_cm_float_WORKLIB) prep_vlog

prep_cynw_cm_float : $(cynw_cm_float_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(cynw_cm_float_WORKLIB) prep

$(cynw_cm_float_WORKLIB)/Makefile : $(cynw_cm_float_SRCDIR)/cynw_cm_float.tcl
	@if [ ! -d $(cynw_cm_float_WORKLIB) ]; then mkdir -p $(cynw_cm_float_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen  -scsim builtin -lib $(cynw_cm_float_SRCDIR) -o $(cynw_cm_float_WORKLIB)/Makefile -module  -cynthconfig   

$(cynw_cm_float_SRCDIR)/cynw_cm_float.tcl :
	@if [ ! -d $(cynw_cm_float_WORKLIB) ]; then mkdir -p $(cynw_cm_float_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(cynw_cm_float_WORKLIB)/cynw_cm_float.d :
	@if [ ! -d $(cynw_cm_float_WORKLIB) ]; then mkdir -p $(cynw_cm_float_WORKLIB); fi
	@touch $(cynw_cm_float_WORKLIB)/cynw_cm_float.d



BDW_C_LIBPREP += prep_c_cynw_cm_float
BDW_C_LIBREF += $(cynw_cm_float_WORKLIB)/INCA_libs/cynw_cm_float_worklib
BDW_VLOG_LIBPREP += prep_vlog_cynw_cm_float
BDW_BOTH_LIBPREP += prep_cynw_cm_float


BDW_HLSLIB_DIRS += $(BDW_WORKLIB)/libs/cynw_cm_float
BDW_HLSLIB_NAMES += $(cynw_cm_float_LIBNAME)


BDW_BOTH_LIBPREP_EXTERNAL += prep_cynw_cm_float


BDW_WHOLELIB_DIRS += $(cynw_cm_float_SRCDIR)
BDW_WHOLELIB_NAMES += $(cynw_cm_float_LIBNAME)


##############################################################
## Rule for building all Cynth libraries external to the project
##############################################################

build_all_cynthLibs: $(BDW_BOTH_LIBPREP_EXTERNAL)

list_cynthLibs:

	@echo /home/hanji/stratus/mv1/train_npu/sfu /usr/cadence/installs/Stratus/share/stratus/cynware/cynw_cm_float prep_cynw_cm_float

##############################################################
## START OF HLS MODULE RULES
##############################################################



##############################################################
## HLS Module "avg_pool"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/avg_pool.d :  avg_pool.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  avg_pool.cpp \
	| sed 's|avg_pool\.o[ :]*|$(BDW_OBJDIR)/avg_pool.o $(BDW_OBJDIR)/avg_pool.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/avg_pool_trace.h : $(BDW_WORKLIB)/wrappers/avg_pool_trace.h.updated

$(BDW_WORKLIB)/wrappers/avg_pool_trace.h.updated :  avg_pool.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module avg_pool -vcd 
	@touch $(BDW_WORKLIB)/wrappers/avg_pool_trace.h.updated



$(BDW_WORKLIB)/objs/avg_pool.o:  avg_pool.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.h $(BDW_WORKLIB)/wrappers/avg_pool_cosim.h $(BDW_WORKLIB)/wrappers/avg_pool_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/avg_pool.o  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp

.INTERMEDIATE : avg_pool_wrap.h

avg_pool_wrap.h : $(BDW_WORKLIB)/wrappers/avg_pool_wrap.h

$(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.h $(BDW_WORKLIB)/wrappers/avg_pool_cosim.h $(BDW_WORKLIB)/wrappers/avg_pool_cosim.v   : $(BDW_WRAPDIR)/avg_pool.updated

$(BDW_WRAPDIR)/avg_pool.updated :  avg_pool.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module avg_pool "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/avg_pool.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module avg_pool -vcd 
	@touch $(BDW_WORKLIB)/wrappers/avg_pool_trace.h.updated
$(BDW_WORKLIB)/wrappers/avg_pool_wrap.d :  avg_pool.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   avg_pool.cpp \
		| sed 's|avg_pool\.o[ :]*|$(BDW_WRAPDIR)/avg_pool.updated $(BDW_WORKLIB)/wrappers/avg_pool_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/avg_pool_wrap.d 




##############################################################
## HLS Module "avg_pool" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_avg_pool_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_avg_pool_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_avg_pool_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_avg_pool_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_avg_pool_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_avg_pool_BASIC = 
CCFLAGS_avg_pool_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/avg_pool/BASIC/c_parts -DBASIC=1 -DBDW_RTL_avg_pool_BASIC=1  $(LIB_INCLUDES_avg_pool_BASIC)
CCFLAGS_avg_pool_BASIC += ${BDW_CCFLAGS_TAIL}

hls_avg_pool_BASIC : hlsc_avg_pool_BASIC

cynth_avg_pool_BASIC : hlsc_avg_pool_BASIC 

elab_avg_pool_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/avg_pool/BASIC/stratus_hls.bdr

optim_avg_pool_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/avg_pool/BASIC/stratus_hls.bdr

sched_avg_pool_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/avg_pool/BASIC/stratus_hls.bdr

hlsc_avg_pool_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=avg_pool BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.avg_pool.BASIC $(MAKE) $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=avg_pool BDW_HLS_CONFIG=BASIC
endif

clean_cynth_avg_pool_BASIC: clean_hls_avg_pool_BASIC

clean_avg_pool_BASIC: clean_hls_avg_pool_BASIC

clean_hls_avg_pool_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/avg_pool/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.avg_pool.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.avg_pool.BASIC.s

kill_hls_avg_pool_BASIC:
	@bdw_kill -job hls.avg_pool.BASIC
	@bdw_kill -job hls.avg_pool.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_avg_pool_BASIC :
	bdw_htmlgen -project project.tcl -module avg_pool -cynthconfig BASIC



$(BDW_WORKLIB)/modules/avg_pool/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.cpp

$(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.cpp $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.v $(BDW_WORKLIB)/modules/avg_pool/BASIC/stratus_hls.bdr :  avg_pool.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/avg_pool/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/avg_pool/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.avg_pool.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_avg_pool_BASIC) \
		-d $(BDW_WORKLIB)/modules/avg_pool/BASIC -o avg_pool_rtl.cpp \
		--hls_module=avg_pool --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_avg_pool_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_avg_pool_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_avg_pool_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 avg_pool.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_trace.h : $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_trace.h.updated

$(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_trace.h.updated : $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module avg_pool -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_trace.h.updated

catHLLog_avg_pool_BASIC:
	cat $(BDW_WORKLIB)/modules/avg_pool/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_avg_pool_BASIC : hls_avg_pool_BASIC 


hls_avg_pool_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_avg_pool_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.v prep_vlog_avg_pool_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.avg_pool.BASIC $(MAKE) CWBExec=1 hls_avg_pool_BASIC
endif

catVLGLog_avg_pool_BASIC : catHLLog_avg_pool_BASIC
	cat $(BDW_WORKLIB)/modules/avg_pool/BASIC/stratus_vlg.log

#
#	view rule
#
view_avg_pool_BASIC : hls_avg_pool_BASIC
	@bdw_view_verdi -project project.tcl -modules avg_pool -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.o : $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp $(BDW_WORKLIB)/wrappers/avg_pool_cosim.h $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl avg_pool`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/avg_pool/BASIC -I./ $(CCFLAGS_avg_pool_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl avg_pool BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.o  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool.o :  avg_pool.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.h $(BDW_WORKLIB)/wrappers/avg_pool_cosim.h $(BDW_WORKLIB)/wrappers/avg_pool_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/avg_pool/BASIC -I./ $(CCFLAGS_avg_pool_BASIC) -o $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool.o  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp
    

$(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_hoist.o :  avg_pool.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp $(BDW_WORKLIB)/wrappers/avg_pool_cosim.h $(BDW_WORKLIB)/wrappers/avg_pool_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/avg_pool/BASIC -I./ $(CCFLAGS_avg_pool_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl avg_pool BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_hoist.o  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool.d :  avg_pool.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_avg_pool_BASIC)  avg_pool.cpp \
	| sed 's|avg_pool\.o[ :]*|$(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.cpp $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool.o $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/avg_pool/BASIC"
##############################################################

avg_pool_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/avg_pool/BASIC
avg_pool_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/avg_pool_BASIC
avg_pool_BASIC_LIBNAME = avg_pool_BASIC
avg_pool_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/avg_pool/BASIC
avg_pool_BASIC_C_PARTS_A = $(avg_pool_BASIC_WORKLIB)/objs/libavg_pool_BASIC.a

prep_c_avg_pool_BASIC : $(avg_pool_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(avg_pool_BASIC_WORKLIB) prep_c

prep_vlog_avg_pool_BASIC : $(avg_pool_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(avg_pool_BASIC_WORKLIB) prep_vlog

prep_avg_pool_BASIC : $(avg_pool_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(avg_pool_BASIC_WORKLIB) prep

$(avg_pool_BASIC_WORKLIB)/Makefile : $(avg_pool_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(avg_pool_BASIC_WORKLIB) ]; then mkdir -p $(avg_pool_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(avg_pool_BASIC_SRCDIR) -o $(avg_pool_BASIC_WORKLIB)/Makefile -module avg_pool -cynthconfig BASIC  

$(avg_pool_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(avg_pool_BASIC_WORKLIB) ]; then mkdir -p $(avg_pool_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(avg_pool_BASIC_WORKLIB)/avg_pool_BASIC.d :
	@if [ ! -d $(avg_pool_BASIC_WORKLIB) ]; then mkdir -p $(avg_pool_BASIC_WORKLIB); fi
	@touch $(avg_pool_BASIC_WORKLIB)/avg_pool_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_avg_pool_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_avg_pool_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_avg_pool_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_avg_pool_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_avg_pool_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_avg_pool_DPA = 
CCFLAGS_avg_pool_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/avg_pool/DPA/c_parts -DDPA=1 -DBDW_RTL_avg_pool_DPA=1  $(LIB_INCLUDES_avg_pool_DPA)
CCFLAGS_avg_pool_DPA += ${BDW_CCFLAGS_TAIL}

hls_avg_pool_DPA : hlsc_avg_pool_DPA

cynth_avg_pool_DPA : hlsc_avg_pool_DPA 

elab_avg_pool_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/avg_pool/DPA/stratus_hls.bdr

optim_avg_pool_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/avg_pool/DPA/stratus_hls.bdr

sched_avg_pool_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/avg_pool/DPA/stratus_hls.bdr

hlsc_avg_pool_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=avg_pool BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.avg_pool.DPA $(MAKE) $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=avg_pool BDW_HLS_CONFIG=DPA
endif

clean_cynth_avg_pool_DPA: clean_hls_avg_pool_DPA

clean_avg_pool_DPA: clean_hls_avg_pool_DPA

clean_hls_avg_pool_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/avg_pool/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.avg_pool.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.avg_pool.DPA.s

kill_hls_avg_pool_DPA:
	@bdw_kill -job hls.avg_pool.DPA
	@bdw_kill -job hls.avg_pool.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_avg_pool_DPA :
	bdw_htmlgen -project project.tcl -module avg_pool -cynthconfig DPA



$(BDW_WORKLIB)/modules/avg_pool/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.cpp

$(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.cpp $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.v $(BDW_WORKLIB)/modules/avg_pool/DPA/stratus_hls.bdr :  avg_pool.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/avg_pool/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/avg_pool/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.avg_pool.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_avg_pool_DPA) \
		-d $(BDW_WORKLIB)/modules/avg_pool/DPA -o avg_pool_rtl.cpp \
		--hls_module=avg_pool --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_avg_pool_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_avg_pool_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_avg_pool_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 avg_pool.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_trace.h : $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_trace.h.updated

$(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_trace.h.updated : $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module avg_pool -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_trace.h.updated

catHLLog_avg_pool_DPA:
	cat $(BDW_WORKLIB)/modules/avg_pool/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_avg_pool_DPA : hls_avg_pool_DPA 


hls_avg_pool_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_avg_pool_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.v prep_vlog_avg_pool_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.avg_pool.DPA $(MAKE) CWBExec=1 hls_avg_pool_DPA
endif

catVLGLog_avg_pool_DPA : catHLLog_avg_pool_DPA
	cat $(BDW_WORKLIB)/modules/avg_pool/DPA/stratus_vlg.log

#
#	view rule
#
view_avg_pool_DPA : hls_avg_pool_DPA
	@bdw_view_verdi -project project.tcl -modules avg_pool -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.o : $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp $(BDW_WORKLIB)/wrappers/avg_pool_cosim.h $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl avg_pool`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/avg_pool/DPA -I./ $(CCFLAGS_avg_pool_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl avg_pool DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.o  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool.o :  avg_pool.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.h $(BDW_WORKLIB)/wrappers/avg_pool_cosim.h $(BDW_WORKLIB)/wrappers/avg_pool_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/avg_pool/DPA -I./ $(CCFLAGS_avg_pool_DPA) -o $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool.o  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp
    

$(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_hoist.o :  avg_pool.cpp $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp $(BDW_WORKLIB)/wrappers/avg_pool_cosim.h $(BDW_WORKLIB)/wrappers/avg_pool_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/avg_pool/DPA -I./ $(CCFLAGS_avg_pool_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl avg_pool DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_hoist.o  $(BDW_WORKLIB)/wrappers/avg_pool_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool.d :  avg_pool.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_avg_pool_DPA)  avg_pool.cpp \
	| sed 's|avg_pool\.o[ :]*|$(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.cpp $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool.o $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/avg_pool/DPA"
##############################################################

avg_pool_DPA_SRCDIR = $(BDW_WORKLIB)/modules/avg_pool/DPA
avg_pool_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/avg_pool_DPA
avg_pool_DPA_LIBNAME = avg_pool_DPA
avg_pool_DPA_WORKLIB = $(BDW_WORKLIB)/modules/avg_pool/DPA
avg_pool_DPA_C_PARTS_A = $(avg_pool_DPA_WORKLIB)/objs/libavg_pool_DPA.a

prep_c_avg_pool_DPA : $(avg_pool_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(avg_pool_DPA_WORKLIB) prep_c

prep_vlog_avg_pool_DPA : $(avg_pool_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(avg_pool_DPA_WORKLIB) prep_vlog

prep_avg_pool_DPA : $(avg_pool_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(avg_pool_DPA_WORKLIB) prep

$(avg_pool_DPA_WORKLIB)/Makefile : $(avg_pool_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(avg_pool_DPA_WORKLIB) ]; then mkdir -p $(avg_pool_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(avg_pool_DPA_SRCDIR) -o $(avg_pool_DPA_WORKLIB)/Makefile -module avg_pool -cynthconfig DPA  

$(avg_pool_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(avg_pool_DPA_WORKLIB) ]; then mkdir -p $(avg_pool_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(avg_pool_DPA_WORKLIB)/avg_pool_DPA.d :
	@if [ ! -d $(avg_pool_DPA_WORKLIB) ]; then mkdir -p $(avg_pool_DPA_WORKLIB); fi
	@touch $(avg_pool_DPA_WORKLIB)/avg_pool_DPA.d



##############################################################
## HLS Module "in_buff"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/in_buff.d :  in_buff.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  in_buff.cpp \
	| sed 's|in_buff\.o[ :]*|$(BDW_OBJDIR)/in_buff.o $(BDW_OBJDIR)/in_buff.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/in_buff_trace.h : $(BDW_WORKLIB)/wrappers/in_buff_trace.h.updated

$(BDW_WORKLIB)/wrappers/in_buff_trace.h.updated :  in_buff.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module in_buff -vcd 
	@touch $(BDW_WORKLIB)/wrappers/in_buff_trace.h.updated



$(BDW_WORKLIB)/objs/in_buff.o:  in_buff.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.h $(BDW_WORKLIB)/wrappers/in_buff_cosim.h $(BDW_WORKLIB)/wrappers/in_buff_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/in_buff.o  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp

.INTERMEDIATE : in_buff_wrap.h

in_buff_wrap.h : $(BDW_WORKLIB)/wrappers/in_buff_wrap.h

$(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.h $(BDW_WORKLIB)/wrappers/in_buff_cosim.h $(BDW_WORKLIB)/wrappers/in_buff_cosim.v   : $(BDW_WRAPDIR)/in_buff.updated

$(BDW_WRAPDIR)/in_buff.updated :  in_buff.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module in_buff "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/in_buff.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module in_buff -vcd 
	@touch $(BDW_WORKLIB)/wrappers/in_buff_trace.h.updated
$(BDW_WORKLIB)/wrappers/in_buff_wrap.d :  in_buff.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   in_buff.cpp \
		| sed 's|in_buff\.o[ :]*|$(BDW_WRAPDIR)/in_buff.updated $(BDW_WORKLIB)/wrappers/in_buff_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/in_buff_wrap.d 




##############################################################
## HLS Module "in_buff" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_in_buff_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_in_buff_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_in_buff_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_in_buff_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_in_buff_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_in_buff_BASIC = 
CCFLAGS_in_buff_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/in_buff/BASIC/c_parts -DBASIC=1 -DBDW_RTL_in_buff_BASIC=1  $(LIB_INCLUDES_in_buff_BASIC)
CCFLAGS_in_buff_BASIC += ${BDW_CCFLAGS_TAIL}

hls_in_buff_BASIC : hlsc_in_buff_BASIC

cynth_in_buff_BASIC : hlsc_in_buff_BASIC 

elab_in_buff_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/in_buff/BASIC/stratus_hls.bdr

optim_in_buff_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/in_buff/BASIC/stratus_hls.bdr

sched_in_buff_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/in_buff/BASIC/stratus_hls.bdr

hlsc_in_buff_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=in_buff BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.in_buff.BASIC $(MAKE) $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=in_buff BDW_HLS_CONFIG=BASIC
endif

clean_cynth_in_buff_BASIC: clean_hls_in_buff_BASIC

clean_in_buff_BASIC: clean_hls_in_buff_BASIC

clean_hls_in_buff_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/in_buff/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.in_buff.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.in_buff.BASIC.s

kill_hls_in_buff_BASIC:
	@bdw_kill -job hls.in_buff.BASIC
	@bdw_kill -job hls.in_buff.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_in_buff_BASIC :
	bdw_htmlgen -project project.tcl -module in_buff -cynthconfig BASIC



$(BDW_WORKLIB)/modules/in_buff/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.cpp

$(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.cpp $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.v $(BDW_WORKLIB)/modules/in_buff/BASIC/stratus_hls.bdr :  in_buff.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/in_buff/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/in_buff/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.in_buff.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_in_buff_BASIC) \
		-d $(BDW_WORKLIB)/modules/in_buff/BASIC -o in_buff_rtl.cpp \
		--hls_module=in_buff --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_in_buff_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_in_buff_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_in_buff_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 in_buff.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_trace.h : $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_trace.h.updated

$(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_trace.h.updated : $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module in_buff -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_trace.h.updated

catHLLog_in_buff_BASIC:
	cat $(BDW_WORKLIB)/modules/in_buff/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_in_buff_BASIC : hls_in_buff_BASIC 


hls_in_buff_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_in_buff_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.v prep_vlog_in_buff_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.in_buff.BASIC $(MAKE) CWBExec=1 hls_in_buff_BASIC
endif

catVLGLog_in_buff_BASIC : catHLLog_in_buff_BASIC
	cat $(BDW_WORKLIB)/modules/in_buff/BASIC/stratus_vlg.log

#
#	view rule
#
view_in_buff_BASIC : hls_in_buff_BASIC
	@bdw_view_verdi -project project.tcl -modules in_buff -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.o : $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/in_buff_cosim.h $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl in_buff`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/in_buff/BASIC -I./ $(CCFLAGS_in_buff_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl in_buff BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.o  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff.o :  in_buff.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.h $(BDW_WORKLIB)/wrappers/in_buff_cosim.h $(BDW_WORKLIB)/wrappers/in_buff_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/in_buff/BASIC -I./ $(CCFLAGS_in_buff_BASIC) -o $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff.o  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp
    

$(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_hoist.o :  in_buff.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/in_buff_cosim.h $(BDW_WORKLIB)/wrappers/in_buff_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/in_buff/BASIC -I./ $(CCFLAGS_in_buff_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl in_buff BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_hoist.o  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff.d :  in_buff.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_in_buff_BASIC)  in_buff.cpp \
	| sed 's|in_buff\.o[ :]*|$(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.cpp $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff.o $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/in_buff/BASIC"
##############################################################

in_buff_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/in_buff/BASIC
in_buff_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/in_buff_BASIC
in_buff_BASIC_LIBNAME = in_buff_BASIC
in_buff_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/in_buff/BASIC
in_buff_BASIC_C_PARTS_A = $(in_buff_BASIC_WORKLIB)/objs/libin_buff_BASIC.a

prep_c_in_buff_BASIC : $(in_buff_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(in_buff_BASIC_WORKLIB) prep_c

prep_vlog_in_buff_BASIC : $(in_buff_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(in_buff_BASIC_WORKLIB) prep_vlog

prep_in_buff_BASIC : $(in_buff_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(in_buff_BASIC_WORKLIB) prep

$(in_buff_BASIC_WORKLIB)/Makefile : $(in_buff_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(in_buff_BASIC_WORKLIB) ]; then mkdir -p $(in_buff_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(in_buff_BASIC_SRCDIR) -o $(in_buff_BASIC_WORKLIB)/Makefile -module in_buff -cynthconfig BASIC  

$(in_buff_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(in_buff_BASIC_WORKLIB) ]; then mkdir -p $(in_buff_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(in_buff_BASIC_WORKLIB)/in_buff_BASIC.d :
	@if [ ! -d $(in_buff_BASIC_WORKLIB) ]; then mkdir -p $(in_buff_BASIC_WORKLIB); fi
	@touch $(in_buff_BASIC_WORKLIB)/in_buff_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_in_buff_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_in_buff_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_in_buff_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_in_buff_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_in_buff_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_in_buff_DPA = 
CCFLAGS_in_buff_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/in_buff/DPA/c_parts -DDPA=1 -DBDW_RTL_in_buff_DPA=1  $(LIB_INCLUDES_in_buff_DPA)
CCFLAGS_in_buff_DPA += ${BDW_CCFLAGS_TAIL}

hls_in_buff_DPA : hlsc_in_buff_DPA

cynth_in_buff_DPA : hlsc_in_buff_DPA 

elab_in_buff_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/in_buff/DPA/stratus_hls.bdr

optim_in_buff_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/in_buff/DPA/stratus_hls.bdr

sched_in_buff_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/in_buff/DPA/stratus_hls.bdr

hlsc_in_buff_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=in_buff BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.in_buff.DPA $(MAKE) $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=in_buff BDW_HLS_CONFIG=DPA
endif

clean_cynth_in_buff_DPA: clean_hls_in_buff_DPA

clean_in_buff_DPA: clean_hls_in_buff_DPA

clean_hls_in_buff_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/in_buff/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.in_buff.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.in_buff.DPA.s

kill_hls_in_buff_DPA:
	@bdw_kill -job hls.in_buff.DPA
	@bdw_kill -job hls.in_buff.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_in_buff_DPA :
	bdw_htmlgen -project project.tcl -module in_buff -cynthconfig DPA



$(BDW_WORKLIB)/modules/in_buff/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.cpp

$(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.cpp $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.v $(BDW_WORKLIB)/modules/in_buff/DPA/stratus_hls.bdr :  in_buff.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/in_buff/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/in_buff/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.in_buff.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_in_buff_DPA) \
		-d $(BDW_WORKLIB)/modules/in_buff/DPA -o in_buff_rtl.cpp \
		--hls_module=in_buff --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_in_buff_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_in_buff_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_in_buff_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 in_buff.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_trace.h : $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_trace.h.updated

$(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_trace.h.updated : $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module in_buff -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_trace.h.updated

catHLLog_in_buff_DPA:
	cat $(BDW_WORKLIB)/modules/in_buff/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_in_buff_DPA : hls_in_buff_DPA 


hls_in_buff_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_in_buff_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.v prep_vlog_in_buff_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.in_buff.DPA $(MAKE) CWBExec=1 hls_in_buff_DPA
endif

catVLGLog_in_buff_DPA : catHLLog_in_buff_DPA
	cat $(BDW_WORKLIB)/modules/in_buff/DPA/stratus_vlg.log

#
#	view rule
#
view_in_buff_DPA : hls_in_buff_DPA
	@bdw_view_verdi -project project.tcl -modules in_buff -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.o : $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/in_buff_cosim.h $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl in_buff`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/in_buff/DPA -I./ $(CCFLAGS_in_buff_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl in_buff DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.o  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/in_buff/DPA/in_buff.o :  in_buff.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.h $(BDW_WORKLIB)/wrappers/in_buff_cosim.h $(BDW_WORKLIB)/wrappers/in_buff_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/in_buff/DPA -I./ $(CCFLAGS_in_buff_DPA) -o $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff.o  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp
    

$(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_hoist.o :  in_buff.cpp $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/in_buff_cosim.h $(BDW_WORKLIB)/wrappers/in_buff_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/in_buff/DPA -I./ $(CCFLAGS_in_buff_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl in_buff DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_hoist.o  $(BDW_WORKLIB)/wrappers/in_buff_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/in_buff/DPA/in_buff.d :  in_buff.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_in_buff_DPA)  in_buff.cpp \
	| sed 's|in_buff\.o[ :]*|$(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.cpp $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff.o $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/in_buff/DPA"
##############################################################

in_buff_DPA_SRCDIR = $(BDW_WORKLIB)/modules/in_buff/DPA
in_buff_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/in_buff_DPA
in_buff_DPA_LIBNAME = in_buff_DPA
in_buff_DPA_WORKLIB = $(BDW_WORKLIB)/modules/in_buff/DPA
in_buff_DPA_C_PARTS_A = $(in_buff_DPA_WORKLIB)/objs/libin_buff_DPA.a

prep_c_in_buff_DPA : $(in_buff_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(in_buff_DPA_WORKLIB) prep_c

prep_vlog_in_buff_DPA : $(in_buff_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(in_buff_DPA_WORKLIB) prep_vlog

prep_in_buff_DPA : $(in_buff_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(in_buff_DPA_WORKLIB) prep

$(in_buff_DPA_WORKLIB)/Makefile : $(in_buff_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(in_buff_DPA_WORKLIB) ]; then mkdir -p $(in_buff_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(in_buff_DPA_SRCDIR) -o $(in_buff_DPA_WORKLIB)/Makefile -module in_buff -cynthconfig DPA  

$(in_buff_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(in_buff_DPA_WORKLIB) ]; then mkdir -p $(in_buff_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(in_buff_DPA_WORKLIB)/in_buff_DPA.d :
	@if [ ! -d $(in_buff_DPA_WORKLIB) ]; then mkdir -p $(in_buff_DPA_WORKLIB); fi
	@touch $(in_buff_DPA_WORKLIB)/in_buff_DPA.d



##############################################################
## HLS Module "fix2float"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/fix2float.d :  fix2float.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  fix2float.cpp \
	| sed 's|fix2float\.o[ :]*|$(BDW_OBJDIR)/fix2float.o $(BDW_OBJDIR)/fix2float.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/fix2float_trace.h : $(BDW_WORKLIB)/wrappers/fix2float_trace.h.updated

$(BDW_WORKLIB)/wrappers/fix2float_trace.h.updated :  fix2float.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fix2float -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fix2float_trace.h.updated



$(BDW_WORKLIB)/objs/fix2float.o:  fix2float.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.h $(BDW_WORKLIB)/wrappers/fix2float_cosim.h $(BDW_WORKLIB)/wrappers/fix2float_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/fix2float.o  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp

.INTERMEDIATE : fix2float_wrap.h

fix2float_wrap.h : $(BDW_WORKLIB)/wrappers/fix2float_wrap.h

$(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.h $(BDW_WORKLIB)/wrappers/fix2float_cosim.h $(BDW_WORKLIB)/wrappers/fix2float_cosim.v   : $(BDW_WRAPDIR)/fix2float.updated

$(BDW_WRAPDIR)/fix2float.updated :  fix2float.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module fix2float "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/fix2float.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module fix2float -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fix2float_trace.h.updated
$(BDW_WORKLIB)/wrappers/fix2float_wrap.d :  fix2float.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   fix2float.cpp \
		| sed 's|fix2float\.o[ :]*|$(BDW_WRAPDIR)/fix2float.updated $(BDW_WORKLIB)/wrappers/fix2float_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/fix2float_wrap.d 




##############################################################
## HLS Module "fix2float" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_fix2float_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fix2float_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fix2float_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fix2float_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fix2float_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fix2float_BASIC = 
CCFLAGS_fix2float_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fix2float/BASIC/c_parts -DBASIC=1 -DBDW_RTL_fix2float_BASIC=1  $(LIB_INCLUDES_fix2float_BASIC)
CCFLAGS_fix2float_BASIC += ${BDW_CCFLAGS_TAIL}

hls_fix2float_BASIC : hlsc_fix2float_BASIC

cynth_fix2float_BASIC : hlsc_fix2float_BASIC 

elab_fix2float_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fix2float/BASIC/stratus_hls.bdr

optim_fix2float_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fix2float/BASIC/stratus_hls.bdr

sched_fix2float_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fix2float/BASIC/stratus_hls.bdr

hlsc_fix2float_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fix2float BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.fix2float.BASIC $(MAKE) $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fix2float BDW_HLS_CONFIG=BASIC
endif

clean_cynth_fix2float_BASIC: clean_hls_fix2float_BASIC

clean_fix2float_BASIC: clean_hls_fix2float_BASIC

clean_hls_fix2float_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/fix2float/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fix2float.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fix2float.BASIC.s

kill_hls_fix2float_BASIC:
	@bdw_kill -job hls.fix2float.BASIC
	@bdw_kill -job hls.fix2float.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fix2float_BASIC :
	bdw_htmlgen -project project.tcl -module fix2float -cynthconfig BASIC



$(BDW_WORKLIB)/modules/fix2float/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.cpp

$(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.cpp $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.v $(BDW_WORKLIB)/modules/fix2float/BASIC/stratus_hls.bdr :  fix2float.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fix2float/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/fix2float/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.fix2float.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fix2float_BASIC) \
		-d $(BDW_WORKLIB)/modules/fix2float/BASIC -o fix2float_rtl.cpp \
		--hls_module=fix2float --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fix2float_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fix2float_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fix2float_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fix2float.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_trace.h : $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_trace.h.updated

$(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_trace.h.updated : $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fix2float -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_trace.h.updated

catHLLog_fix2float_BASIC:
	cat $(BDW_WORKLIB)/modules/fix2float/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fix2float_BASIC : hls_fix2float_BASIC 


hls_fix2float_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fix2float_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.v prep_vlog_fix2float_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.fix2float.BASIC $(MAKE) CWBExec=1 hls_fix2float_BASIC
endif

catVLGLog_fix2float_BASIC : catHLLog_fix2float_BASIC
	cat $(BDW_WORKLIB)/modules/fix2float/BASIC/stratus_vlg.log

#
#	view rule
#
view_fix2float_BASIC : hls_fix2float_BASIC
	@bdw_view_verdi -project project.tcl -modules fix2float -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.o : $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp $(BDW_WORKLIB)/wrappers/fix2float_cosim.h $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fix2float`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fix2float/BASIC -I./ $(CCFLAGS_fix2float_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fix2float BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.o  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float.o :  fix2float.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.h $(BDW_WORKLIB)/wrappers/fix2float_cosim.h $(BDW_WORKLIB)/wrappers/fix2float_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fix2float/BASIC -I./ $(CCFLAGS_fix2float_BASIC) -o $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float.o  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp
    

$(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_hoist.o :  fix2float.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp $(BDW_WORKLIB)/wrappers/fix2float_cosim.h $(BDW_WORKLIB)/wrappers/fix2float_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fix2float/BASIC -I./ $(CCFLAGS_fix2float_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fix2float BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_hoist.o  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float.d :  fix2float.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fix2float_BASIC)  fix2float.cpp \
	| sed 's|fix2float\.o[ :]*|$(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.cpp $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float.o $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fix2float/BASIC"
##############################################################

fix2float_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/fix2float/BASIC
fix2float_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fix2float_BASIC
fix2float_BASIC_LIBNAME = fix2float_BASIC
fix2float_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/fix2float/BASIC
fix2float_BASIC_C_PARTS_A = $(fix2float_BASIC_WORKLIB)/objs/libfix2float_BASIC.a

prep_c_fix2float_BASIC : $(fix2float_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fix2float_BASIC_WORKLIB) prep_c

prep_vlog_fix2float_BASIC : $(fix2float_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fix2float_BASIC_WORKLIB) prep_vlog

prep_fix2float_BASIC : $(fix2float_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fix2float_BASIC_WORKLIB) prep

$(fix2float_BASIC_WORKLIB)/Makefile : $(fix2float_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fix2float_BASIC_WORKLIB) ]; then mkdir -p $(fix2float_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fix2float_BASIC_SRCDIR) -o $(fix2float_BASIC_WORKLIB)/Makefile -module fix2float -cynthconfig BASIC  

$(fix2float_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fix2float_BASIC_WORKLIB) ]; then mkdir -p $(fix2float_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fix2float_BASIC_WORKLIB)/fix2float_BASIC.d :
	@if [ ! -d $(fix2float_BASIC_WORKLIB) ]; then mkdir -p $(fix2float_BASIC_WORKLIB); fi
	@touch $(fix2float_BASIC_WORKLIB)/fix2float_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_fix2float_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fix2float_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fix2float_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fix2float_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fix2float_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fix2float_DPA = 
CCFLAGS_fix2float_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fix2float/DPA/c_parts -DDPA=1 -DBDW_RTL_fix2float_DPA=1  $(LIB_INCLUDES_fix2float_DPA)
CCFLAGS_fix2float_DPA += ${BDW_CCFLAGS_TAIL}

hls_fix2float_DPA : hlsc_fix2float_DPA

cynth_fix2float_DPA : hlsc_fix2float_DPA 

elab_fix2float_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fix2float/DPA/stratus_hls.bdr

optim_fix2float_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fix2float/DPA/stratus_hls.bdr

sched_fix2float_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fix2float/DPA/stratus_hls.bdr

hlsc_fix2float_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fix2float BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.fix2float.DPA $(MAKE) $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fix2float BDW_HLS_CONFIG=DPA
endif

clean_cynth_fix2float_DPA: clean_hls_fix2float_DPA

clean_fix2float_DPA: clean_hls_fix2float_DPA

clean_hls_fix2float_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/fix2float/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fix2float.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fix2float.DPA.s

kill_hls_fix2float_DPA:
	@bdw_kill -job hls.fix2float.DPA
	@bdw_kill -job hls.fix2float.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fix2float_DPA :
	bdw_htmlgen -project project.tcl -module fix2float -cynthconfig DPA



$(BDW_WORKLIB)/modules/fix2float/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.cpp

$(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.cpp $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.v $(BDW_WORKLIB)/modules/fix2float/DPA/stratus_hls.bdr :  fix2float.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fix2float/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/fix2float/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.fix2float.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fix2float_DPA) \
		-d $(BDW_WORKLIB)/modules/fix2float/DPA -o fix2float_rtl.cpp \
		--hls_module=fix2float --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fix2float_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fix2float_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fix2float_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fix2float.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_trace.h : $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_trace.h.updated

$(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_trace.h.updated : $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fix2float -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_trace.h.updated

catHLLog_fix2float_DPA:
	cat $(BDW_WORKLIB)/modules/fix2float/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fix2float_DPA : hls_fix2float_DPA 


hls_fix2float_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fix2float_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.v prep_vlog_fix2float_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.fix2float.DPA $(MAKE) CWBExec=1 hls_fix2float_DPA
endif

catVLGLog_fix2float_DPA : catHLLog_fix2float_DPA
	cat $(BDW_WORKLIB)/modules/fix2float/DPA/stratus_vlg.log

#
#	view rule
#
view_fix2float_DPA : hls_fix2float_DPA
	@bdw_view_verdi -project project.tcl -modules fix2float -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.o : $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp $(BDW_WORKLIB)/wrappers/fix2float_cosim.h $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fix2float`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fix2float/DPA -I./ $(CCFLAGS_fix2float_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fix2float DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.o  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fix2float/DPA/fix2float.o :  fix2float.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.h $(BDW_WORKLIB)/wrappers/fix2float_cosim.h $(BDW_WORKLIB)/wrappers/fix2float_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fix2float/DPA -I./ $(CCFLAGS_fix2float_DPA) -o $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float.o  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp
    

$(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_hoist.o :  fix2float.cpp $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp $(BDW_WORKLIB)/wrappers/fix2float_cosim.h $(BDW_WORKLIB)/wrappers/fix2float_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fix2float/DPA -I./ $(CCFLAGS_fix2float_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fix2float DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_hoist.o  $(BDW_WORKLIB)/wrappers/fix2float_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fix2float/DPA/fix2float.d :  fix2float.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fix2float_DPA)  fix2float.cpp \
	| sed 's|fix2float\.o[ :]*|$(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.cpp $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float.o $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fix2float/DPA"
##############################################################

fix2float_DPA_SRCDIR = $(BDW_WORKLIB)/modules/fix2float/DPA
fix2float_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fix2float_DPA
fix2float_DPA_LIBNAME = fix2float_DPA
fix2float_DPA_WORKLIB = $(BDW_WORKLIB)/modules/fix2float/DPA
fix2float_DPA_C_PARTS_A = $(fix2float_DPA_WORKLIB)/objs/libfix2float_DPA.a

prep_c_fix2float_DPA : $(fix2float_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fix2float_DPA_WORKLIB) prep_c

prep_vlog_fix2float_DPA : $(fix2float_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fix2float_DPA_WORKLIB) prep_vlog

prep_fix2float_DPA : $(fix2float_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fix2float_DPA_WORKLIB) prep

$(fix2float_DPA_WORKLIB)/Makefile : $(fix2float_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fix2float_DPA_WORKLIB) ]; then mkdir -p $(fix2float_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fix2float_DPA_SRCDIR) -o $(fix2float_DPA_WORKLIB)/Makefile -module fix2float -cynthconfig DPA  

$(fix2float_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fix2float_DPA_WORKLIB) ]; then mkdir -p $(fix2float_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fix2float_DPA_WORKLIB)/fix2float_DPA.d :
	@if [ ! -d $(fix2float_DPA_WORKLIB) ]; then mkdir -p $(fix2float_DPA_WORKLIB); fi
	@touch $(fix2float_DPA_WORKLIB)/fix2float_DPA.d



##############################################################
## HLS Module "fp_div"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/fp_div.d :  fp_div.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  fp_div.cpp \
	| sed 's|fp_div\.o[ :]*|$(BDW_OBJDIR)/fp_div.o $(BDW_OBJDIR)/fp_div.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/fp_div_trace.h : $(BDW_WORKLIB)/wrappers/fp_div_trace.h.updated

$(BDW_WORKLIB)/wrappers/fp_div_trace.h.updated :  fp_div.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_div -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fp_div_trace.h.updated



$(BDW_WORKLIB)/objs/fp_div.o:  fp_div.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_cosim.h $(BDW_WORKLIB)/wrappers/fp_div_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/fp_div.o  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp

.INTERMEDIATE : fp_div_wrap.h

fp_div_wrap.h : $(BDW_WORKLIB)/wrappers/fp_div_wrap.h

$(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_cosim.h $(BDW_WORKLIB)/wrappers/fp_div_cosim.v   : $(BDW_WRAPDIR)/fp_div.updated

$(BDW_WRAPDIR)/fp_div.updated :  fp_div.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module fp_div "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/fp_div.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_div -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fp_div_trace.h.updated
$(BDW_WORKLIB)/wrappers/fp_div_wrap.d :  fp_div.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   fp_div.cpp \
		| sed 's|fp_div\.o[ :]*|$(BDW_WRAPDIR)/fp_div.updated $(BDW_WORKLIB)/wrappers/fp_div_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/fp_div_wrap.d 




##############################################################
## HLS Module "fp_div" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_fp_div_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fp_div_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_div_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fp_div_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fp_div_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fp_div_BASIC = 
CCFLAGS_fp_div_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fp_div/BASIC/c_parts -DBASIC=1 -DBDW_RTL_fp_div_BASIC=1  $(LIB_INCLUDES_fp_div_BASIC)
CCFLAGS_fp_div_BASIC += ${BDW_CCFLAGS_TAIL}

hls_fp_div_BASIC : hlsc_fp_div_BASIC

cynth_fp_div_BASIC : hlsc_fp_div_BASIC 

elab_fp_div_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fp_div/BASIC/stratus_hls.bdr

optim_fp_div_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fp_div/BASIC/stratus_hls.bdr

sched_fp_div_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fp_div/BASIC/stratus_hls.bdr

hlsc_fp_div_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fp_div BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.fp_div.BASIC $(MAKE) $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fp_div BDW_HLS_CONFIG=BASIC
endif

clean_cynth_fp_div_BASIC: clean_hls_fp_div_BASIC

clean_fp_div_BASIC: clean_hls_fp_div_BASIC

clean_hls_fp_div_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/fp_div/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_div.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_div.BASIC.s

kill_hls_fp_div_BASIC:
	@bdw_kill -job hls.fp_div.BASIC
	@bdw_kill -job hls.fp_div.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fp_div_BASIC :
	bdw_htmlgen -project project.tcl -module fp_div -cynthconfig BASIC



$(BDW_WORKLIB)/modules/fp_div/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.cpp

$(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.cpp $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.v $(BDW_WORKLIB)/modules/fp_div/BASIC/stratus_hls.bdr :  fp_div.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fp_div/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/fp_div/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.fp_div.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fp_div_BASIC) \
		-d $(BDW_WORKLIB)/modules/fp_div/BASIC -o fp_div_rtl.cpp \
		--hls_module=fp_div --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fp_div_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fp_div_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fp_div_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fp_div.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_trace.h : $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_trace.h.updated

$(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_trace.h.updated : $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_div -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_trace.h.updated

catHLLog_fp_div_BASIC:
	cat $(BDW_WORKLIB)/modules/fp_div/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fp_div_BASIC : hls_fp_div_BASIC 


hls_fp_div_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fp_div_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.v prep_vlog_fp_div_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.fp_div.BASIC $(MAKE) CWBExec=1 hls_fp_div_BASIC
endif

catVLGLog_fp_div_BASIC : catHLLog_fp_div_BASIC
	cat $(BDW_WORKLIB)/modules/fp_div/BASIC/stratus_vlg.log

#
#	view rule
#
view_fp_div_BASIC : hls_fp_div_BASIC
	@bdw_view_verdi -project project.tcl -modules fp_div -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.o : $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_div_cosim.h $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fp_div`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_div/BASIC -I./ $(CCFLAGS_fp_div_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_div BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.o  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div.o :  fp_div.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_cosim.h $(BDW_WORKLIB)/wrappers/fp_div_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_div/BASIC -I./ $(CCFLAGS_fp_div_BASIC) -o $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div.o  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp
    

$(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_hoist.o :  fp_div.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_div_cosim.h $(BDW_WORKLIB)/wrappers/fp_div_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_div/BASIC -I./ $(CCFLAGS_fp_div_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_div BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_hoist.o  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div.d :  fp_div.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fp_div_BASIC)  fp_div.cpp \
	| sed 's|fp_div\.o[ :]*|$(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.cpp $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div.o $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fp_div/BASIC"
##############################################################

fp_div_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/fp_div/BASIC
fp_div_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fp_div_BASIC
fp_div_BASIC_LIBNAME = fp_div_BASIC
fp_div_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/fp_div/BASIC
fp_div_BASIC_C_PARTS_A = $(fp_div_BASIC_WORKLIB)/objs/libfp_div_BASIC.a

prep_c_fp_div_BASIC : $(fp_div_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_div_BASIC_WORKLIB) prep_c

prep_vlog_fp_div_BASIC : $(fp_div_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_div_BASIC_WORKLIB) prep_vlog

prep_fp_div_BASIC : $(fp_div_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_div_BASIC_WORKLIB) prep

$(fp_div_BASIC_WORKLIB)/Makefile : $(fp_div_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fp_div_BASIC_WORKLIB) ]; then mkdir -p $(fp_div_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fp_div_BASIC_SRCDIR) -o $(fp_div_BASIC_WORKLIB)/Makefile -module fp_div -cynthconfig BASIC  

$(fp_div_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fp_div_BASIC_WORKLIB) ]; then mkdir -p $(fp_div_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fp_div_BASIC_WORKLIB)/fp_div_BASIC.d :
	@if [ ! -d $(fp_div_BASIC_WORKLIB) ]; then mkdir -p $(fp_div_BASIC_WORKLIB); fi
	@touch $(fp_div_BASIC_WORKLIB)/fp_div_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_fp_div_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fp_div_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_div_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fp_div_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fp_div_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fp_div_DPA = 
CCFLAGS_fp_div_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fp_div/DPA/c_parts -DDPA=1 -DBDW_RTL_fp_div_DPA=1  $(LIB_INCLUDES_fp_div_DPA)
CCFLAGS_fp_div_DPA += ${BDW_CCFLAGS_TAIL}

hls_fp_div_DPA : hlsc_fp_div_DPA

cynth_fp_div_DPA : hlsc_fp_div_DPA 

elab_fp_div_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fp_div/DPA/stratus_hls.bdr

optim_fp_div_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fp_div/DPA/stratus_hls.bdr

sched_fp_div_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fp_div/DPA/stratus_hls.bdr

hlsc_fp_div_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fp_div BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.fp_div.DPA $(MAKE) $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fp_div BDW_HLS_CONFIG=DPA
endif

clean_cynth_fp_div_DPA: clean_hls_fp_div_DPA

clean_fp_div_DPA: clean_hls_fp_div_DPA

clean_hls_fp_div_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/fp_div/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_div.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_div.DPA.s

kill_hls_fp_div_DPA:
	@bdw_kill -job hls.fp_div.DPA
	@bdw_kill -job hls.fp_div.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fp_div_DPA :
	bdw_htmlgen -project project.tcl -module fp_div -cynthconfig DPA



$(BDW_WORKLIB)/modules/fp_div/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.cpp

$(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.cpp $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.v $(BDW_WORKLIB)/modules/fp_div/DPA/stratus_hls.bdr :  fp_div.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fp_div/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/fp_div/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.fp_div.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fp_div_DPA) \
		-d $(BDW_WORKLIB)/modules/fp_div/DPA -o fp_div_rtl.cpp \
		--hls_module=fp_div --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fp_div_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fp_div_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fp_div_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fp_div.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_trace.h : $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_trace.h.updated

$(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_trace.h.updated : $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_div -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_trace.h.updated

catHLLog_fp_div_DPA:
	cat $(BDW_WORKLIB)/modules/fp_div/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fp_div_DPA : hls_fp_div_DPA 


hls_fp_div_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fp_div_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.v prep_vlog_fp_div_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.fp_div.DPA $(MAKE) CWBExec=1 hls_fp_div_DPA
endif

catVLGLog_fp_div_DPA : catHLLog_fp_div_DPA
	cat $(BDW_WORKLIB)/modules/fp_div/DPA/stratus_vlg.log

#
#	view rule
#
view_fp_div_DPA : hls_fp_div_DPA
	@bdw_view_verdi -project project.tcl -modules fp_div -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.o : $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_div_cosim.h $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fp_div`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_div/DPA -I./ $(CCFLAGS_fp_div_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_div DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.o  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fp_div/DPA/fp_div.o :  fp_div.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_cosim.h $(BDW_WORKLIB)/wrappers/fp_div_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_div/DPA -I./ $(CCFLAGS_fp_div_DPA) -o $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div.o  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp
    

$(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_hoist.o :  fp_div.cpp $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_div_cosim.h $(BDW_WORKLIB)/wrappers/fp_div_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_div/DPA -I./ $(CCFLAGS_fp_div_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_div DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_hoist.o  $(BDW_WORKLIB)/wrappers/fp_div_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fp_div/DPA/fp_div.d :  fp_div.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fp_div_DPA)  fp_div.cpp \
	| sed 's|fp_div\.o[ :]*|$(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.cpp $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div.o $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fp_div/DPA"
##############################################################

fp_div_DPA_SRCDIR = $(BDW_WORKLIB)/modules/fp_div/DPA
fp_div_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fp_div_DPA
fp_div_DPA_LIBNAME = fp_div_DPA
fp_div_DPA_WORKLIB = $(BDW_WORKLIB)/modules/fp_div/DPA
fp_div_DPA_C_PARTS_A = $(fp_div_DPA_WORKLIB)/objs/libfp_div_DPA.a

prep_c_fp_div_DPA : $(fp_div_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_div_DPA_WORKLIB) prep_c

prep_vlog_fp_div_DPA : $(fp_div_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_div_DPA_WORKLIB) prep_vlog

prep_fp_div_DPA : $(fp_div_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_div_DPA_WORKLIB) prep

$(fp_div_DPA_WORKLIB)/Makefile : $(fp_div_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fp_div_DPA_WORKLIB) ]; then mkdir -p $(fp_div_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fp_div_DPA_SRCDIR) -o $(fp_div_DPA_WORKLIB)/Makefile -module fp_div -cynthconfig DPA  

$(fp_div_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fp_div_DPA_WORKLIB) ]; then mkdir -p $(fp_div_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fp_div_DPA_WORKLIB)/fp_div_DPA.d :
	@if [ ! -d $(fp_div_DPA_WORKLIB) ]; then mkdir -p $(fp_div_DPA_WORKLIB); fi
	@touch $(fp_div_DPA_WORKLIB)/fp_div_DPA.d



##############################################################
## HLS Module "linear_dequant"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/linear_dequant.d :  linear_dequant.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  linear_dequant.cpp \
	| sed 's|linear_dequant\.o[ :]*|$(BDW_OBJDIR)/linear_dequant.o $(BDW_OBJDIR)/linear_dequant.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/linear_dequant_trace.h : $(BDW_WORKLIB)/wrappers/linear_dequant_trace.h.updated

$(BDW_WORKLIB)/wrappers/linear_dequant_trace.h.updated :  linear_dequant.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module linear_dequant -vcd 
	@touch $(BDW_WORKLIB)/wrappers/linear_dequant_trace.h.updated



$(BDW_WORKLIB)/objs/linear_dequant.o:  linear_dequant.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.h $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.h $(BDW_WORKLIB)/wrappers/linear_dequant_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/linear_dequant.o  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp

.INTERMEDIATE : linear_dequant_wrap.h

linear_dequant_wrap.h : $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.h

$(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.h $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.h $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.v   : $(BDW_WRAPDIR)/linear_dequant.updated

$(BDW_WRAPDIR)/linear_dequant.updated :  linear_dequant.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module linear_dequant "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/linear_dequant.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module linear_dequant -vcd 
	@touch $(BDW_WORKLIB)/wrappers/linear_dequant_trace.h.updated
$(BDW_WORKLIB)/wrappers/linear_dequant_wrap.d :  linear_dequant.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   linear_dequant.cpp \
		| sed 's|linear_dequant\.o[ :]*|$(BDW_WRAPDIR)/linear_dequant.updated $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.d 




##############################################################
## HLS Module "linear_dequant" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_linear_dequant_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_linear_dequant_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_linear_dequant_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_linear_dequant_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_linear_dequant_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_linear_dequant_BASIC = 
CCFLAGS_linear_dequant_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/linear_dequant/BASIC/c_parts -DBASIC=1 -DBDW_RTL_linear_dequant_BASIC=1  $(LIB_INCLUDES_linear_dequant_BASIC)
CCFLAGS_linear_dequant_BASIC += ${BDW_CCFLAGS_TAIL}

hls_linear_dequant_BASIC : hlsc_linear_dequant_BASIC

cynth_linear_dequant_BASIC : hlsc_linear_dequant_BASIC 

elab_linear_dequant_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/BASIC/stratus_hls.bdr

optim_linear_dequant_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/BASIC/stratus_hls.bdr

sched_linear_dequant_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/BASIC/stratus_hls.bdr

hlsc_linear_dequant_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=linear_dequant BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.linear_dequant.BASIC $(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=linear_dequant BDW_HLS_CONFIG=BASIC
endif

clean_cynth_linear_dequant_BASIC: clean_hls_linear_dequant_BASIC

clean_linear_dequant_BASIC: clean_hls_linear_dequant_BASIC

clean_hls_linear_dequant_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/linear_dequant/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.linear_dequant.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.linear_dequant.BASIC.s

kill_hls_linear_dequant_BASIC:
	@bdw_kill -job hls.linear_dequant.BASIC
	@bdw_kill -job hls.linear_dequant.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_linear_dequant_BASIC :
	bdw_htmlgen -project project.tcl -module linear_dequant -cynthconfig BASIC



$(BDW_WORKLIB)/modules/linear_dequant/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.cpp

$(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.cpp $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.v $(BDW_WORKLIB)/modules/linear_dequant/BASIC/stratus_hls.bdr :  linear_dequant.cpp  $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/linear_dequant/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/linear_dequant/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.linear_dequant.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_linear_dequant_BASIC) \
		-d $(BDW_WORKLIB)/modules/linear_dequant/BASIC -o linear_dequant_rtl.cpp \
		--hls_module=linear_dequant --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_linear_dequant_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_linear_dequant_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_linear_dequant_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 linear_dequant.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_trace.h : $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_trace.h.updated

$(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_trace.h.updated : $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module linear_dequant -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_trace.h.updated

catHLLog_linear_dequant_BASIC:
	cat $(BDW_WORKLIB)/modules/linear_dequant/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_linear_dequant_BASIC : hls_linear_dequant_BASIC 


hls_linear_dequant_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_linear_dequant_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.v prep_vlog_linear_dequant_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.linear_dequant.BASIC $(MAKE) CWBExec=1 hls_linear_dequant_BASIC
endif

catVLGLog_linear_dequant_BASIC : catHLLog_linear_dequant_BASIC
	cat $(BDW_WORKLIB)/modules/linear_dequant/BASIC/stratus_vlg.log

#
#	view rule
#
view_linear_dequant_BASIC : hls_linear_dequant_BASIC
	@bdw_view_verdi -project project.tcl -modules linear_dequant -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.o : $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.h $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl linear_dequant`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/linear_dequant/BASIC -I./ $(CCFLAGS_linear_dequant_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl linear_dequant BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.o  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant.o :  linear_dequant.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.h $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.h $(BDW_WORKLIB)/wrappers/linear_dequant_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/linear_dequant/BASIC -I./ $(CCFLAGS_linear_dequant_BASIC) -o $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant.o  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp
    

$(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_hoist.o :  linear_dequant.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.h $(BDW_WORKLIB)/wrappers/linear_dequant_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/linear_dequant/BASIC -I./ $(CCFLAGS_linear_dequant_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl linear_dequant BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_hoist.o  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant.d :  linear_dequant.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_linear_dequant_BASIC)  linear_dequant.cpp \
	| sed 's|linear_dequant\.o[ :]*|$(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.cpp $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant.o $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/linear_dequant/BASIC"
##############################################################

linear_dequant_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/linear_dequant/BASIC
linear_dequant_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/linear_dequant_BASIC
linear_dequant_BASIC_LIBNAME = linear_dequant_BASIC
linear_dequant_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/linear_dequant/BASIC
linear_dequant_BASIC_C_PARTS_A = $(linear_dequant_BASIC_WORKLIB)/objs/liblinear_dequant_BASIC.a

prep_c_linear_dequant_BASIC : $(linear_dequant_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(linear_dequant_BASIC_WORKLIB) prep_c

prep_vlog_linear_dequant_BASIC : $(linear_dequant_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(linear_dequant_BASIC_WORKLIB) prep_vlog

prep_linear_dequant_BASIC : $(linear_dequant_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(linear_dequant_BASIC_WORKLIB) prep

$(linear_dequant_BASIC_WORKLIB)/Makefile : $(linear_dequant_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(linear_dequant_BASIC_WORKLIB) ]; then mkdir -p $(linear_dequant_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(linear_dequant_BASIC_SRCDIR) -o $(linear_dequant_BASIC_WORKLIB)/Makefile -module linear_dequant -cynthconfig BASIC  

$(linear_dequant_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(linear_dequant_BASIC_WORKLIB) ]; then mkdir -p $(linear_dequant_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(linear_dequant_BASIC_WORKLIB)/linear_dequant_BASIC.d :
	@if [ ! -d $(linear_dequant_BASIC_WORKLIB) ]; then mkdir -p $(linear_dequant_BASIC_WORKLIB); fi
	@touch $(linear_dequant_BASIC_WORKLIB)/linear_dequant_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_linear_dequant_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_linear_dequant_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_linear_dequant_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_linear_dequant_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_linear_dequant_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_linear_dequant_DPA = 
CCFLAGS_linear_dequant_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/linear_dequant/DPA/c_parts -DDPA=1 -DBDW_RTL_linear_dequant_DPA=1  $(LIB_INCLUDES_linear_dequant_DPA)
CCFLAGS_linear_dequant_DPA += ${BDW_CCFLAGS_TAIL}

hls_linear_dequant_DPA : hlsc_linear_dequant_DPA

cynth_linear_dequant_DPA : hlsc_linear_dequant_DPA 

elab_linear_dequant_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/DPA/stratus_hls.bdr

optim_linear_dequant_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/DPA/stratus_hls.bdr

sched_linear_dequant_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/DPA/stratus_hls.bdr

hlsc_linear_dequant_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=linear_dequant BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.linear_dequant.DPA $(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=linear_dequant BDW_HLS_CONFIG=DPA
endif

clean_cynth_linear_dequant_DPA: clean_hls_linear_dequant_DPA

clean_linear_dequant_DPA: clean_hls_linear_dequant_DPA

clean_hls_linear_dequant_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/linear_dequant/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.linear_dequant.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.linear_dequant.DPA.s

kill_hls_linear_dequant_DPA:
	@bdw_kill -job hls.linear_dequant.DPA
	@bdw_kill -job hls.linear_dequant.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_linear_dequant_DPA :
	bdw_htmlgen -project project.tcl -module linear_dequant -cynthconfig DPA



$(BDW_WORKLIB)/modules/linear_dequant/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.cpp

$(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.cpp $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.v $(BDW_WORKLIB)/modules/linear_dequant/DPA/stratus_hls.bdr :  linear_dequant.cpp  $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_WORKLIB)/wrappers/fp_div_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/linear_dequant/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/linear_dequant/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.linear_dequant.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_linear_dequant_DPA) \
		-d $(BDW_WORKLIB)/modules/linear_dequant/DPA -o linear_dequant_rtl.cpp \
		--hls_module=linear_dequant --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_linear_dequant_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_linear_dequant_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_linear_dequant_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 linear_dequant.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_trace.h : $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_trace.h.updated

$(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_trace.h.updated : $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module linear_dequant -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_trace.h.updated

catHLLog_linear_dequant_DPA:
	cat $(BDW_WORKLIB)/modules/linear_dequant/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_linear_dequant_DPA : hls_linear_dequant_DPA 


hls_linear_dequant_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_linear_dequant_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.v prep_vlog_linear_dequant_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.linear_dequant.DPA $(MAKE) CWBExec=1 hls_linear_dequant_DPA
endif

catVLGLog_linear_dequant_DPA : catHLLog_linear_dequant_DPA
	cat $(BDW_WORKLIB)/modules/linear_dequant/DPA/stratus_vlg.log

#
#	view rule
#
view_linear_dequant_DPA : hls_linear_dequant_DPA
	@bdw_view_verdi -project project.tcl -modules linear_dequant -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.o : $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.h $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl linear_dequant`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/linear_dequant/DPA -I./ $(CCFLAGS_linear_dequant_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl linear_dequant DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.o  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant.o :  linear_dequant.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.h $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.h $(BDW_WORKLIB)/wrappers/linear_dequant_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/linear_dequant/DPA -I./ $(CCFLAGS_linear_dequant_DPA) -o $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant.o  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp
    

$(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_hoist.o :  linear_dequant.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp $(BDW_WORKLIB)/wrappers/linear_dequant_cosim.h $(BDW_WORKLIB)/wrappers/linear_dequant_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/linear_dequant/DPA -I./ $(CCFLAGS_linear_dequant_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl linear_dequant DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_hoist.o  $(BDW_WORKLIB)/wrappers/linear_dequant_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant.d :  linear_dequant.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_linear_dequant_DPA)  linear_dequant.cpp \
	| sed 's|linear_dequant\.o[ :]*|$(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.cpp $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant.o $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/linear_dequant/DPA"
##############################################################

linear_dequant_DPA_SRCDIR = $(BDW_WORKLIB)/modules/linear_dequant/DPA
linear_dequant_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/linear_dequant_DPA
linear_dequant_DPA_LIBNAME = linear_dequant_DPA
linear_dequant_DPA_WORKLIB = $(BDW_WORKLIB)/modules/linear_dequant/DPA
linear_dequant_DPA_C_PARTS_A = $(linear_dequant_DPA_WORKLIB)/objs/liblinear_dequant_DPA.a

prep_c_linear_dequant_DPA : $(linear_dequant_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(linear_dequant_DPA_WORKLIB) prep_c

prep_vlog_linear_dequant_DPA : $(linear_dequant_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(linear_dequant_DPA_WORKLIB) prep_vlog

prep_linear_dequant_DPA : $(linear_dequant_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(linear_dequant_DPA_WORKLIB) prep

$(linear_dequant_DPA_WORKLIB)/Makefile : $(linear_dequant_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(linear_dequant_DPA_WORKLIB) ]; then mkdir -p $(linear_dequant_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(linear_dequant_DPA_SRCDIR) -o $(linear_dequant_DPA_WORKLIB)/Makefile -module linear_dequant -cynthconfig DPA  

$(linear_dequant_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(linear_dequant_DPA_WORKLIB) ]; then mkdir -p $(linear_dequant_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(linear_dequant_DPA_WORKLIB)/linear_dequant_DPA.d :
	@if [ ! -d $(linear_dequant_DPA_WORKLIB) ]; then mkdir -p $(linear_dequant_DPA_WORKLIB); fi
	@touch $(linear_dequant_DPA_WORKLIB)/linear_dequant_DPA.d



##############################################################
## HLS Module "fp_mul"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/fp_mul.d :  fp_mul.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  fp_mul.cpp \
	| sed 's|fp_mul\.o[ :]*|$(BDW_OBJDIR)/fp_mul.o $(BDW_OBJDIR)/fp_mul.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/fp_mul_trace.h : $(BDW_WORKLIB)/wrappers/fp_mul_trace.h.updated

$(BDW_WORKLIB)/wrappers/fp_mul_trace.h.updated :  fp_mul.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_mul -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fp_mul_trace.h.updated



$(BDW_WORKLIB)/objs/fp_mul.o:  fp_mul.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_cosim.h $(BDW_WORKLIB)/wrappers/fp_mul_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/fp_mul.o  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp

.INTERMEDIATE : fp_mul_wrap.h

fp_mul_wrap.h : $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h

$(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_cosim.h $(BDW_WORKLIB)/wrappers/fp_mul_cosim.v   : $(BDW_WRAPDIR)/fp_mul.updated

$(BDW_WRAPDIR)/fp_mul.updated :  fp_mul.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module fp_mul "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/fp_mul.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_mul -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fp_mul_trace.h.updated
$(BDW_WORKLIB)/wrappers/fp_mul_wrap.d :  fp_mul.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   fp_mul.cpp \
		| sed 's|fp_mul\.o[ :]*|$(BDW_WRAPDIR)/fp_mul.updated $(BDW_WORKLIB)/wrappers/fp_mul_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/fp_mul_wrap.d 




##############################################################
## HLS Module "fp_mul" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_fp_mul_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fp_mul_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_mul_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fp_mul_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fp_mul_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fp_mul_BASIC = 
CCFLAGS_fp_mul_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fp_mul/BASIC/c_parts -DBASIC=1 -DBDW_RTL_fp_mul_BASIC=1  $(LIB_INCLUDES_fp_mul_BASIC)
CCFLAGS_fp_mul_BASIC += ${BDW_CCFLAGS_TAIL}

hls_fp_mul_BASIC : hlsc_fp_mul_BASIC

cynth_fp_mul_BASIC : hlsc_fp_mul_BASIC 

elab_fp_mul_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fp_mul/BASIC/stratus_hls.bdr

optim_fp_mul_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fp_mul/BASIC/stratus_hls.bdr

sched_fp_mul_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fp_mul/BASIC/stratus_hls.bdr

hlsc_fp_mul_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fp_mul BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.fp_mul.BASIC $(MAKE) $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fp_mul BDW_HLS_CONFIG=BASIC
endif

clean_cynth_fp_mul_BASIC: clean_hls_fp_mul_BASIC

clean_fp_mul_BASIC: clean_hls_fp_mul_BASIC

clean_hls_fp_mul_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/fp_mul/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_mul.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_mul.BASIC.s

kill_hls_fp_mul_BASIC:
	@bdw_kill -job hls.fp_mul.BASIC
	@bdw_kill -job hls.fp_mul.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fp_mul_BASIC :
	bdw_htmlgen -project project.tcl -module fp_mul -cynthconfig BASIC



$(BDW_WORKLIB)/modules/fp_mul/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.cpp

$(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.cpp $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.v $(BDW_WORKLIB)/modules/fp_mul/BASIC/stratus_hls.bdr :  fp_mul.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fp_mul/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/fp_mul/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.fp_mul.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fp_mul_BASIC) \
		-d $(BDW_WORKLIB)/modules/fp_mul/BASIC -o fp_mul_rtl.cpp \
		--hls_module=fp_mul --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fp_mul_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fp_mul_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fp_mul_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fp_mul.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_trace.h : $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_trace.h.updated

$(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_trace.h.updated : $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_mul -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_trace.h.updated

catHLLog_fp_mul_BASIC:
	cat $(BDW_WORKLIB)/modules/fp_mul/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fp_mul_BASIC : hls_fp_mul_BASIC 


hls_fp_mul_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fp_mul_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.v prep_vlog_fp_mul_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.fp_mul.BASIC $(MAKE) CWBExec=1 hls_fp_mul_BASIC
endif

catVLGLog_fp_mul_BASIC : catHLLog_fp_mul_BASIC
	cat $(BDW_WORKLIB)/modules/fp_mul/BASIC/stratus_vlg.log

#
#	view rule
#
view_fp_mul_BASIC : hls_fp_mul_BASIC
	@bdw_view_verdi -project project.tcl -modules fp_mul -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.o : $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_mul_cosim.h $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fp_mul`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_mul/BASIC -I./ $(CCFLAGS_fp_mul_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_mul BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.o  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul.o :  fp_mul.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_cosim.h $(BDW_WORKLIB)/wrappers/fp_mul_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_mul/BASIC -I./ $(CCFLAGS_fp_mul_BASIC) -o $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul.o  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp
    

$(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_hoist.o :  fp_mul.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_mul_cosim.h $(BDW_WORKLIB)/wrappers/fp_mul_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_mul/BASIC -I./ $(CCFLAGS_fp_mul_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_mul BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_hoist.o  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul.d :  fp_mul.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fp_mul_BASIC)  fp_mul.cpp \
	| sed 's|fp_mul\.o[ :]*|$(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.cpp $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul.o $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fp_mul/BASIC"
##############################################################

fp_mul_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/fp_mul/BASIC
fp_mul_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fp_mul_BASIC
fp_mul_BASIC_LIBNAME = fp_mul_BASIC
fp_mul_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/fp_mul/BASIC
fp_mul_BASIC_C_PARTS_A = $(fp_mul_BASIC_WORKLIB)/objs/libfp_mul_BASIC.a

prep_c_fp_mul_BASIC : $(fp_mul_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_mul_BASIC_WORKLIB) prep_c

prep_vlog_fp_mul_BASIC : $(fp_mul_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_mul_BASIC_WORKLIB) prep_vlog

prep_fp_mul_BASIC : $(fp_mul_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_mul_BASIC_WORKLIB) prep

$(fp_mul_BASIC_WORKLIB)/Makefile : $(fp_mul_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fp_mul_BASIC_WORKLIB) ]; then mkdir -p $(fp_mul_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fp_mul_BASIC_SRCDIR) -o $(fp_mul_BASIC_WORKLIB)/Makefile -module fp_mul -cynthconfig BASIC  

$(fp_mul_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fp_mul_BASIC_WORKLIB) ]; then mkdir -p $(fp_mul_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fp_mul_BASIC_WORKLIB)/fp_mul_BASIC.d :
	@if [ ! -d $(fp_mul_BASIC_WORKLIB) ]; then mkdir -p $(fp_mul_BASIC_WORKLIB); fi
	@touch $(fp_mul_BASIC_WORKLIB)/fp_mul_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_fp_mul_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fp_mul_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_mul_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fp_mul_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fp_mul_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fp_mul_DPA = 
CCFLAGS_fp_mul_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fp_mul/DPA/c_parts -DDPA=1 -DBDW_RTL_fp_mul_DPA=1  $(LIB_INCLUDES_fp_mul_DPA)
CCFLAGS_fp_mul_DPA += ${BDW_CCFLAGS_TAIL}

hls_fp_mul_DPA : hlsc_fp_mul_DPA

cynth_fp_mul_DPA : hlsc_fp_mul_DPA 

elab_fp_mul_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fp_mul/DPA/stratus_hls.bdr

optim_fp_mul_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fp_mul/DPA/stratus_hls.bdr

sched_fp_mul_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fp_mul/DPA/stratus_hls.bdr

hlsc_fp_mul_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fp_mul BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.fp_mul.DPA $(MAKE) $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fp_mul BDW_HLS_CONFIG=DPA
endif

clean_cynth_fp_mul_DPA: clean_hls_fp_mul_DPA

clean_fp_mul_DPA: clean_hls_fp_mul_DPA

clean_hls_fp_mul_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/fp_mul/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_mul.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_mul.DPA.s

kill_hls_fp_mul_DPA:
	@bdw_kill -job hls.fp_mul.DPA
	@bdw_kill -job hls.fp_mul.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fp_mul_DPA :
	bdw_htmlgen -project project.tcl -module fp_mul -cynthconfig DPA



$(BDW_WORKLIB)/modules/fp_mul/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.cpp

$(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.cpp $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.v $(BDW_WORKLIB)/modules/fp_mul/DPA/stratus_hls.bdr :  fp_mul.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fp_mul/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/fp_mul/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.fp_mul.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fp_mul_DPA) \
		-d $(BDW_WORKLIB)/modules/fp_mul/DPA -o fp_mul_rtl.cpp \
		--hls_module=fp_mul --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fp_mul_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fp_mul_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fp_mul_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fp_mul.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_trace.h : $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_trace.h.updated

$(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_trace.h.updated : $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_mul -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_trace.h.updated

catHLLog_fp_mul_DPA:
	cat $(BDW_WORKLIB)/modules/fp_mul/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fp_mul_DPA : hls_fp_mul_DPA 


hls_fp_mul_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fp_mul_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.v prep_vlog_fp_mul_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.fp_mul.DPA $(MAKE) CWBExec=1 hls_fp_mul_DPA
endif

catVLGLog_fp_mul_DPA : catHLLog_fp_mul_DPA
	cat $(BDW_WORKLIB)/modules/fp_mul/DPA/stratus_vlg.log

#
#	view rule
#
view_fp_mul_DPA : hls_fp_mul_DPA
	@bdw_view_verdi -project project.tcl -modules fp_mul -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.o : $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_mul_cosim.h $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fp_mul`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_mul/DPA -I./ $(CCFLAGS_fp_mul_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_mul DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.o  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul.o :  fp_mul.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_cosim.h $(BDW_WORKLIB)/wrappers/fp_mul_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_mul/DPA -I./ $(CCFLAGS_fp_mul_DPA) -o $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul.o  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp
    

$(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_hoist.o :  fp_mul.cpp $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_mul_cosim.h $(BDW_WORKLIB)/wrappers/fp_mul_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_mul/DPA -I./ $(CCFLAGS_fp_mul_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_mul DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_hoist.o  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul.d :  fp_mul.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fp_mul_DPA)  fp_mul.cpp \
	| sed 's|fp_mul\.o[ :]*|$(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.cpp $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul.o $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fp_mul/DPA"
##############################################################

fp_mul_DPA_SRCDIR = $(BDW_WORKLIB)/modules/fp_mul/DPA
fp_mul_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fp_mul_DPA
fp_mul_DPA_LIBNAME = fp_mul_DPA
fp_mul_DPA_WORKLIB = $(BDW_WORKLIB)/modules/fp_mul/DPA
fp_mul_DPA_C_PARTS_A = $(fp_mul_DPA_WORKLIB)/objs/libfp_mul_DPA.a

prep_c_fp_mul_DPA : $(fp_mul_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_mul_DPA_WORKLIB) prep_c

prep_vlog_fp_mul_DPA : $(fp_mul_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_mul_DPA_WORKLIB) prep_vlog

prep_fp_mul_DPA : $(fp_mul_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_mul_DPA_WORKLIB) prep

$(fp_mul_DPA_WORKLIB)/Makefile : $(fp_mul_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fp_mul_DPA_WORKLIB) ]; then mkdir -p $(fp_mul_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fp_mul_DPA_SRCDIR) -o $(fp_mul_DPA_WORKLIB)/Makefile -module fp_mul -cynthconfig DPA  

$(fp_mul_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fp_mul_DPA_WORKLIB) ]; then mkdir -p $(fp_mul_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fp_mul_DPA_WORKLIB)/fp_mul_DPA.d :
	@if [ ! -d $(fp_mul_DPA_WORKLIB) ]; then mkdir -p $(fp_mul_DPA_WORKLIB); fi
	@touch $(fp_mul_DPA_WORKLIB)/fp_mul_DPA.d



##############################################################
## HLS Module "fp_add"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/fp_add.d :  fp_add.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  fp_add.cpp \
	| sed 's|fp_add\.o[ :]*|$(BDW_OBJDIR)/fp_add.o $(BDW_OBJDIR)/fp_add.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/fp_add_trace.h : $(BDW_WORKLIB)/wrappers/fp_add_trace.h.updated

$(BDW_WORKLIB)/wrappers/fp_add_trace.h.updated :  fp_add.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_add -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fp_add_trace.h.updated



$(BDW_WORKLIB)/objs/fp_add.o:  fp_add.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_cosim.h $(BDW_WORKLIB)/wrappers/fp_add_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/fp_add.o  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp

.INTERMEDIATE : fp_add_wrap.h

fp_add_wrap.h : $(BDW_WORKLIB)/wrappers/fp_add_wrap.h

$(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_cosim.h $(BDW_WORKLIB)/wrappers/fp_add_cosim.v   : $(BDW_WRAPDIR)/fp_add.updated

$(BDW_WRAPDIR)/fp_add.updated :  fp_add.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module fp_add "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/fp_add.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_add -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fp_add_trace.h.updated
$(BDW_WORKLIB)/wrappers/fp_add_wrap.d :  fp_add.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   fp_add.cpp \
		| sed 's|fp_add\.o[ :]*|$(BDW_WRAPDIR)/fp_add.updated $(BDW_WORKLIB)/wrappers/fp_add_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/fp_add_wrap.d 




##############################################################
## HLS Module "fp_add" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_fp_add_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fp_add_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_add_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fp_add_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fp_add_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fp_add_BASIC = 
CCFLAGS_fp_add_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fp_add/BASIC/c_parts -DBASIC=1 -DBDW_RTL_fp_add_BASIC=1  $(LIB_INCLUDES_fp_add_BASIC)
CCFLAGS_fp_add_BASIC += ${BDW_CCFLAGS_TAIL}

hls_fp_add_BASIC : hlsc_fp_add_BASIC

cynth_fp_add_BASIC : hlsc_fp_add_BASIC 

elab_fp_add_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fp_add/BASIC/stratus_hls.bdr

optim_fp_add_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fp_add/BASIC/stratus_hls.bdr

sched_fp_add_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fp_add/BASIC/stratus_hls.bdr

hlsc_fp_add_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fp_add BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.fp_add.BASIC $(MAKE) $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fp_add BDW_HLS_CONFIG=BASIC
endif

clean_cynth_fp_add_BASIC: clean_hls_fp_add_BASIC

clean_fp_add_BASIC: clean_hls_fp_add_BASIC

clean_hls_fp_add_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/fp_add/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_add.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_add.BASIC.s

kill_hls_fp_add_BASIC:
	@bdw_kill -job hls.fp_add.BASIC
	@bdw_kill -job hls.fp_add.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fp_add_BASIC :
	bdw_htmlgen -project project.tcl -module fp_add -cynthconfig BASIC



$(BDW_WORKLIB)/modules/fp_add/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.cpp

$(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.cpp $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.v $(BDW_WORKLIB)/modules/fp_add/BASIC/stratus_hls.bdr :  fp_add.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fp_add/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/fp_add/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.fp_add.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fp_add_BASIC) \
		-d $(BDW_WORKLIB)/modules/fp_add/BASIC -o fp_add_rtl.cpp \
		--hls_module=fp_add --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fp_add_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fp_add_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fp_add_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fp_add.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_trace.h : $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_trace.h.updated

$(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_trace.h.updated : $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_add -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_trace.h.updated

catHLLog_fp_add_BASIC:
	cat $(BDW_WORKLIB)/modules/fp_add/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fp_add_BASIC : hls_fp_add_BASIC 


hls_fp_add_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fp_add_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.v prep_vlog_fp_add_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.fp_add.BASIC $(MAKE) CWBExec=1 hls_fp_add_BASIC
endif

catVLGLog_fp_add_BASIC : catHLLog_fp_add_BASIC
	cat $(BDW_WORKLIB)/modules/fp_add/BASIC/stratus_vlg.log

#
#	view rule
#
view_fp_add_BASIC : hls_fp_add_BASIC
	@bdw_view_verdi -project project.tcl -modules fp_add -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.o : $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_add_cosim.h $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fp_add`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_add/BASIC -I./ $(CCFLAGS_fp_add_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_add BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.o  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add.o :  fp_add.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_cosim.h $(BDW_WORKLIB)/wrappers/fp_add_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_add/BASIC -I./ $(CCFLAGS_fp_add_BASIC) -o $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add.o  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp
    

$(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_hoist.o :  fp_add.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_add_cosim.h $(BDW_WORKLIB)/wrappers/fp_add_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_add/BASIC -I./ $(CCFLAGS_fp_add_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_add BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_hoist.o  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add.d :  fp_add.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fp_add_BASIC)  fp_add.cpp \
	| sed 's|fp_add\.o[ :]*|$(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.cpp $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add.o $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fp_add/BASIC"
##############################################################

fp_add_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/fp_add/BASIC
fp_add_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fp_add_BASIC
fp_add_BASIC_LIBNAME = fp_add_BASIC
fp_add_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/fp_add/BASIC
fp_add_BASIC_C_PARTS_A = $(fp_add_BASIC_WORKLIB)/objs/libfp_add_BASIC.a

prep_c_fp_add_BASIC : $(fp_add_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_add_BASIC_WORKLIB) prep_c

prep_vlog_fp_add_BASIC : $(fp_add_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_add_BASIC_WORKLIB) prep_vlog

prep_fp_add_BASIC : $(fp_add_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_add_BASIC_WORKLIB) prep

$(fp_add_BASIC_WORKLIB)/Makefile : $(fp_add_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fp_add_BASIC_WORKLIB) ]; then mkdir -p $(fp_add_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fp_add_BASIC_SRCDIR) -o $(fp_add_BASIC_WORKLIB)/Makefile -module fp_add -cynthconfig BASIC  

$(fp_add_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fp_add_BASIC_WORKLIB) ]; then mkdir -p $(fp_add_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fp_add_BASIC_WORKLIB)/fp_add_BASIC.d :
	@if [ ! -d $(fp_add_BASIC_WORKLIB) ]; then mkdir -p $(fp_add_BASIC_WORKLIB); fi
	@touch $(fp_add_BASIC_WORKLIB)/fp_add_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_fp_add_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fp_add_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_add_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fp_add_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fp_add_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fp_add_DPA = 
CCFLAGS_fp_add_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fp_add/DPA/c_parts -DDPA=1 -DBDW_RTL_fp_add_DPA=1  $(LIB_INCLUDES_fp_add_DPA)
CCFLAGS_fp_add_DPA += ${BDW_CCFLAGS_TAIL}

hls_fp_add_DPA : hlsc_fp_add_DPA

cynth_fp_add_DPA : hlsc_fp_add_DPA 

elab_fp_add_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fp_add/DPA/stratus_hls.bdr

optim_fp_add_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fp_add/DPA/stratus_hls.bdr

sched_fp_add_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fp_add/DPA/stratus_hls.bdr

hlsc_fp_add_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fp_add BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.fp_add.DPA $(MAKE) $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fp_add BDW_HLS_CONFIG=DPA
endif

clean_cynth_fp_add_DPA: clean_hls_fp_add_DPA

clean_fp_add_DPA: clean_hls_fp_add_DPA

clean_hls_fp_add_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/fp_add/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_add.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_add.DPA.s

kill_hls_fp_add_DPA:
	@bdw_kill -job hls.fp_add.DPA
	@bdw_kill -job hls.fp_add.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fp_add_DPA :
	bdw_htmlgen -project project.tcl -module fp_add -cynthconfig DPA



$(BDW_WORKLIB)/modules/fp_add/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.cpp

$(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.cpp $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.v $(BDW_WORKLIB)/modules/fp_add/DPA/stratus_hls.bdr :  fp_add.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fp_add/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/fp_add/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.fp_add.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fp_add_DPA) \
		-d $(BDW_WORKLIB)/modules/fp_add/DPA -o fp_add_rtl.cpp \
		--hls_module=fp_add --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fp_add_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fp_add_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fp_add_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fp_add.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_trace.h : $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_trace.h.updated

$(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_trace.h.updated : $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_add -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_trace.h.updated

catHLLog_fp_add_DPA:
	cat $(BDW_WORKLIB)/modules/fp_add/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fp_add_DPA : hls_fp_add_DPA 


hls_fp_add_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fp_add_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.v prep_vlog_fp_add_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.fp_add.DPA $(MAKE) CWBExec=1 hls_fp_add_DPA
endif

catVLGLog_fp_add_DPA : catHLLog_fp_add_DPA
	cat $(BDW_WORKLIB)/modules/fp_add/DPA/stratus_vlg.log

#
#	view rule
#
view_fp_add_DPA : hls_fp_add_DPA
	@bdw_view_verdi -project project.tcl -modules fp_add -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.o : $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_add_cosim.h $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fp_add`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_add/DPA -I./ $(CCFLAGS_fp_add_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_add DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.o  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fp_add/DPA/fp_add.o :  fp_add.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_cosim.h $(BDW_WORKLIB)/wrappers/fp_add_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_add/DPA -I./ $(CCFLAGS_fp_add_DPA) -o $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add.o  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp
    

$(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_hoist.o :  fp_add.cpp $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_add_cosim.h $(BDW_WORKLIB)/wrappers/fp_add_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_add/DPA -I./ $(CCFLAGS_fp_add_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_add DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_hoist.o  $(BDW_WORKLIB)/wrappers/fp_add_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fp_add/DPA/fp_add.d :  fp_add.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fp_add_DPA)  fp_add.cpp \
	| sed 's|fp_add\.o[ :]*|$(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.cpp $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add.o $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fp_add/DPA"
##############################################################

fp_add_DPA_SRCDIR = $(BDW_WORKLIB)/modules/fp_add/DPA
fp_add_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fp_add_DPA
fp_add_DPA_LIBNAME = fp_add_DPA
fp_add_DPA_WORKLIB = $(BDW_WORKLIB)/modules/fp_add/DPA
fp_add_DPA_C_PARTS_A = $(fp_add_DPA_WORKLIB)/objs/libfp_add_DPA.a

prep_c_fp_add_DPA : $(fp_add_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_add_DPA_WORKLIB) prep_c

prep_vlog_fp_add_DPA : $(fp_add_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_add_DPA_WORKLIB) prep_vlog

prep_fp_add_DPA : $(fp_add_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_add_DPA_WORKLIB) prep

$(fp_add_DPA_WORKLIB)/Makefile : $(fp_add_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fp_add_DPA_WORKLIB) ]; then mkdir -p $(fp_add_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fp_add_DPA_SRCDIR) -o $(fp_add_DPA_WORKLIB)/Makefile -module fp_add -cynthconfig DPA  

$(fp_add_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fp_add_DPA_WORKLIB) ]; then mkdir -p $(fp_add_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fp_add_DPA_WORKLIB)/fp_add_DPA.d :
	@if [ ! -d $(fp_add_DPA_WORKLIB) ]; then mkdir -p $(fp_add_DPA_WORKLIB); fi
	@touch $(fp_add_DPA_WORKLIB)/fp_add_DPA.d



##############################################################
## HLS Module "bn_float32"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/bn_float32.d :  bn_float32.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  bn_float32.cpp \
	| sed 's|bn_float32\.o[ :]*|$(BDW_OBJDIR)/bn_float32.o $(BDW_OBJDIR)/bn_float32.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/bn_float32_trace.h : $(BDW_WORKLIB)/wrappers/bn_float32_trace.h.updated

$(BDW_WORKLIB)/wrappers/bn_float32_trace.h.updated :  bn_float32.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module bn_float32 -vcd 
	@touch $(BDW_WORKLIB)/wrappers/bn_float32_trace.h.updated



$(BDW_WORKLIB)/objs/bn_float32.o:  bn_float32.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.h $(BDW_WORKLIB)/wrappers/bn_float32_cosim.h $(BDW_WORKLIB)/wrappers/bn_float32_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/bn_float32.o  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp

.INTERMEDIATE : bn_float32_wrap.h

bn_float32_wrap.h : $(BDW_WORKLIB)/wrappers/bn_float32_wrap.h

$(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.h $(BDW_WORKLIB)/wrappers/bn_float32_cosim.h $(BDW_WORKLIB)/wrappers/bn_float32_cosim.v   : $(BDW_WRAPDIR)/bn_float32.updated

$(BDW_WRAPDIR)/bn_float32.updated :  bn_float32.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module bn_float32 "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/bn_float32.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module bn_float32 -vcd 
	@touch $(BDW_WORKLIB)/wrappers/bn_float32_trace.h.updated
$(BDW_WORKLIB)/wrappers/bn_float32_wrap.d :  bn_float32.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   bn_float32.cpp \
		| sed 's|bn_float32\.o[ :]*|$(BDW_WRAPDIR)/bn_float32.updated $(BDW_WORKLIB)/wrappers/bn_float32_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/bn_float32_wrap.d 




##############################################################
## HLS Module "bn_float32" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_bn_float32_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_bn_float32_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_bn_float32_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_bn_float32_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_bn_float32_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_bn_float32_BASIC = 
CCFLAGS_bn_float32_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/bn_float32/BASIC/c_parts -DBASIC=1 -DBDW_RTL_bn_float32_BASIC=1  $(LIB_INCLUDES_bn_float32_BASIC)
CCFLAGS_bn_float32_BASIC += ${BDW_CCFLAGS_TAIL}

hls_bn_float32_BASIC : hlsc_bn_float32_BASIC

cynth_bn_float32_BASIC : hlsc_bn_float32_BASIC 

elab_bn_float32_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/bn_float32/BASIC/stratus_hls.bdr

optim_bn_float32_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/bn_float32/BASIC/stratus_hls.bdr

sched_bn_float32_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/bn_float32/BASIC/stratus_hls.bdr

hlsc_bn_float32_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=bn_float32 BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.bn_float32.BASIC $(MAKE) $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=bn_float32 BDW_HLS_CONFIG=BASIC
endif

clean_cynth_bn_float32_BASIC: clean_hls_bn_float32_BASIC

clean_bn_float32_BASIC: clean_hls_bn_float32_BASIC

clean_hls_bn_float32_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/bn_float32/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.bn_float32.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.bn_float32.BASIC.s

kill_hls_bn_float32_BASIC:
	@bdw_kill -job hls.bn_float32.BASIC
	@bdw_kill -job hls.bn_float32.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_bn_float32_BASIC :
	bdw_htmlgen -project project.tcl -module bn_float32 -cynthconfig BASIC



$(BDW_WORKLIB)/modules/bn_float32/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.cpp

$(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.cpp $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.v $(BDW_WORKLIB)/modules/bn_float32/BASIC/stratus_hls.bdr :  bn_float32.cpp  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/bn_float32/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/bn_float32/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.bn_float32.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_bn_float32_BASIC) \
		-d $(BDW_WORKLIB)/modules/bn_float32/BASIC -o bn_float32_rtl.cpp \
		--hls_module=bn_float32 --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_bn_float32_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_bn_float32_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_bn_float32_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 bn_float32.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_trace.h : $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_trace.h.updated

$(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_trace.h.updated : $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module bn_float32 -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_trace.h.updated

catHLLog_bn_float32_BASIC:
	cat $(BDW_WORKLIB)/modules/bn_float32/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_bn_float32_BASIC : hls_bn_float32_BASIC 


hls_bn_float32_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_bn_float32_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.v prep_vlog_bn_float32_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.bn_float32.BASIC $(MAKE) CWBExec=1 hls_bn_float32_BASIC
endif

catVLGLog_bn_float32_BASIC : catHLLog_bn_float32_BASIC
	cat $(BDW_WORKLIB)/modules/bn_float32/BASIC/stratus_vlg.log

#
#	view rule
#
view_bn_float32_BASIC : hls_bn_float32_BASIC
	@bdw_view_verdi -project project.tcl -modules bn_float32 -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.o : $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp $(BDW_WORKLIB)/wrappers/bn_float32_cosim.h $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl bn_float32`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bn_float32/BASIC -I./ $(CCFLAGS_bn_float32_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl bn_float32 BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.o  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32.o :  bn_float32.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.h $(BDW_WORKLIB)/wrappers/bn_float32_cosim.h $(BDW_WORKLIB)/wrappers/bn_float32_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bn_float32/BASIC -I./ $(CCFLAGS_bn_float32_BASIC) -o $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32.o  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp
    

$(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_hoist.o :  bn_float32.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp $(BDW_WORKLIB)/wrappers/bn_float32_cosim.h $(BDW_WORKLIB)/wrappers/bn_float32_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bn_float32/BASIC -I./ $(CCFLAGS_bn_float32_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl bn_float32 BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_hoist.o  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32.d :  bn_float32.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_bn_float32_BASIC)  bn_float32.cpp \
	| sed 's|bn_float32\.o[ :]*|$(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.cpp $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32.o $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/bn_float32/BASIC"
##############################################################

bn_float32_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/bn_float32/BASIC
bn_float32_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/bn_float32_BASIC
bn_float32_BASIC_LIBNAME = bn_float32_BASIC
bn_float32_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/bn_float32/BASIC
bn_float32_BASIC_C_PARTS_A = $(bn_float32_BASIC_WORKLIB)/objs/libbn_float32_BASIC.a

prep_c_bn_float32_BASIC : $(bn_float32_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bn_float32_BASIC_WORKLIB) prep_c

prep_vlog_bn_float32_BASIC : $(bn_float32_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bn_float32_BASIC_WORKLIB) prep_vlog

prep_bn_float32_BASIC : $(bn_float32_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bn_float32_BASIC_WORKLIB) prep

$(bn_float32_BASIC_WORKLIB)/Makefile : $(bn_float32_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(bn_float32_BASIC_WORKLIB) ]; then mkdir -p $(bn_float32_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(bn_float32_BASIC_SRCDIR) -o $(bn_float32_BASIC_WORKLIB)/Makefile -module bn_float32 -cynthconfig BASIC  

$(bn_float32_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(bn_float32_BASIC_WORKLIB) ]; then mkdir -p $(bn_float32_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(bn_float32_BASIC_WORKLIB)/bn_float32_BASIC.d :
	@if [ ! -d $(bn_float32_BASIC_WORKLIB) ]; then mkdir -p $(bn_float32_BASIC_WORKLIB); fi
	@touch $(bn_float32_BASIC_WORKLIB)/bn_float32_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_bn_float32_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_bn_float32_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_bn_float32_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_bn_float32_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_bn_float32_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_bn_float32_DPA = 
CCFLAGS_bn_float32_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/bn_float32/DPA/c_parts -DDPA=1 -DBDW_RTL_bn_float32_DPA=1  $(LIB_INCLUDES_bn_float32_DPA)
CCFLAGS_bn_float32_DPA += ${BDW_CCFLAGS_TAIL}

hls_bn_float32_DPA : hlsc_bn_float32_DPA

cynth_bn_float32_DPA : hlsc_bn_float32_DPA 

elab_bn_float32_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/bn_float32/DPA/stratus_hls.bdr

optim_bn_float32_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/bn_float32/DPA/stratus_hls.bdr

sched_bn_float32_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/bn_float32/DPA/stratus_hls.bdr

hlsc_bn_float32_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=bn_float32 BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.bn_float32.DPA $(MAKE) $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=bn_float32 BDW_HLS_CONFIG=DPA
endif

clean_cynth_bn_float32_DPA: clean_hls_bn_float32_DPA

clean_bn_float32_DPA: clean_hls_bn_float32_DPA

clean_hls_bn_float32_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/bn_float32/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.bn_float32.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.bn_float32.DPA.s

kill_hls_bn_float32_DPA:
	@bdw_kill -job hls.bn_float32.DPA
	@bdw_kill -job hls.bn_float32.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_bn_float32_DPA :
	bdw_htmlgen -project project.tcl -module bn_float32 -cynthconfig DPA



$(BDW_WORKLIB)/modules/bn_float32/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.cpp

$(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.cpp $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.v $(BDW_WORKLIB)/modules/bn_float32/DPA/stratus_hls.bdr :  bn_float32.cpp  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/bn_float32/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/bn_float32/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.bn_float32.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_bn_float32_DPA) \
		-d $(BDW_WORKLIB)/modules/bn_float32/DPA -o bn_float32_rtl.cpp \
		--hls_module=bn_float32 --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_bn_float32_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_bn_float32_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_bn_float32_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 bn_float32.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_trace.h : $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_trace.h.updated

$(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_trace.h.updated : $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module bn_float32 -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_trace.h.updated

catHLLog_bn_float32_DPA:
	cat $(BDW_WORKLIB)/modules/bn_float32/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_bn_float32_DPA : hls_bn_float32_DPA 


hls_bn_float32_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_bn_float32_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.v prep_vlog_bn_float32_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.bn_float32.DPA $(MAKE) CWBExec=1 hls_bn_float32_DPA
endif

catVLGLog_bn_float32_DPA : catHLLog_bn_float32_DPA
	cat $(BDW_WORKLIB)/modules/bn_float32/DPA/stratus_vlg.log

#
#	view rule
#
view_bn_float32_DPA : hls_bn_float32_DPA
	@bdw_view_verdi -project project.tcl -modules bn_float32 -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.o : $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp $(BDW_WORKLIB)/wrappers/bn_float32_cosim.h $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl bn_float32`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bn_float32/DPA -I./ $(CCFLAGS_bn_float32_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl bn_float32 DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.o  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32.o :  bn_float32.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.h $(BDW_WORKLIB)/wrappers/bn_float32_cosim.h $(BDW_WORKLIB)/wrappers/bn_float32_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bn_float32/DPA -I./ $(CCFLAGS_bn_float32_DPA) -o $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32.o  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp
    

$(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_hoist.o :  bn_float32.cpp $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp $(BDW_WORKLIB)/wrappers/bn_float32_cosim.h $(BDW_WORKLIB)/wrappers/bn_float32_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bn_float32/DPA -I./ $(CCFLAGS_bn_float32_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl bn_float32 DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_hoist.o  $(BDW_WORKLIB)/wrappers/bn_float32_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32.d :  bn_float32.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_bn_float32_DPA)  bn_float32.cpp \
	| sed 's|bn_float32\.o[ :]*|$(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.cpp $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32.o $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/bn_float32/DPA"
##############################################################

bn_float32_DPA_SRCDIR = $(BDW_WORKLIB)/modules/bn_float32/DPA
bn_float32_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/bn_float32_DPA
bn_float32_DPA_LIBNAME = bn_float32_DPA
bn_float32_DPA_WORKLIB = $(BDW_WORKLIB)/modules/bn_float32/DPA
bn_float32_DPA_C_PARTS_A = $(bn_float32_DPA_WORKLIB)/objs/libbn_float32_DPA.a

prep_c_bn_float32_DPA : $(bn_float32_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bn_float32_DPA_WORKLIB) prep_c

prep_vlog_bn_float32_DPA : $(bn_float32_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bn_float32_DPA_WORKLIB) prep_vlog

prep_bn_float32_DPA : $(bn_float32_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bn_float32_DPA_WORKLIB) prep

$(bn_float32_DPA_WORKLIB)/Makefile : $(bn_float32_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(bn_float32_DPA_WORKLIB) ]; then mkdir -p $(bn_float32_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(bn_float32_DPA_SRCDIR) -o $(bn_float32_DPA_WORKLIB)/Makefile -module bn_float32 -cynthconfig DPA  

$(bn_float32_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(bn_float32_DPA_WORKLIB) ]; then mkdir -p $(bn_float32_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(bn_float32_DPA_WORKLIB)/bn_float32_DPA.d :
	@if [ ! -d $(bn_float32_DPA_WORKLIB) ]; then mkdir -p $(bn_float32_DPA_WORKLIB); fi
	@touch $(bn_float32_DPA_WORKLIB)/bn_float32_DPA.d



##############################################################
## HLS Module "fp_cmp"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/fp_cmp.d :  fp_cmp.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  fp_cmp.cpp \
	| sed 's|fp_cmp\.o[ :]*|$(BDW_OBJDIR)/fp_cmp.o $(BDW_OBJDIR)/fp_cmp.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/fp_cmp_trace.h : $(BDW_WORKLIB)/wrappers/fp_cmp_trace.h.updated

$(BDW_WORKLIB)/wrappers/fp_cmp_trace.h.updated :  fp_cmp.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_cmp -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fp_cmp_trace.h.updated



$(BDW_WORKLIB)/objs/fp_cmp.o:  fp_cmp.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.h $(BDW_WORKLIB)/wrappers/fp_cmp_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/fp_cmp.o  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp

.INTERMEDIATE : fp_cmp_wrap.h

fp_cmp_wrap.h : $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h

$(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.h $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.v   : $(BDW_WRAPDIR)/fp_cmp.updated

$(BDW_WRAPDIR)/fp_cmp.updated :  fp_cmp.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module fp_cmp "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/fp_cmp.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_cmp -vcd 
	@touch $(BDW_WORKLIB)/wrappers/fp_cmp_trace.h.updated
$(BDW_WORKLIB)/wrappers/fp_cmp_wrap.d :  fp_cmp.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   fp_cmp.cpp \
		| sed 's|fp_cmp\.o[ :]*|$(BDW_WRAPDIR)/fp_cmp.updated $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.d 




##############################################################
## HLS Module "fp_cmp" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_fp_cmp_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fp_cmp_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_cmp_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fp_cmp_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fp_cmp_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fp_cmp_BASIC = 
CCFLAGS_fp_cmp_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fp_cmp/BASIC/c_parts -DBASIC=1 -DBDW_RTL_fp_cmp_BASIC=1  $(LIB_INCLUDES_fp_cmp_BASIC)
CCFLAGS_fp_cmp_BASIC += ${BDW_CCFLAGS_TAIL}

hls_fp_cmp_BASIC : hlsc_fp_cmp_BASIC

cynth_fp_cmp_BASIC : hlsc_fp_cmp_BASIC 

elab_fp_cmp_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/BASIC/stratus_hls.bdr

optim_fp_cmp_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/BASIC/stratus_hls.bdr

sched_fp_cmp_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/BASIC/stratus_hls.bdr

hlsc_fp_cmp_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fp_cmp BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.fp_cmp.BASIC $(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=fp_cmp BDW_HLS_CONFIG=BASIC
endif

clean_cynth_fp_cmp_BASIC: clean_hls_fp_cmp_BASIC

clean_fp_cmp_BASIC: clean_hls_fp_cmp_BASIC

clean_hls_fp_cmp_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/fp_cmp/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_cmp.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_cmp.BASIC.s

kill_hls_fp_cmp_BASIC:
	@bdw_kill -job hls.fp_cmp.BASIC
	@bdw_kill -job hls.fp_cmp.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fp_cmp_BASIC :
	bdw_htmlgen -project project.tcl -module fp_cmp -cynthconfig BASIC



$(BDW_WORKLIB)/modules/fp_cmp/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.cpp

$(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.cpp $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.v $(BDW_WORKLIB)/modules/fp_cmp/BASIC/stratus_hls.bdr :  fp_cmp.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fp_cmp/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/fp_cmp/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.fp_cmp.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fp_cmp_BASIC) \
		-d $(BDW_WORKLIB)/modules/fp_cmp/BASIC -o fp_cmp_rtl.cpp \
		--hls_module=fp_cmp --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fp_cmp_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fp_cmp_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fp_cmp_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fp_cmp.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_trace.h : $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_trace.h.updated

$(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_trace.h.updated : $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_cmp -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_trace.h.updated

catHLLog_fp_cmp_BASIC:
	cat $(BDW_WORKLIB)/modules/fp_cmp/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fp_cmp_BASIC : hls_fp_cmp_BASIC 


hls_fp_cmp_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fp_cmp_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.v prep_vlog_fp_cmp_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.fp_cmp.BASIC $(MAKE) CWBExec=1 hls_fp_cmp_BASIC
endif

catVLGLog_fp_cmp_BASIC : catHLLog_fp_cmp_BASIC
	cat $(BDW_WORKLIB)/modules/fp_cmp/BASIC/stratus_vlg.log

#
#	view rule
#
view_fp_cmp_BASIC : hls_fp_cmp_BASIC
	@bdw_view_verdi -project project.tcl -modules fp_cmp -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.o : $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.h $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fp_cmp`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_cmp/BASIC -I./ $(CCFLAGS_fp_cmp_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_cmp BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.o  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp.o :  fp_cmp.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.h $(BDW_WORKLIB)/wrappers/fp_cmp_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_cmp/BASIC -I./ $(CCFLAGS_fp_cmp_BASIC) -o $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp.o  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp
    

$(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_hoist.o :  fp_cmp.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.h $(BDW_WORKLIB)/wrappers/fp_cmp_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_cmp/BASIC -I./ $(CCFLAGS_fp_cmp_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_cmp BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_hoist.o  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp.d :  fp_cmp.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fp_cmp_BASIC)  fp_cmp.cpp \
	| sed 's|fp_cmp\.o[ :]*|$(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.cpp $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp.o $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fp_cmp/BASIC"
##############################################################

fp_cmp_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/fp_cmp/BASIC
fp_cmp_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fp_cmp_BASIC
fp_cmp_BASIC_LIBNAME = fp_cmp_BASIC
fp_cmp_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/fp_cmp/BASIC
fp_cmp_BASIC_C_PARTS_A = $(fp_cmp_BASIC_WORKLIB)/objs/libfp_cmp_BASIC.a

prep_c_fp_cmp_BASIC : $(fp_cmp_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_cmp_BASIC_WORKLIB) prep_c

prep_vlog_fp_cmp_BASIC : $(fp_cmp_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_cmp_BASIC_WORKLIB) prep_vlog

prep_fp_cmp_BASIC : $(fp_cmp_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_cmp_BASIC_WORKLIB) prep

$(fp_cmp_BASIC_WORKLIB)/Makefile : $(fp_cmp_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fp_cmp_BASIC_WORKLIB) ]; then mkdir -p $(fp_cmp_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fp_cmp_BASIC_SRCDIR) -o $(fp_cmp_BASIC_WORKLIB)/Makefile -module fp_cmp -cynthconfig BASIC  

$(fp_cmp_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fp_cmp_BASIC_WORKLIB) ]; then mkdir -p $(fp_cmp_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fp_cmp_BASIC_WORKLIB)/fp_cmp_BASIC.d :
	@if [ ! -d $(fp_cmp_BASIC_WORKLIB) ]; then mkdir -p $(fp_cmp_BASIC_WORKLIB); fi
	@touch $(fp_cmp_BASIC_WORKLIB)/fp_cmp_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_fp_cmp_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_fp_cmp_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_fp_cmp_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_fp_cmp_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_fp_cmp_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_fp_cmp_DPA = 
CCFLAGS_fp_cmp_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/fp_cmp/DPA/c_parts -DDPA=1 -DBDW_RTL_fp_cmp_DPA=1  $(LIB_INCLUDES_fp_cmp_DPA)
CCFLAGS_fp_cmp_DPA += ${BDW_CCFLAGS_TAIL}

hls_fp_cmp_DPA : hlsc_fp_cmp_DPA

cynth_fp_cmp_DPA : hlsc_fp_cmp_DPA 

elab_fp_cmp_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/DPA/stratus_hls.bdr

optim_fp_cmp_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/DPA/stratus_hls.bdr

sched_fp_cmp_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/DPA/stratus_hls.bdr

hlsc_fp_cmp_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fp_cmp BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.fp_cmp.DPA $(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=fp_cmp BDW_HLS_CONFIG=DPA
endif

clean_cynth_fp_cmp_DPA: clean_hls_fp_cmp_DPA

clean_fp_cmp_DPA: clean_hls_fp_cmp_DPA

clean_hls_fp_cmp_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/fp_cmp/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_cmp.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.fp_cmp.DPA.s

kill_hls_fp_cmp_DPA:
	@bdw_kill -job hls.fp_cmp.DPA
	@bdw_kill -job hls.fp_cmp.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_fp_cmp_DPA :
	bdw_htmlgen -project project.tcl -module fp_cmp -cynthconfig DPA



$(BDW_WORKLIB)/modules/fp_cmp/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.cpp

$(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.cpp $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.v $(BDW_WORKLIB)/modules/fp_cmp/DPA/stratus_hls.bdr :  fp_cmp.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/fp_cmp/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/fp_cmp/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.fp_cmp.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_fp_cmp_DPA) \
		-d $(BDW_WORKLIB)/modules/fp_cmp/DPA -o fp_cmp_rtl.cpp \
		--hls_module=fp_cmp --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_fp_cmp_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_fp_cmp_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_fp_cmp_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 fp_cmp.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_trace.h : $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_trace.h.updated

$(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_trace.h.updated : $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module fp_cmp -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_trace.h.updated

catHLLog_fp_cmp_DPA:
	cat $(BDW_WORKLIB)/modules/fp_cmp/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_fp_cmp_DPA : hls_fp_cmp_DPA 


hls_fp_cmp_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_fp_cmp_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.v prep_vlog_fp_cmp_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.fp_cmp.DPA $(MAKE) CWBExec=1 hls_fp_cmp_DPA
endif

catVLGLog_fp_cmp_DPA : catHLLog_fp_cmp_DPA
	cat $(BDW_WORKLIB)/modules/fp_cmp/DPA/stratus_vlg.log

#
#	view rule
#
view_fp_cmp_DPA : hls_fp_cmp_DPA
	@bdw_view_verdi -project project.tcl -modules fp_cmp -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.o : $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.h $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl fp_cmp`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_cmp/DPA -I./ $(CCFLAGS_fp_cmp_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_cmp DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.o  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp.o :  fp_cmp.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.h $(BDW_WORKLIB)/wrappers/fp_cmp_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_cmp/DPA -I./ $(CCFLAGS_fp_cmp_DPA) -o $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp.o  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp
    

$(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_hoist.o :  fp_cmp.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp $(BDW_WORKLIB)/wrappers/fp_cmp_cosim.h $(BDW_WORKLIB)/wrappers/fp_cmp_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/fp_cmp/DPA -I./ $(CCFLAGS_fp_cmp_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl fp_cmp DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_hoist.o  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp.d :  fp_cmp.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_fp_cmp_DPA)  fp_cmp.cpp \
	| sed 's|fp_cmp\.o[ :]*|$(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.cpp $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp.o $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/fp_cmp/DPA"
##############################################################

fp_cmp_DPA_SRCDIR = $(BDW_WORKLIB)/modules/fp_cmp/DPA
fp_cmp_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/fp_cmp_DPA
fp_cmp_DPA_LIBNAME = fp_cmp_DPA
fp_cmp_DPA_WORKLIB = $(BDW_WORKLIB)/modules/fp_cmp/DPA
fp_cmp_DPA_C_PARTS_A = $(fp_cmp_DPA_WORKLIB)/objs/libfp_cmp_DPA.a

prep_c_fp_cmp_DPA : $(fp_cmp_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_cmp_DPA_WORKLIB) prep_c

prep_vlog_fp_cmp_DPA : $(fp_cmp_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_cmp_DPA_WORKLIB) prep_vlog

prep_fp_cmp_DPA : $(fp_cmp_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(fp_cmp_DPA_WORKLIB) prep

$(fp_cmp_DPA_WORKLIB)/Makefile : $(fp_cmp_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(fp_cmp_DPA_WORKLIB) ]; then mkdir -p $(fp_cmp_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(fp_cmp_DPA_SRCDIR) -o $(fp_cmp_DPA_WORKLIB)/Makefile -module fp_cmp -cynthconfig DPA  

$(fp_cmp_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(fp_cmp_DPA_WORKLIB) ]; then mkdir -p $(fp_cmp_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(fp_cmp_DPA_WORKLIB)/fp_cmp_DPA.d :
	@if [ ! -d $(fp_cmp_DPA_WORKLIB) ]; then mkdir -p $(fp_cmp_DPA_WORKLIB); fi
	@touch $(fp_cmp_DPA_WORKLIB)/fp_cmp_DPA.d



##############################################################
## HLS Module "relu_offset_float"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/relu_offset_float.d :  relu_offset_float.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  relu_offset_float.cpp \
	| sed 's|relu_offset_float\.o[ :]*|$(BDW_OBJDIR)/relu_offset_float.o $(BDW_OBJDIR)/relu_offset_float.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h : $(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h.updated

$(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h.updated :  relu_offset_float.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module relu_offset_float -vcd 
	@touch $(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h.updated



$(BDW_WORKLIB)/objs/relu_offset_float.o:  relu_offset_float.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.h $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.h $(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/relu_offset_float.o  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp

.INTERMEDIATE : relu_offset_float_wrap.h

relu_offset_float_wrap.h : $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.h

$(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.h $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.h $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.v   : $(BDW_WRAPDIR)/relu_offset_float.updated

$(BDW_WRAPDIR)/relu_offset_float.updated :  relu_offset_float.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module relu_offset_float "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/relu_offset_float.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module relu_offset_float -vcd 
	@touch $(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h.updated
$(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.d :  relu_offset_float.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   relu_offset_float.cpp \
		| sed 's|relu_offset_float\.o[ :]*|$(BDW_WRAPDIR)/relu_offset_float.updated $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.d 




##############################################################
## HLS Module "relu_offset_float" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_relu_offset_float_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_relu_offset_float_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_relu_offset_float_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_relu_offset_float_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_relu_offset_float_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_relu_offset_float_BASIC = 
CCFLAGS_relu_offset_float_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/c_parts -DBASIC=1 -DBDW_RTL_relu_offset_float_BASIC=1  $(LIB_INCLUDES_relu_offset_float_BASIC)
CCFLAGS_relu_offset_float_BASIC += ${BDW_CCFLAGS_TAIL}

hls_relu_offset_float_BASIC : hlsc_relu_offset_float_BASIC

cynth_relu_offset_float_BASIC : hlsc_relu_offset_float_BASIC 

elab_relu_offset_float_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/stratus_hls.bdr

optim_relu_offset_float_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/stratus_hls.bdr

sched_relu_offset_float_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/stratus_hls.bdr

hlsc_relu_offset_float_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=relu_offset_float BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.relu_offset_float.BASIC $(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=relu_offset_float BDW_HLS_CONFIG=BASIC
endif

clean_cynth_relu_offset_float_BASIC: clean_hls_relu_offset_float_BASIC

clean_relu_offset_float_BASIC: clean_hls_relu_offset_float_BASIC

clean_hls_relu_offset_float_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/relu_offset_float/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.relu_offset_float.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.relu_offset_float.BASIC.s

kill_hls_relu_offset_float_BASIC:
	@bdw_kill -job hls.relu_offset_float.BASIC
	@bdw_kill -job hls.relu_offset_float.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_relu_offset_float_BASIC :
	bdw_htmlgen -project project.tcl -module relu_offset_float -cynthconfig BASIC



$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.cpp

$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.cpp $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.v $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/stratus_hls.bdr :  relu_offset_float.cpp  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/relu_offset_float/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/relu_offset_float/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.relu_offset_float.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_relu_offset_float_BASIC) \
		-d $(BDW_WORKLIB)/modules/relu_offset_float/BASIC -o relu_offset_float_rtl.cpp \
		--hls_module=relu_offset_float --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_relu_offset_float_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_relu_offset_float_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_relu_offset_float_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 relu_offset_float.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_trace.h : $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_trace.h.updated

$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_trace.h.updated : $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module relu_offset_float -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_trace.h.updated

catHLLog_relu_offset_float_BASIC:
	cat $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_relu_offset_float_BASIC : hls_relu_offset_float_BASIC 


hls_relu_offset_float_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_relu_offset_float_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.v prep_vlog_relu_offset_float_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.relu_offset_float.BASIC $(MAKE) CWBExec=1 hls_relu_offset_float_BASIC
endif

catVLGLog_relu_offset_float_BASIC : catHLLog_relu_offset_float_BASIC
	cat $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/stratus_vlg.log

#
#	view rule
#
view_relu_offset_float_BASIC : hls_relu_offset_float_BASIC
	@bdw_view_verdi -project project.tcl -modules relu_offset_float -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.o : $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.h $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl relu_offset_float`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/relu_offset_float/BASIC -I./ $(CCFLAGS_relu_offset_float_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl relu_offset_float BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.o  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float.o :  relu_offset_float.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.h $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.h $(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/relu_offset_float/BASIC -I./ $(CCFLAGS_relu_offset_float_BASIC) -o $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float.o  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp
    

$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_hoist.o :  relu_offset_float.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.h $(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/relu_offset_float/BASIC -I./ $(CCFLAGS_relu_offset_float_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl relu_offset_float BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_hoist.o  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float.d :  relu_offset_float.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_relu_offset_float_BASIC)  relu_offset_float.cpp \
	| sed 's|relu_offset_float\.o[ :]*|$(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.cpp $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float.o $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/relu_offset_float/BASIC"
##############################################################

relu_offset_float_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/relu_offset_float/BASIC
relu_offset_float_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/relu_offset_float_BASIC
relu_offset_float_BASIC_LIBNAME = relu_offset_float_BASIC
relu_offset_float_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/relu_offset_float/BASIC
relu_offset_float_BASIC_C_PARTS_A = $(relu_offset_float_BASIC_WORKLIB)/objs/librelu_offset_float_BASIC.a

prep_c_relu_offset_float_BASIC : $(relu_offset_float_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(relu_offset_float_BASIC_WORKLIB) prep_c

prep_vlog_relu_offset_float_BASIC : $(relu_offset_float_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(relu_offset_float_BASIC_WORKLIB) prep_vlog

prep_relu_offset_float_BASIC : $(relu_offset_float_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(relu_offset_float_BASIC_WORKLIB) prep

$(relu_offset_float_BASIC_WORKLIB)/Makefile : $(relu_offset_float_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(relu_offset_float_BASIC_WORKLIB) ]; then mkdir -p $(relu_offset_float_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(relu_offset_float_BASIC_SRCDIR) -o $(relu_offset_float_BASIC_WORKLIB)/Makefile -module relu_offset_float -cynthconfig BASIC  

$(relu_offset_float_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(relu_offset_float_BASIC_WORKLIB) ]; then mkdir -p $(relu_offset_float_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(relu_offset_float_BASIC_WORKLIB)/relu_offset_float_BASIC.d :
	@if [ ! -d $(relu_offset_float_BASIC_WORKLIB) ]; then mkdir -p $(relu_offset_float_BASIC_WORKLIB); fi
	@touch $(relu_offset_float_BASIC_WORKLIB)/relu_offset_float_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_relu_offset_float_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_relu_offset_float_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_relu_offset_float_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_relu_offset_float_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_relu_offset_float_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_relu_offset_float_DPA = 
CCFLAGS_relu_offset_float_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/relu_offset_float/DPA/c_parts -DDPA=1 -DBDW_RTL_relu_offset_float_DPA=1  $(LIB_INCLUDES_relu_offset_float_DPA)
CCFLAGS_relu_offset_float_DPA += ${BDW_CCFLAGS_TAIL}

hls_relu_offset_float_DPA : hlsc_relu_offset_float_DPA

cynth_relu_offset_float_DPA : hlsc_relu_offset_float_DPA 

elab_relu_offset_float_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/DPA/stratus_hls.bdr

optim_relu_offset_float_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/DPA/stratus_hls.bdr

sched_relu_offset_float_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/DPA/stratus_hls.bdr

hlsc_relu_offset_float_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=relu_offset_float BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.relu_offset_float.DPA $(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=relu_offset_float BDW_HLS_CONFIG=DPA
endif

clean_cynth_relu_offset_float_DPA: clean_hls_relu_offset_float_DPA

clean_relu_offset_float_DPA: clean_hls_relu_offset_float_DPA

clean_hls_relu_offset_float_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/relu_offset_float/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.relu_offset_float.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.relu_offset_float.DPA.s

kill_hls_relu_offset_float_DPA:
	@bdw_kill -job hls.relu_offset_float.DPA
	@bdw_kill -job hls.relu_offset_float.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_relu_offset_float_DPA :
	bdw_htmlgen -project project.tcl -module relu_offset_float -cynthconfig DPA



$(BDW_WORKLIB)/modules/relu_offset_float/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.cpp

$(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.cpp $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.v $(BDW_WORKLIB)/modules/relu_offset_float/DPA/stratus_hls.bdr :  relu_offset_float.cpp  $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_WORKLIB)/wrappers/fp_cmp_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/relu_offset_float/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/relu_offset_float/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.relu_offset_float.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_relu_offset_float_DPA) \
		-d $(BDW_WORKLIB)/modules/relu_offset_float/DPA -o relu_offset_float_rtl.cpp \
		--hls_module=relu_offset_float --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_relu_offset_float_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_relu_offset_float_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_relu_offset_float_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 relu_offset_float.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_trace.h : $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_trace.h.updated

$(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_trace.h.updated : $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module relu_offset_float -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_trace.h.updated

catHLLog_relu_offset_float_DPA:
	cat $(BDW_WORKLIB)/modules/relu_offset_float/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_relu_offset_float_DPA : hls_relu_offset_float_DPA 


hls_relu_offset_float_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_relu_offset_float_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.v prep_vlog_relu_offset_float_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.relu_offset_float.DPA $(MAKE) CWBExec=1 hls_relu_offset_float_DPA
endif

catVLGLog_relu_offset_float_DPA : catHLLog_relu_offset_float_DPA
	cat $(BDW_WORKLIB)/modules/relu_offset_float/DPA/stratus_vlg.log

#
#	view rule
#
view_relu_offset_float_DPA : hls_relu_offset_float_DPA
	@bdw_view_verdi -project project.tcl -modules relu_offset_float -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.o : $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.h $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl relu_offset_float`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/relu_offset_float/DPA -I./ $(CCFLAGS_relu_offset_float_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl relu_offset_float DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.o  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float.o :  relu_offset_float.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.h $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.h $(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/relu_offset_float/DPA -I./ $(CCFLAGS_relu_offset_float_DPA) -o $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float.o  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp
    

$(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_hoist.o :  relu_offset_float.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp $(BDW_WORKLIB)/wrappers/relu_offset_float_cosim.h $(BDW_WORKLIB)/wrappers/relu_offset_float_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/relu_offset_float/DPA -I./ $(CCFLAGS_relu_offset_float_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl relu_offset_float DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_hoist.o  $(BDW_WORKLIB)/wrappers/relu_offset_float_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float.d :  relu_offset_float.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_relu_offset_float_DPA)  relu_offset_float.cpp \
	| sed 's|relu_offset_float\.o[ :]*|$(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.cpp $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float.o $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/relu_offset_float/DPA"
##############################################################

relu_offset_float_DPA_SRCDIR = $(BDW_WORKLIB)/modules/relu_offset_float/DPA
relu_offset_float_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/relu_offset_float_DPA
relu_offset_float_DPA_LIBNAME = relu_offset_float_DPA
relu_offset_float_DPA_WORKLIB = $(BDW_WORKLIB)/modules/relu_offset_float/DPA
relu_offset_float_DPA_C_PARTS_A = $(relu_offset_float_DPA_WORKLIB)/objs/librelu_offset_float_DPA.a

prep_c_relu_offset_float_DPA : $(relu_offset_float_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(relu_offset_float_DPA_WORKLIB) prep_c

prep_vlog_relu_offset_float_DPA : $(relu_offset_float_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(relu_offset_float_DPA_WORKLIB) prep_vlog

prep_relu_offset_float_DPA : $(relu_offset_float_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(relu_offset_float_DPA_WORKLIB) prep

$(relu_offset_float_DPA_WORKLIB)/Makefile : $(relu_offset_float_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(relu_offset_float_DPA_WORKLIB) ]; then mkdir -p $(relu_offset_float_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(relu_offset_float_DPA_SRCDIR) -o $(relu_offset_float_DPA_WORKLIB)/Makefile -module relu_offset_float -cynthconfig DPA  

$(relu_offset_float_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(relu_offset_float_DPA_WORKLIB) ]; then mkdir -p $(relu_offset_float_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(relu_offset_float_DPA_WORKLIB)/relu_offset_float_DPA.d :
	@if [ ! -d $(relu_offset_float_DPA_WORKLIB) ]; then mkdir -p $(relu_offset_float_DPA_WORKLIB); fi
	@touch $(relu_offset_float_DPA_WORKLIB)/relu_offset_float_DPA.d



##############################################################
## HLS Module "learn_clip"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/learn_clip.d :  learn_clip.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  learn_clip.cpp \
	| sed 's|learn_clip\.o[ :]*|$(BDW_OBJDIR)/learn_clip.o $(BDW_OBJDIR)/learn_clip.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/learn_clip_trace.h : $(BDW_WORKLIB)/wrappers/learn_clip_trace.h.updated

$(BDW_WORKLIB)/wrappers/learn_clip_trace.h.updated :  learn_clip.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module learn_clip -vcd 
	@touch $(BDW_WORKLIB)/wrappers/learn_clip_trace.h.updated



$(BDW_WORKLIB)/objs/learn_clip.o:  learn_clip.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.h $(BDW_WORKLIB)/wrappers/learn_clip_cosim.h $(BDW_WORKLIB)/wrappers/learn_clip_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/learn_clip.o  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp

.INTERMEDIATE : learn_clip_wrap.h

learn_clip_wrap.h : $(BDW_WORKLIB)/wrappers/learn_clip_wrap.h

$(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.h $(BDW_WORKLIB)/wrappers/learn_clip_cosim.h $(BDW_WORKLIB)/wrappers/learn_clip_cosim.v   : $(BDW_WRAPDIR)/learn_clip.updated

$(BDW_WRAPDIR)/learn_clip.updated :  learn_clip.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module learn_clip "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/learn_clip.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module learn_clip -vcd 
	@touch $(BDW_WORKLIB)/wrappers/learn_clip_trace.h.updated
$(BDW_WORKLIB)/wrappers/learn_clip_wrap.d :  learn_clip.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   learn_clip.cpp \
		| sed 's|learn_clip\.o[ :]*|$(BDW_WRAPDIR)/learn_clip.updated $(BDW_WORKLIB)/wrappers/learn_clip_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/learn_clip_wrap.d 




##############################################################
## HLS Module "learn_clip" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_learn_clip_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_learn_clip_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_learn_clip_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_learn_clip_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_learn_clip_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_learn_clip_BASIC = 
CCFLAGS_learn_clip_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/learn_clip/BASIC/c_parts -DBASIC=1 -DBDW_RTL_learn_clip_BASIC=1  $(LIB_INCLUDES_learn_clip_BASIC)
CCFLAGS_learn_clip_BASIC += ${BDW_CCFLAGS_TAIL}

hls_learn_clip_BASIC : hlsc_learn_clip_BASIC

cynth_learn_clip_BASIC : hlsc_learn_clip_BASIC 

elab_learn_clip_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/learn_clip/BASIC/stratus_hls.bdr

optim_learn_clip_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/learn_clip/BASIC/stratus_hls.bdr

sched_learn_clip_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/learn_clip/BASIC/stratus_hls.bdr

hlsc_learn_clip_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=learn_clip BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.learn_clip.BASIC $(MAKE) $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=learn_clip BDW_HLS_CONFIG=BASIC
endif

clean_cynth_learn_clip_BASIC: clean_hls_learn_clip_BASIC

clean_learn_clip_BASIC: clean_hls_learn_clip_BASIC

clean_hls_learn_clip_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/learn_clip/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.learn_clip.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.learn_clip.BASIC.s

kill_hls_learn_clip_BASIC:
	@bdw_kill -job hls.learn_clip.BASIC
	@bdw_kill -job hls.learn_clip.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_learn_clip_BASIC :
	bdw_htmlgen -project project.tcl -module learn_clip -cynthconfig BASIC



$(BDW_WORKLIB)/modules/learn_clip/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.cpp

$(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.cpp $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.v $(BDW_WORKLIB)/modules/learn_clip/BASIC/stratus_hls.bdr :  learn_clip.cpp  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/learn_clip/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/learn_clip/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.learn_clip.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_learn_clip_BASIC) \
		-d $(BDW_WORKLIB)/modules/learn_clip/BASIC -o learn_clip_rtl.cpp \
		--hls_module=learn_clip --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_learn_clip_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_learn_clip_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_learn_clip_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 learn_clip.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_trace.h : $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_trace.h.updated

$(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_trace.h.updated : $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module learn_clip -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_trace.h.updated

catHLLog_learn_clip_BASIC:
	cat $(BDW_WORKLIB)/modules/learn_clip/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_learn_clip_BASIC : hls_learn_clip_BASIC 


hls_learn_clip_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_learn_clip_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.v prep_vlog_learn_clip_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.learn_clip.BASIC $(MAKE) CWBExec=1 hls_learn_clip_BASIC
endif

catVLGLog_learn_clip_BASIC : catHLLog_learn_clip_BASIC
	cat $(BDW_WORKLIB)/modules/learn_clip/BASIC/stratus_vlg.log

#
#	view rule
#
view_learn_clip_BASIC : hls_learn_clip_BASIC
	@bdw_view_verdi -project project.tcl -modules learn_clip -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.o : $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp $(BDW_WORKLIB)/wrappers/learn_clip_cosim.h $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl learn_clip`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/learn_clip/BASIC -I./ $(CCFLAGS_learn_clip_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl learn_clip BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.o  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip.o :  learn_clip.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.h $(BDW_WORKLIB)/wrappers/learn_clip_cosim.h $(BDW_WORKLIB)/wrappers/learn_clip_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/learn_clip/BASIC -I./ $(CCFLAGS_learn_clip_BASIC) -o $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip.o  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp
    

$(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_hoist.o :  learn_clip.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp $(BDW_WORKLIB)/wrappers/learn_clip_cosim.h $(BDW_WORKLIB)/wrappers/learn_clip_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/learn_clip/BASIC -I./ $(CCFLAGS_learn_clip_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl learn_clip BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_hoist.o  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip.d :  learn_clip.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_learn_clip_BASIC)  learn_clip.cpp \
	| sed 's|learn_clip\.o[ :]*|$(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.cpp $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip.o $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/learn_clip/BASIC"
##############################################################

learn_clip_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/learn_clip/BASIC
learn_clip_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/learn_clip_BASIC
learn_clip_BASIC_LIBNAME = learn_clip_BASIC
learn_clip_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/learn_clip/BASIC
learn_clip_BASIC_C_PARTS_A = $(learn_clip_BASIC_WORKLIB)/objs/liblearn_clip_BASIC.a

prep_c_learn_clip_BASIC : $(learn_clip_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(learn_clip_BASIC_WORKLIB) prep_c

prep_vlog_learn_clip_BASIC : $(learn_clip_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(learn_clip_BASIC_WORKLIB) prep_vlog

prep_learn_clip_BASIC : $(learn_clip_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(learn_clip_BASIC_WORKLIB) prep

$(learn_clip_BASIC_WORKLIB)/Makefile : $(learn_clip_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(learn_clip_BASIC_WORKLIB) ]; then mkdir -p $(learn_clip_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(learn_clip_BASIC_SRCDIR) -o $(learn_clip_BASIC_WORKLIB)/Makefile -module learn_clip -cynthconfig BASIC  

$(learn_clip_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(learn_clip_BASIC_WORKLIB) ]; then mkdir -p $(learn_clip_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(learn_clip_BASIC_WORKLIB)/learn_clip_BASIC.d :
	@if [ ! -d $(learn_clip_BASIC_WORKLIB) ]; then mkdir -p $(learn_clip_BASIC_WORKLIB); fi
	@touch $(learn_clip_BASIC_WORKLIB)/learn_clip_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_learn_clip_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_learn_clip_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_learn_clip_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_learn_clip_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_learn_clip_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_learn_clip_DPA = 
CCFLAGS_learn_clip_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/learn_clip/DPA/c_parts -DDPA=1 -DBDW_RTL_learn_clip_DPA=1  $(LIB_INCLUDES_learn_clip_DPA)
CCFLAGS_learn_clip_DPA += ${BDW_CCFLAGS_TAIL}

hls_learn_clip_DPA : hlsc_learn_clip_DPA

cynth_learn_clip_DPA : hlsc_learn_clip_DPA 

elab_learn_clip_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/learn_clip/DPA/stratus_hls.bdr

optim_learn_clip_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/learn_clip/DPA/stratus_hls.bdr

sched_learn_clip_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/learn_clip/DPA/stratus_hls.bdr

hlsc_learn_clip_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=learn_clip BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.learn_clip.DPA $(MAKE) $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=learn_clip BDW_HLS_CONFIG=DPA
endif

clean_cynth_learn_clip_DPA: clean_hls_learn_clip_DPA

clean_learn_clip_DPA: clean_hls_learn_clip_DPA

clean_hls_learn_clip_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/learn_clip/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.learn_clip.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.learn_clip.DPA.s

kill_hls_learn_clip_DPA:
	@bdw_kill -job hls.learn_clip.DPA
	@bdw_kill -job hls.learn_clip.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_learn_clip_DPA :
	bdw_htmlgen -project project.tcl -module learn_clip -cynthconfig DPA



$(BDW_WORKLIB)/modules/learn_clip/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.cpp

$(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.cpp $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.v $(BDW_WORKLIB)/modules/learn_clip/DPA/stratus_hls.bdr :  learn_clip.cpp  $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_mul_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_WORKLIB)/wrappers/fp_add_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/learn_clip/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/learn_clip/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.learn_clip.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_learn_clip_DPA) \
		-d $(BDW_WORKLIB)/modules/learn_clip/DPA -o learn_clip_rtl.cpp \
		--hls_module=learn_clip --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_learn_clip_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_learn_clip_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_learn_clip_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 learn_clip.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_trace.h : $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_trace.h.updated

$(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_trace.h.updated : $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module learn_clip -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_trace.h.updated

catHLLog_learn_clip_DPA:
	cat $(BDW_WORKLIB)/modules/learn_clip/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_learn_clip_DPA : hls_learn_clip_DPA 


hls_learn_clip_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_learn_clip_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.v prep_vlog_learn_clip_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.learn_clip.DPA $(MAKE) CWBExec=1 hls_learn_clip_DPA
endif

catVLGLog_learn_clip_DPA : catHLLog_learn_clip_DPA
	cat $(BDW_WORKLIB)/modules/learn_clip/DPA/stratus_vlg.log

#
#	view rule
#
view_learn_clip_DPA : hls_learn_clip_DPA
	@bdw_view_verdi -project project.tcl -modules learn_clip -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.o : $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp $(BDW_WORKLIB)/wrappers/learn_clip_cosim.h $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl learn_clip`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/learn_clip/DPA -I./ $(CCFLAGS_learn_clip_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl learn_clip DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.o  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip.o :  learn_clip.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.h $(BDW_WORKLIB)/wrappers/learn_clip_cosim.h $(BDW_WORKLIB)/wrappers/learn_clip_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/learn_clip/DPA -I./ $(CCFLAGS_learn_clip_DPA) -o $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip.o  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp
    

$(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_hoist.o :  learn_clip.cpp $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp $(BDW_WORKLIB)/wrappers/learn_clip_cosim.h $(BDW_WORKLIB)/wrappers/learn_clip_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/learn_clip/DPA -I./ $(CCFLAGS_learn_clip_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl learn_clip DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_hoist.o  $(BDW_WORKLIB)/wrappers/learn_clip_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip.d :  learn_clip.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_learn_clip_DPA)  learn_clip.cpp \
	| sed 's|learn_clip\.o[ :]*|$(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.cpp $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip.o $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/learn_clip/DPA"
##############################################################

learn_clip_DPA_SRCDIR = $(BDW_WORKLIB)/modules/learn_clip/DPA
learn_clip_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/learn_clip_DPA
learn_clip_DPA_LIBNAME = learn_clip_DPA
learn_clip_DPA_WORKLIB = $(BDW_WORKLIB)/modules/learn_clip/DPA
learn_clip_DPA_C_PARTS_A = $(learn_clip_DPA_WORKLIB)/objs/liblearn_clip_DPA.a

prep_c_learn_clip_DPA : $(learn_clip_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(learn_clip_DPA_WORKLIB) prep_c

prep_vlog_learn_clip_DPA : $(learn_clip_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(learn_clip_DPA_WORKLIB) prep_vlog

prep_learn_clip_DPA : $(learn_clip_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(learn_clip_DPA_WORKLIB) prep

$(learn_clip_DPA_WORKLIB)/Makefile : $(learn_clip_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(learn_clip_DPA_WORKLIB) ]; then mkdir -p $(learn_clip_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(learn_clip_DPA_SRCDIR) -o $(learn_clip_DPA_WORKLIB)/Makefile -module learn_clip -cynthconfig DPA  

$(learn_clip_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(learn_clip_DPA_WORKLIB) ]; then mkdir -p $(learn_clip_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(learn_clip_DPA_WORKLIB)/learn_clip_DPA.d :
	@if [ ! -d $(learn_clip_DPA_WORKLIB) ]; then mkdir -p $(learn_clip_DPA_WORKLIB); fi
	@touch $(learn_clip_DPA_WORKLIB)/learn_clip_DPA.d



##############################################################
## HLS Module "float2fix"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/float2fix.d :  float2fix.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  float2fix.cpp \
	| sed 's|float2fix\.o[ :]*|$(BDW_OBJDIR)/float2fix.o $(BDW_OBJDIR)/float2fix.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/float2fix_trace.h : $(BDW_WORKLIB)/wrappers/float2fix_trace.h.updated

$(BDW_WORKLIB)/wrappers/float2fix_trace.h.updated :  float2fix.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module float2fix -vcd 
	@touch $(BDW_WORKLIB)/wrappers/float2fix_trace.h.updated



$(BDW_WORKLIB)/objs/float2fix.o:  float2fix.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_cosim.h $(BDW_WORKLIB)/wrappers/float2fix_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/float2fix.o  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp

.INTERMEDIATE : float2fix_wrap.h

float2fix_wrap.h : $(BDW_WORKLIB)/wrappers/float2fix_wrap.h

$(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_cosim.h $(BDW_WORKLIB)/wrappers/float2fix_cosim.v   : $(BDW_WRAPDIR)/float2fix.updated

$(BDW_WRAPDIR)/float2fix.updated :  float2fix.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module float2fix "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/float2fix.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module float2fix -vcd 
	@touch $(BDW_WORKLIB)/wrappers/float2fix_trace.h.updated
$(BDW_WORKLIB)/wrappers/float2fix_wrap.d :  float2fix.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   float2fix.cpp \
		| sed 's|float2fix\.o[ :]*|$(BDW_WRAPDIR)/float2fix.updated $(BDW_WORKLIB)/wrappers/float2fix_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/float2fix_wrap.d 




##############################################################
## HLS Module "float2fix" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_float2fix_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_float2fix_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_float2fix_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_float2fix_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_float2fix_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_float2fix_BASIC = 
CCFLAGS_float2fix_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/float2fix/BASIC/c_parts -DBASIC=1 -DBDW_RTL_float2fix_BASIC=1  $(LIB_INCLUDES_float2fix_BASIC)
CCFLAGS_float2fix_BASIC += ${BDW_CCFLAGS_TAIL}

hls_float2fix_BASIC : hlsc_float2fix_BASIC

cynth_float2fix_BASIC : hlsc_float2fix_BASIC 

elab_float2fix_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/float2fix/BASIC/stratus_hls.bdr

optim_float2fix_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/float2fix/BASIC/stratus_hls.bdr

sched_float2fix_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/float2fix/BASIC/stratus_hls.bdr

hlsc_float2fix_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=float2fix BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.float2fix.BASIC $(MAKE) $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=float2fix BDW_HLS_CONFIG=BASIC
endif

clean_cynth_float2fix_BASIC: clean_hls_float2fix_BASIC

clean_float2fix_BASIC: clean_hls_float2fix_BASIC

clean_hls_float2fix_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/float2fix/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.float2fix.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.float2fix.BASIC.s

kill_hls_float2fix_BASIC:
	@bdw_kill -job hls.float2fix.BASIC
	@bdw_kill -job hls.float2fix.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_float2fix_BASIC :
	bdw_htmlgen -project project.tcl -module float2fix -cynthconfig BASIC



$(BDW_WORKLIB)/modules/float2fix/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.cpp

$(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.cpp $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.v $(BDW_WORKLIB)/modules/float2fix/BASIC/stratus_hls.bdr :  float2fix.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/float2fix/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/float2fix/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.float2fix.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_float2fix_BASIC) \
		-d $(BDW_WORKLIB)/modules/float2fix/BASIC -o float2fix_rtl.cpp \
		--hls_module=float2fix --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_float2fix_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_float2fix_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_float2fix_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 float2fix.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_trace.h : $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_trace.h.updated

$(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_trace.h.updated : $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module float2fix -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_trace.h.updated

catHLLog_float2fix_BASIC:
	cat $(BDW_WORKLIB)/modules/float2fix/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_float2fix_BASIC : hls_float2fix_BASIC 


hls_float2fix_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_float2fix_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.v prep_vlog_float2fix_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.float2fix.BASIC $(MAKE) CWBExec=1 hls_float2fix_BASIC
endif

catVLGLog_float2fix_BASIC : catHLLog_float2fix_BASIC
	cat $(BDW_WORKLIB)/modules/float2fix/BASIC/stratus_vlg.log

#
#	view rule
#
view_float2fix_BASIC : hls_float2fix_BASIC
	@bdw_view_verdi -project project.tcl -modules float2fix -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.o : $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/float2fix_cosim.h $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl float2fix`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/float2fix/BASIC -I./ $(CCFLAGS_float2fix_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl float2fix BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.o  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix.o :  float2fix.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_cosim.h $(BDW_WORKLIB)/wrappers/float2fix_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/float2fix/BASIC -I./ $(CCFLAGS_float2fix_BASIC) -o $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix.o  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp
    

$(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_hoist.o :  float2fix.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/float2fix_cosim.h $(BDW_WORKLIB)/wrappers/float2fix_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/float2fix/BASIC -I./ $(CCFLAGS_float2fix_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl float2fix BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_hoist.o  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix.d :  float2fix.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_float2fix_BASIC)  float2fix.cpp \
	| sed 's|float2fix\.o[ :]*|$(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.cpp $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix.o $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/float2fix/BASIC"
##############################################################

float2fix_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/float2fix/BASIC
float2fix_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/float2fix_BASIC
float2fix_BASIC_LIBNAME = float2fix_BASIC
float2fix_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/float2fix/BASIC
float2fix_BASIC_C_PARTS_A = $(float2fix_BASIC_WORKLIB)/objs/libfloat2fix_BASIC.a

prep_c_float2fix_BASIC : $(float2fix_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(float2fix_BASIC_WORKLIB) prep_c

prep_vlog_float2fix_BASIC : $(float2fix_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(float2fix_BASIC_WORKLIB) prep_vlog

prep_float2fix_BASIC : $(float2fix_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(float2fix_BASIC_WORKLIB) prep

$(float2fix_BASIC_WORKLIB)/Makefile : $(float2fix_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(float2fix_BASIC_WORKLIB) ]; then mkdir -p $(float2fix_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(float2fix_BASIC_SRCDIR) -o $(float2fix_BASIC_WORKLIB)/Makefile -module float2fix -cynthconfig BASIC  

$(float2fix_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(float2fix_BASIC_WORKLIB) ]; then mkdir -p $(float2fix_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(float2fix_BASIC_WORKLIB)/float2fix_BASIC.d :
	@if [ ! -d $(float2fix_BASIC_WORKLIB) ]; then mkdir -p $(float2fix_BASIC_WORKLIB); fi
	@touch $(float2fix_BASIC_WORKLIB)/float2fix_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_float2fix_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_float2fix_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_float2fix_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_float2fix_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_float2fix_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_float2fix_DPA = 
CCFLAGS_float2fix_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/float2fix/DPA/c_parts -DDPA=1 -DBDW_RTL_float2fix_DPA=1  $(LIB_INCLUDES_float2fix_DPA)
CCFLAGS_float2fix_DPA += ${BDW_CCFLAGS_TAIL}

hls_float2fix_DPA : hlsc_float2fix_DPA

cynth_float2fix_DPA : hlsc_float2fix_DPA 

elab_float2fix_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/float2fix/DPA/stratus_hls.bdr

optim_float2fix_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/float2fix/DPA/stratus_hls.bdr

sched_float2fix_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/float2fix/DPA/stratus_hls.bdr

hlsc_float2fix_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=float2fix BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.float2fix.DPA $(MAKE) $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=float2fix BDW_HLS_CONFIG=DPA
endif

clean_cynth_float2fix_DPA: clean_hls_float2fix_DPA

clean_float2fix_DPA: clean_hls_float2fix_DPA

clean_hls_float2fix_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/float2fix/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.float2fix.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.float2fix.DPA.s

kill_hls_float2fix_DPA:
	@bdw_kill -job hls.float2fix.DPA
	@bdw_kill -job hls.float2fix.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_float2fix_DPA :
	bdw_htmlgen -project project.tcl -module float2fix -cynthconfig DPA



$(BDW_WORKLIB)/modules/float2fix/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.cpp

$(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.cpp $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.v $(BDW_WORKLIB)/modules/float2fix/DPA/stratus_hls.bdr :  float2fix.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/float2fix/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/float2fix/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.float2fix.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_float2fix_DPA) \
		-d $(BDW_WORKLIB)/modules/float2fix/DPA -o float2fix_rtl.cpp \
		--hls_module=float2fix --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_float2fix_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_float2fix_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_float2fix_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 float2fix.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_trace.h : $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_trace.h.updated

$(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_trace.h.updated : $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module float2fix -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_trace.h.updated

catHLLog_float2fix_DPA:
	cat $(BDW_WORKLIB)/modules/float2fix/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_float2fix_DPA : hls_float2fix_DPA 


hls_float2fix_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_float2fix_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.v prep_vlog_float2fix_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.float2fix.DPA $(MAKE) CWBExec=1 hls_float2fix_DPA
endif

catVLGLog_float2fix_DPA : catHLLog_float2fix_DPA
	cat $(BDW_WORKLIB)/modules/float2fix/DPA/stratus_vlg.log

#
#	view rule
#
view_float2fix_DPA : hls_float2fix_DPA
	@bdw_view_verdi -project project.tcl -modules float2fix -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.o : $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/float2fix_cosim.h $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl float2fix`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/float2fix/DPA -I./ $(CCFLAGS_float2fix_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl float2fix DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.o  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/float2fix/DPA/float2fix.o :  float2fix.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_cosim.h $(BDW_WORKLIB)/wrappers/float2fix_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/float2fix/DPA -I./ $(CCFLAGS_float2fix_DPA) -o $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix.o  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp
    

$(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_hoist.o :  float2fix.cpp $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/float2fix_cosim.h $(BDW_WORKLIB)/wrappers/float2fix_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/float2fix/DPA -I./ $(CCFLAGS_float2fix_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl float2fix DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_hoist.o  $(BDW_WORKLIB)/wrappers/float2fix_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/float2fix/DPA/float2fix.d :  float2fix.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_float2fix_DPA)  float2fix.cpp \
	| sed 's|float2fix\.o[ :]*|$(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.cpp $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix.o $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/float2fix/DPA"
##############################################################

float2fix_DPA_SRCDIR = $(BDW_WORKLIB)/modules/float2fix/DPA
float2fix_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/float2fix_DPA
float2fix_DPA_LIBNAME = float2fix_DPA
float2fix_DPA_WORKLIB = $(BDW_WORKLIB)/modules/float2fix/DPA
float2fix_DPA_C_PARTS_A = $(float2fix_DPA_WORKLIB)/objs/libfloat2fix_DPA.a

prep_c_float2fix_DPA : $(float2fix_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(float2fix_DPA_WORKLIB) prep_c

prep_vlog_float2fix_DPA : $(float2fix_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(float2fix_DPA_WORKLIB) prep_vlog

prep_float2fix_DPA : $(float2fix_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(float2fix_DPA_WORKLIB) prep

$(float2fix_DPA_WORKLIB)/Makefile : $(float2fix_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(float2fix_DPA_WORKLIB) ]; then mkdir -p $(float2fix_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(float2fix_DPA_SRCDIR) -o $(float2fix_DPA_WORKLIB)/Makefile -module float2fix -cynthconfig DPA  

$(float2fix_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(float2fix_DPA_WORKLIB) ]; then mkdir -p $(float2fix_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(float2fix_DPA_WORKLIB)/float2fix_DPA.d :
	@if [ ! -d $(float2fix_DPA_WORKLIB) ]; then mkdir -p $(float2fix_DPA_WORKLIB); fi
	@touch $(float2fix_DPA_WORKLIB)/float2fix_DPA.d



##############################################################
## HLS Module "m_float2fix"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/m_float2fix.d :  m_float2fix.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  m_float2fix.cpp \
	| sed 's|m_float2fix\.o[ :]*|$(BDW_OBJDIR)/m_float2fix.o $(BDW_OBJDIR)/m_float2fix.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/m_float2fix_trace.h : $(BDW_WORKLIB)/wrappers/m_float2fix_trace.h.updated

$(BDW_WORKLIB)/wrappers/m_float2fix_trace.h.updated :  m_float2fix.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module m_float2fix -vcd 
	@touch $(BDW_WORKLIB)/wrappers/m_float2fix_trace.h.updated



$(BDW_WORKLIB)/objs/m_float2fix.o:  m_float2fix.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.h $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.h $(BDW_WORKLIB)/wrappers/m_float2fix_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/m_float2fix.o  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp

.INTERMEDIATE : m_float2fix_wrap.h

m_float2fix_wrap.h : $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.h

$(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.h $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.h $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.v   : $(BDW_WRAPDIR)/m_float2fix.updated

$(BDW_WRAPDIR)/m_float2fix.updated :  m_float2fix.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module m_float2fix "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/m_float2fix.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module m_float2fix -vcd 
	@touch $(BDW_WORKLIB)/wrappers/m_float2fix_trace.h.updated
$(BDW_WORKLIB)/wrappers/m_float2fix_wrap.d :  m_float2fix.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   m_float2fix.cpp \
		| sed 's|m_float2fix\.o[ :]*|$(BDW_WRAPDIR)/m_float2fix.updated $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.d 




##############################################################
## HLS Module "m_float2fix" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_m_float2fix_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_m_float2fix_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_m_float2fix_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_m_float2fix_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_m_float2fix_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_m_float2fix_BASIC = 
CCFLAGS_m_float2fix_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/m_float2fix/BASIC/c_parts -DBASIC=1 -DBDW_RTL_m_float2fix_BASIC=1  $(LIB_INCLUDES_m_float2fix_BASIC)
CCFLAGS_m_float2fix_BASIC += ${BDW_CCFLAGS_TAIL}

hls_m_float2fix_BASIC : hlsc_m_float2fix_BASIC

cynth_m_float2fix_BASIC : hlsc_m_float2fix_BASIC 

elab_m_float2fix_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/BASIC/stratus_hls.bdr

optim_m_float2fix_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/BASIC/stratus_hls.bdr

sched_m_float2fix_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/BASIC/stratus_hls.bdr

hlsc_m_float2fix_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=m_float2fix BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.m_float2fix.BASIC $(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=m_float2fix BDW_HLS_CONFIG=BASIC
endif

clean_cynth_m_float2fix_BASIC: clean_hls_m_float2fix_BASIC

clean_m_float2fix_BASIC: clean_hls_m_float2fix_BASIC

clean_hls_m_float2fix_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/m_float2fix/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.m_float2fix.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.m_float2fix.BASIC.s

kill_hls_m_float2fix_BASIC:
	@bdw_kill -job hls.m_float2fix.BASIC
	@bdw_kill -job hls.m_float2fix.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_m_float2fix_BASIC :
	bdw_htmlgen -project project.tcl -module m_float2fix -cynthconfig BASIC



$(BDW_WORKLIB)/modules/m_float2fix/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.cpp

$(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.cpp $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.v $(BDW_WORKLIB)/modules/m_float2fix/BASIC/stratus_hls.bdr :  m_float2fix.cpp  $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/m_float2fix/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/m_float2fix/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.m_float2fix.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_m_float2fix_BASIC) \
		-d $(BDW_WORKLIB)/modules/m_float2fix/BASIC -o m_float2fix_rtl.cpp \
		--hls_module=m_float2fix --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_m_float2fix_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_m_float2fix_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_m_float2fix_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 m_float2fix.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_trace.h : $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_trace.h.updated

$(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_trace.h.updated : $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module m_float2fix -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_trace.h.updated

catHLLog_m_float2fix_BASIC:
	cat $(BDW_WORKLIB)/modules/m_float2fix/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_m_float2fix_BASIC : hls_m_float2fix_BASIC 


hls_m_float2fix_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_m_float2fix_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.v prep_vlog_m_float2fix_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.m_float2fix.BASIC $(MAKE) CWBExec=1 hls_m_float2fix_BASIC
endif

catVLGLog_m_float2fix_BASIC : catHLLog_m_float2fix_BASIC
	cat $(BDW_WORKLIB)/modules/m_float2fix/BASIC/stratus_vlg.log

#
#	view rule
#
view_m_float2fix_BASIC : hls_m_float2fix_BASIC
	@bdw_view_verdi -project project.tcl -modules m_float2fix -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.o : $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.h $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl m_float2fix`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/m_float2fix/BASIC -I./ $(CCFLAGS_m_float2fix_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl m_float2fix BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.o  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix.o :  m_float2fix.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.h $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.h $(BDW_WORKLIB)/wrappers/m_float2fix_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/m_float2fix/BASIC -I./ $(CCFLAGS_m_float2fix_BASIC) -o $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix.o  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp
    

$(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_hoist.o :  m_float2fix.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.h $(BDW_WORKLIB)/wrappers/m_float2fix_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/m_float2fix/BASIC -I./ $(CCFLAGS_m_float2fix_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl m_float2fix BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_hoist.o  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix.d :  m_float2fix.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_m_float2fix_BASIC)  m_float2fix.cpp \
	| sed 's|m_float2fix\.o[ :]*|$(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.cpp $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix.o $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/m_float2fix/BASIC"
##############################################################

m_float2fix_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/m_float2fix/BASIC
m_float2fix_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/m_float2fix_BASIC
m_float2fix_BASIC_LIBNAME = m_float2fix_BASIC
m_float2fix_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/m_float2fix/BASIC
m_float2fix_BASIC_C_PARTS_A = $(m_float2fix_BASIC_WORKLIB)/objs/libm_float2fix_BASIC.a

prep_c_m_float2fix_BASIC : $(m_float2fix_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(m_float2fix_BASIC_WORKLIB) prep_c

prep_vlog_m_float2fix_BASIC : $(m_float2fix_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(m_float2fix_BASIC_WORKLIB) prep_vlog

prep_m_float2fix_BASIC : $(m_float2fix_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(m_float2fix_BASIC_WORKLIB) prep

$(m_float2fix_BASIC_WORKLIB)/Makefile : $(m_float2fix_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(m_float2fix_BASIC_WORKLIB) ]; then mkdir -p $(m_float2fix_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(m_float2fix_BASIC_SRCDIR) -o $(m_float2fix_BASIC_WORKLIB)/Makefile -module m_float2fix -cynthconfig BASIC  

$(m_float2fix_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(m_float2fix_BASIC_WORKLIB) ]; then mkdir -p $(m_float2fix_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(m_float2fix_BASIC_WORKLIB)/m_float2fix_BASIC.d :
	@if [ ! -d $(m_float2fix_BASIC_WORKLIB) ]; then mkdir -p $(m_float2fix_BASIC_WORKLIB); fi
	@touch $(m_float2fix_BASIC_WORKLIB)/m_float2fix_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_m_float2fix_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_m_float2fix_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_m_float2fix_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_m_float2fix_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_m_float2fix_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_m_float2fix_DPA = 
CCFLAGS_m_float2fix_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/m_float2fix/DPA/c_parts -DDPA=1 -DBDW_RTL_m_float2fix_DPA=1  $(LIB_INCLUDES_m_float2fix_DPA)
CCFLAGS_m_float2fix_DPA += ${BDW_CCFLAGS_TAIL}

hls_m_float2fix_DPA : hlsc_m_float2fix_DPA

cynth_m_float2fix_DPA : hlsc_m_float2fix_DPA 

elab_m_float2fix_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/DPA/stratus_hls.bdr

optim_m_float2fix_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/DPA/stratus_hls.bdr

sched_m_float2fix_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/DPA/stratus_hls.bdr

hlsc_m_float2fix_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=m_float2fix BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.m_float2fix.DPA $(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=m_float2fix BDW_HLS_CONFIG=DPA
endif

clean_cynth_m_float2fix_DPA: clean_hls_m_float2fix_DPA

clean_m_float2fix_DPA: clean_hls_m_float2fix_DPA

clean_hls_m_float2fix_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/m_float2fix/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.m_float2fix.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.m_float2fix.DPA.s

kill_hls_m_float2fix_DPA:
	@bdw_kill -job hls.m_float2fix.DPA
	@bdw_kill -job hls.m_float2fix.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_m_float2fix_DPA :
	bdw_htmlgen -project project.tcl -module m_float2fix -cynthconfig DPA



$(BDW_WORKLIB)/modules/m_float2fix/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.cpp

$(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.cpp $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.v $(BDW_WORKLIB)/modules/m_float2fix/DPA/stratus_hls.bdr :  m_float2fix.cpp  $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_WORKLIB)/wrappers/float2fix_wrap.h $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/m_float2fix/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/m_float2fix/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.m_float2fix.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_m_float2fix_DPA) \
		-d $(BDW_WORKLIB)/modules/m_float2fix/DPA -o m_float2fix_rtl.cpp \
		--hls_module=m_float2fix --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_m_float2fix_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_m_float2fix_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_m_float2fix_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 m_float2fix.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_trace.h : $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_trace.h.updated

$(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_trace.h.updated : $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module m_float2fix -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_trace.h.updated

catHLLog_m_float2fix_DPA:
	cat $(BDW_WORKLIB)/modules/m_float2fix/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_m_float2fix_DPA : hls_m_float2fix_DPA 


hls_m_float2fix_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_m_float2fix_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.v prep_vlog_m_float2fix_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.m_float2fix.DPA $(MAKE) CWBExec=1 hls_m_float2fix_DPA
endif

catVLGLog_m_float2fix_DPA : catHLLog_m_float2fix_DPA
	cat $(BDW_WORKLIB)/modules/m_float2fix/DPA/stratus_vlg.log

#
#	view rule
#
view_m_float2fix_DPA : hls_m_float2fix_DPA
	@bdw_view_verdi -project project.tcl -modules m_float2fix -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.o : $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.h $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl m_float2fix`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/m_float2fix/DPA -I./ $(CCFLAGS_m_float2fix_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl m_float2fix DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.o  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix.o :  m_float2fix.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.h $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.h $(BDW_WORKLIB)/wrappers/m_float2fix_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/m_float2fix/DPA -I./ $(CCFLAGS_m_float2fix_DPA) -o $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix.o  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp
    

$(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_hoist.o :  m_float2fix.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp $(BDW_WORKLIB)/wrappers/m_float2fix_cosim.h $(BDW_WORKLIB)/wrappers/m_float2fix_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/m_float2fix/DPA -I./ $(CCFLAGS_m_float2fix_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl m_float2fix DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_hoist.o  $(BDW_WORKLIB)/wrappers/m_float2fix_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix.d :  m_float2fix.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_m_float2fix_DPA)  m_float2fix.cpp \
	| sed 's|m_float2fix\.o[ :]*|$(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.cpp $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix.o $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/m_float2fix/DPA"
##############################################################

m_float2fix_DPA_SRCDIR = $(BDW_WORKLIB)/modules/m_float2fix/DPA
m_float2fix_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/m_float2fix_DPA
m_float2fix_DPA_LIBNAME = m_float2fix_DPA
m_float2fix_DPA_WORKLIB = $(BDW_WORKLIB)/modules/m_float2fix/DPA
m_float2fix_DPA_C_PARTS_A = $(m_float2fix_DPA_WORKLIB)/objs/libm_float2fix_DPA.a

prep_c_m_float2fix_DPA : $(m_float2fix_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(m_float2fix_DPA_WORKLIB) prep_c

prep_vlog_m_float2fix_DPA : $(m_float2fix_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(m_float2fix_DPA_WORKLIB) prep_vlog

prep_m_float2fix_DPA : $(m_float2fix_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(m_float2fix_DPA_WORKLIB) prep

$(m_float2fix_DPA_WORKLIB)/Makefile : $(m_float2fix_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(m_float2fix_DPA_WORKLIB) ]; then mkdir -p $(m_float2fix_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(m_float2fix_DPA_SRCDIR) -o $(m_float2fix_DPA_WORKLIB)/Makefile -module m_float2fix -cynthconfig DPA  

$(m_float2fix_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(m_float2fix_DPA_WORKLIB) ]; then mkdir -p $(m_float2fix_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(m_float2fix_DPA_WORKLIB)/m_float2fix_DPA.d :
	@if [ ! -d $(m_float2fix_DPA_WORKLIB) ]; then mkdir -p $(m_float2fix_DPA_WORKLIB); fi
	@touch $(m_float2fix_DPA_WORKLIB)/m_float2fix_DPA.d



##############################################################
## HLS Module "bias_add"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/bias_add.d :  bias_add.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  bias_add.cpp \
	| sed 's|bias_add\.o[ :]*|$(BDW_OBJDIR)/bias_add.o $(BDW_OBJDIR)/bias_add.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/bias_add_trace.h : $(BDW_WORKLIB)/wrappers/bias_add_trace.h.updated

$(BDW_WORKLIB)/wrappers/bias_add_trace.h.updated :  bias_add.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module bias_add -vcd 
	@touch $(BDW_WORKLIB)/wrappers/bias_add_trace.h.updated



$(BDW_WORKLIB)/objs/bias_add.o:  bias_add.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.h $(BDW_WORKLIB)/wrappers/bias_add_cosim.h $(BDW_WORKLIB)/wrappers/bias_add_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/bias_add.o  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp

.INTERMEDIATE : bias_add_wrap.h

bias_add_wrap.h : $(BDW_WORKLIB)/wrappers/bias_add_wrap.h

$(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.h $(BDW_WORKLIB)/wrappers/bias_add_cosim.h $(BDW_WORKLIB)/wrappers/bias_add_cosim.v   : $(BDW_WRAPDIR)/bias_add.updated

$(BDW_WRAPDIR)/bias_add.updated :  bias_add.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module bias_add "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/bias_add.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module bias_add -vcd 
	@touch $(BDW_WORKLIB)/wrappers/bias_add_trace.h.updated
$(BDW_WORKLIB)/wrappers/bias_add_wrap.d :  bias_add.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   bias_add.cpp \
		| sed 's|bias_add\.o[ :]*|$(BDW_WRAPDIR)/bias_add.updated $(BDW_WORKLIB)/wrappers/bias_add_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/bias_add_wrap.d 




##############################################################
## HLS Module "bias_add" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_bias_add_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_bias_add_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_bias_add_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_bias_add_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_bias_add_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_bias_add_BASIC = 
CCFLAGS_bias_add_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/bias_add/BASIC/c_parts -DBASIC=1 -DBDW_RTL_bias_add_BASIC=1  $(LIB_INCLUDES_bias_add_BASIC)
CCFLAGS_bias_add_BASIC += ${BDW_CCFLAGS_TAIL}

hls_bias_add_BASIC : hlsc_bias_add_BASIC

cynth_bias_add_BASIC : hlsc_bias_add_BASIC 

elab_bias_add_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/bias_add/BASIC/stratus_hls.bdr

optim_bias_add_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/bias_add/BASIC/stratus_hls.bdr

sched_bias_add_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/bias_add/BASIC/stratus_hls.bdr

hlsc_bias_add_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=bias_add BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.bias_add.BASIC $(MAKE) $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=bias_add BDW_HLS_CONFIG=BASIC
endif

clean_cynth_bias_add_BASIC: clean_hls_bias_add_BASIC

clean_bias_add_BASIC: clean_hls_bias_add_BASIC

clean_hls_bias_add_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/bias_add/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.bias_add.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.bias_add.BASIC.s

kill_hls_bias_add_BASIC:
	@bdw_kill -job hls.bias_add.BASIC
	@bdw_kill -job hls.bias_add.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_bias_add_BASIC :
	bdw_htmlgen -project project.tcl -module bias_add -cynthconfig BASIC



$(BDW_WORKLIB)/modules/bias_add/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.cpp

$(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.cpp $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.v $(BDW_WORKLIB)/modules/bias_add/BASIC/stratus_hls.bdr :  bias_add.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/bias_add/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/bias_add/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.bias_add.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_bias_add_BASIC) \
		-d $(BDW_WORKLIB)/modules/bias_add/BASIC -o bias_add_rtl.cpp \
		--hls_module=bias_add --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_bias_add_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_bias_add_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_bias_add_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 bias_add.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_trace.h : $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_trace.h.updated

$(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_trace.h.updated : $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module bias_add -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_trace.h.updated

catHLLog_bias_add_BASIC:
	cat $(BDW_WORKLIB)/modules/bias_add/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_bias_add_BASIC : hls_bias_add_BASIC 


hls_bias_add_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_bias_add_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.v prep_vlog_bias_add_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.bias_add.BASIC $(MAKE) CWBExec=1 hls_bias_add_BASIC
endif

catVLGLog_bias_add_BASIC : catHLLog_bias_add_BASIC
	cat $(BDW_WORKLIB)/modules/bias_add/BASIC/stratus_vlg.log

#
#	view rule
#
view_bias_add_BASIC : hls_bias_add_BASIC
	@bdw_view_verdi -project project.tcl -modules bias_add -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.o : $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp $(BDW_WORKLIB)/wrappers/bias_add_cosim.h $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl bias_add`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bias_add/BASIC -I./ $(CCFLAGS_bias_add_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl bias_add BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.o  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add.o :  bias_add.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.h $(BDW_WORKLIB)/wrappers/bias_add_cosim.h $(BDW_WORKLIB)/wrappers/bias_add_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bias_add/BASIC -I./ $(CCFLAGS_bias_add_BASIC) -o $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add.o  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp
    

$(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_hoist.o :  bias_add.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp $(BDW_WORKLIB)/wrappers/bias_add_cosim.h $(BDW_WORKLIB)/wrappers/bias_add_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bias_add/BASIC -I./ $(CCFLAGS_bias_add_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl bias_add BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_hoist.o  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add.d :  bias_add.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_bias_add_BASIC)  bias_add.cpp \
	| sed 's|bias_add\.o[ :]*|$(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.cpp $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add.o $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/bias_add/BASIC"
##############################################################

bias_add_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/bias_add/BASIC
bias_add_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/bias_add_BASIC
bias_add_BASIC_LIBNAME = bias_add_BASIC
bias_add_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/bias_add/BASIC
bias_add_BASIC_C_PARTS_A = $(bias_add_BASIC_WORKLIB)/objs/libbias_add_BASIC.a

prep_c_bias_add_BASIC : $(bias_add_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bias_add_BASIC_WORKLIB) prep_c

prep_vlog_bias_add_BASIC : $(bias_add_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bias_add_BASIC_WORKLIB) prep_vlog

prep_bias_add_BASIC : $(bias_add_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bias_add_BASIC_WORKLIB) prep

$(bias_add_BASIC_WORKLIB)/Makefile : $(bias_add_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(bias_add_BASIC_WORKLIB) ]; then mkdir -p $(bias_add_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(bias_add_BASIC_SRCDIR) -o $(bias_add_BASIC_WORKLIB)/Makefile -module bias_add -cynthconfig BASIC  

$(bias_add_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(bias_add_BASIC_WORKLIB) ]; then mkdir -p $(bias_add_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(bias_add_BASIC_WORKLIB)/bias_add_BASIC.d :
	@if [ ! -d $(bias_add_BASIC_WORKLIB) ]; then mkdir -p $(bias_add_BASIC_WORKLIB); fi
	@touch $(bias_add_BASIC_WORKLIB)/bias_add_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_bias_add_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_bias_add_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_bias_add_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_bias_add_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_bias_add_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_bias_add_DPA = 
CCFLAGS_bias_add_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/bias_add/DPA/c_parts -DDPA=1 -DBDW_RTL_bias_add_DPA=1  $(LIB_INCLUDES_bias_add_DPA)
CCFLAGS_bias_add_DPA += ${BDW_CCFLAGS_TAIL}

hls_bias_add_DPA : hlsc_bias_add_DPA

cynth_bias_add_DPA : hlsc_bias_add_DPA 

elab_bias_add_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/bias_add/DPA/stratus_hls.bdr

optim_bias_add_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/bias_add/DPA/stratus_hls.bdr

sched_bias_add_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/bias_add/DPA/stratus_hls.bdr

hlsc_bias_add_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=bias_add BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.bias_add.DPA $(MAKE) $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=bias_add BDW_HLS_CONFIG=DPA
endif

clean_cynth_bias_add_DPA: clean_hls_bias_add_DPA

clean_bias_add_DPA: clean_hls_bias_add_DPA

clean_hls_bias_add_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/bias_add/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.bias_add.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.bias_add.DPA.s

kill_hls_bias_add_DPA:
	@bdw_kill -job hls.bias_add.DPA
	@bdw_kill -job hls.bias_add.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_bias_add_DPA :
	bdw_htmlgen -project project.tcl -module bias_add -cynthconfig DPA



$(BDW_WORKLIB)/modules/bias_add/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.cpp

$(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.cpp $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.v $(BDW_WORKLIB)/modules/bias_add/DPA/stratus_hls.bdr :  bias_add.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/bias_add/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/bias_add/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.bias_add.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_bias_add_DPA) \
		-d $(BDW_WORKLIB)/modules/bias_add/DPA -o bias_add_rtl.cpp \
		--hls_module=bias_add --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_bias_add_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_bias_add_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_bias_add_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 bias_add.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_trace.h : $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_trace.h.updated

$(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_trace.h.updated : $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module bias_add -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_trace.h.updated

catHLLog_bias_add_DPA:
	cat $(BDW_WORKLIB)/modules/bias_add/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_bias_add_DPA : hls_bias_add_DPA 


hls_bias_add_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_bias_add_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.v prep_vlog_bias_add_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.bias_add.DPA $(MAKE) CWBExec=1 hls_bias_add_DPA
endif

catVLGLog_bias_add_DPA : catHLLog_bias_add_DPA
	cat $(BDW_WORKLIB)/modules/bias_add/DPA/stratus_vlg.log

#
#	view rule
#
view_bias_add_DPA : hls_bias_add_DPA
	@bdw_view_verdi -project project.tcl -modules bias_add -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.o : $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp $(BDW_WORKLIB)/wrappers/bias_add_cosim.h $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl bias_add`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bias_add/DPA -I./ $(CCFLAGS_bias_add_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl bias_add DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.o  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/bias_add/DPA/bias_add.o :  bias_add.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.h $(BDW_WORKLIB)/wrappers/bias_add_cosim.h $(BDW_WORKLIB)/wrappers/bias_add_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bias_add/DPA -I./ $(CCFLAGS_bias_add_DPA) -o $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add.o  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp
    

$(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_hoist.o :  bias_add.cpp $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp $(BDW_WORKLIB)/wrappers/bias_add_cosim.h $(BDW_WORKLIB)/wrappers/bias_add_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/bias_add/DPA -I./ $(CCFLAGS_bias_add_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl bias_add DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_hoist.o  $(BDW_WORKLIB)/wrappers/bias_add_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/bias_add/DPA/bias_add.d :  bias_add.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_bias_add_DPA)  bias_add.cpp \
	| sed 's|bias_add\.o[ :]*|$(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.cpp $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add.o $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/bias_add/DPA"
##############################################################

bias_add_DPA_SRCDIR = $(BDW_WORKLIB)/modules/bias_add/DPA
bias_add_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/bias_add_DPA
bias_add_DPA_LIBNAME = bias_add_DPA
bias_add_DPA_WORKLIB = $(BDW_WORKLIB)/modules/bias_add/DPA
bias_add_DPA_C_PARTS_A = $(bias_add_DPA_WORKLIB)/objs/libbias_add_DPA.a

prep_c_bias_add_DPA : $(bias_add_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bias_add_DPA_WORKLIB) prep_c

prep_vlog_bias_add_DPA : $(bias_add_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bias_add_DPA_WORKLIB) prep_vlog

prep_bias_add_DPA : $(bias_add_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(bias_add_DPA_WORKLIB) prep

$(bias_add_DPA_WORKLIB)/Makefile : $(bias_add_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(bias_add_DPA_WORKLIB) ]; then mkdir -p $(bias_add_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(bias_add_DPA_SRCDIR) -o $(bias_add_DPA_WORKLIB)/Makefile -module bias_add -cynthconfig DPA  

$(bias_add_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(bias_add_DPA_WORKLIB) ]; then mkdir -p $(bias_add_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(bias_add_DPA_WORKLIB)/bias_add_DPA.d :
	@if [ ! -d $(bias_add_DPA_WORKLIB) ]; then mkdir -p $(bias_add_DPA_WORKLIB); fi
	@touch $(bias_add_DPA_WORKLIB)/bias_add_DPA.d



##############################################################
## HLS Module "sfu_out_buff"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/sfu_out_buff.d :  sfu_out_buff.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  sfu_out_buff.cpp \
	| sed 's|sfu_out_buff\.o[ :]*|$(BDW_OBJDIR)/sfu_out_buff.o $(BDW_OBJDIR)/sfu_out_buff.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h : $(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h.updated

$(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h.updated :  sfu_out_buff.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module sfu_out_buff -vcd 
	@touch $(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h.updated



$(BDW_WORKLIB)/objs/sfu_out_buff.o:  sfu_out_buff.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/sfu_out_buff.o  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp

.INTERMEDIATE : sfu_out_buff_wrap.h

sfu_out_buff_wrap.h : $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.h

$(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.v   : $(BDW_WRAPDIR)/sfu_out_buff.updated

$(BDW_WRAPDIR)/sfu_out_buff.updated :  sfu_out_buff.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module sfu_out_buff "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/sfu_out_buff.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module sfu_out_buff -vcd 
	@touch $(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h.updated
$(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.d :  sfu_out_buff.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   sfu_out_buff.cpp \
		| sed 's|sfu_out_buff\.o[ :]*|$(BDW_WRAPDIR)/sfu_out_buff.updated $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.d 




##############################################################
## HLS Module "sfu_out_buff" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_sfu_out_buff_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_sfu_out_buff_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_sfu_out_buff_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_sfu_out_buff_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_sfu_out_buff_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_sfu_out_buff_BASIC = 
CCFLAGS_sfu_out_buff_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/c_parts -DBASIC=1 -DBDW_RTL_sfu_out_buff_BASIC=1  $(LIB_INCLUDES_sfu_out_buff_BASIC)
CCFLAGS_sfu_out_buff_BASIC += ${BDW_CCFLAGS_TAIL}

hls_sfu_out_buff_BASIC : hlsc_sfu_out_buff_BASIC

cynth_sfu_out_buff_BASIC : hlsc_sfu_out_buff_BASIC 

elab_sfu_out_buff_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/stratus_hls.bdr

optim_sfu_out_buff_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/stratus_hls.bdr

sched_sfu_out_buff_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/stratus_hls.bdr

hlsc_sfu_out_buff_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=sfu_out_buff BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.sfu_out_buff.BASIC $(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=sfu_out_buff BDW_HLS_CONFIG=BASIC
endif

clean_cynth_sfu_out_buff_BASIC: clean_hls_sfu_out_buff_BASIC

clean_sfu_out_buff_BASIC: clean_hls_sfu_out_buff_BASIC

clean_hls_sfu_out_buff_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.sfu_out_buff.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.sfu_out_buff.BASIC.s

kill_hls_sfu_out_buff_BASIC:
	@bdw_kill -job hls.sfu_out_buff.BASIC
	@bdw_kill -job hls.sfu_out_buff.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_sfu_out_buff_BASIC :
	bdw_htmlgen -project project.tcl -module sfu_out_buff -cynthconfig BASIC



$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.cpp

$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.cpp $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.v $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/stratus_hls.bdr :  sfu_out_buff.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.sfu_out_buff.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_sfu_out_buff_BASIC) \
		-d $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC -o sfu_out_buff_rtl.cpp \
		--hls_module=sfu_out_buff --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_sfu_out_buff_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_sfu_out_buff_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_sfu_out_buff_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 sfu_out_buff.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_trace.h : $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_trace.h.updated

$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_trace.h.updated : $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module sfu_out_buff -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_trace.h.updated

catHLLog_sfu_out_buff_BASIC:
	cat $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_sfu_out_buff_BASIC : hls_sfu_out_buff_BASIC 


hls_sfu_out_buff_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_sfu_out_buff_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.v prep_vlog_sfu_out_buff_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.sfu_out_buff.BASIC $(MAKE) CWBExec=1 hls_sfu_out_buff_BASIC
endif

catVLGLog_sfu_out_buff_BASIC : catHLLog_sfu_out_buff_BASIC
	cat $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/stratus_vlg.log

#
#	view rule
#
view_sfu_out_buff_BASIC : hls_sfu_out_buff_BASIC
	@bdw_view_verdi -project project.tcl -modules sfu_out_buff -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.o : $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.h $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl sfu_out_buff`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC -I./ $(CCFLAGS_sfu_out_buff_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl sfu_out_buff BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.o  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff.o :  sfu_out_buff.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC -I./ $(CCFLAGS_sfu_out_buff_BASIC) -o $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff.o  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp
    

$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_hoist.o :  sfu_out_buff.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC -I./ $(CCFLAGS_sfu_out_buff_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl sfu_out_buff BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_hoist.o  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff.d :  sfu_out_buff.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_sfu_out_buff_BASIC)  sfu_out_buff.cpp \
	| sed 's|sfu_out_buff\.o[ :]*|$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.cpp $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff.o $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/sfu_out_buff/BASIC"
##############################################################

sfu_out_buff_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC
sfu_out_buff_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/sfu_out_buff_BASIC
sfu_out_buff_BASIC_LIBNAME = sfu_out_buff_BASIC
sfu_out_buff_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC
sfu_out_buff_BASIC_C_PARTS_A = $(sfu_out_buff_BASIC_WORKLIB)/objs/libsfu_out_buff_BASIC.a

prep_c_sfu_out_buff_BASIC : $(sfu_out_buff_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(sfu_out_buff_BASIC_WORKLIB) prep_c

prep_vlog_sfu_out_buff_BASIC : $(sfu_out_buff_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(sfu_out_buff_BASIC_WORKLIB) prep_vlog

prep_sfu_out_buff_BASIC : $(sfu_out_buff_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(sfu_out_buff_BASIC_WORKLIB) prep

$(sfu_out_buff_BASIC_WORKLIB)/Makefile : $(sfu_out_buff_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(sfu_out_buff_BASIC_WORKLIB) ]; then mkdir -p $(sfu_out_buff_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(sfu_out_buff_BASIC_SRCDIR) -o $(sfu_out_buff_BASIC_WORKLIB)/Makefile -module sfu_out_buff -cynthconfig BASIC  

$(sfu_out_buff_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(sfu_out_buff_BASIC_WORKLIB) ]; then mkdir -p $(sfu_out_buff_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(sfu_out_buff_BASIC_WORKLIB)/sfu_out_buff_BASIC.d :
	@if [ ! -d $(sfu_out_buff_BASIC_WORKLIB) ]; then mkdir -p $(sfu_out_buff_BASIC_WORKLIB); fi
	@touch $(sfu_out_buff_BASIC_WORKLIB)/sfu_out_buff_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_sfu_out_buff_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_sfu_out_buff_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_sfu_out_buff_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_sfu_out_buff_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_sfu_out_buff_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_sfu_out_buff_DPA = 
CCFLAGS_sfu_out_buff_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/c_parts -DDPA=1 -DBDW_RTL_sfu_out_buff_DPA=1  $(LIB_INCLUDES_sfu_out_buff_DPA)
CCFLAGS_sfu_out_buff_DPA += ${BDW_CCFLAGS_TAIL}

hls_sfu_out_buff_DPA : hlsc_sfu_out_buff_DPA

cynth_sfu_out_buff_DPA : hlsc_sfu_out_buff_DPA 

elab_sfu_out_buff_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/stratus_hls.bdr

optim_sfu_out_buff_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/stratus_hls.bdr

sched_sfu_out_buff_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/stratus_hls.bdr

hlsc_sfu_out_buff_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=sfu_out_buff BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.sfu_out_buff.DPA $(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=sfu_out_buff BDW_HLS_CONFIG=DPA
endif

clean_cynth_sfu_out_buff_DPA: clean_hls_sfu_out_buff_DPA

clean_sfu_out_buff_DPA: clean_hls_sfu_out_buff_DPA

clean_hls_sfu_out_buff_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/sfu_out_buff/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.sfu_out_buff.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.sfu_out_buff.DPA.s

kill_hls_sfu_out_buff_DPA:
	@bdw_kill -job hls.sfu_out_buff.DPA
	@bdw_kill -job hls.sfu_out_buff.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_sfu_out_buff_DPA :
	bdw_htmlgen -project project.tcl -module sfu_out_buff -cynthconfig DPA



$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.cpp

$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.cpp $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.v $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/stratus_hls.bdr :  sfu_out_buff.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/sfu_out_buff/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/sfu_out_buff/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.sfu_out_buff.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_sfu_out_buff_DPA) \
		-d $(BDW_WORKLIB)/modules/sfu_out_buff/DPA -o sfu_out_buff_rtl.cpp \
		--hls_module=sfu_out_buff --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_sfu_out_buff_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_sfu_out_buff_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_sfu_out_buff_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 sfu_out_buff.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_trace.h : $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_trace.h.updated

$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_trace.h.updated : $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module sfu_out_buff -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_trace.h.updated

catHLLog_sfu_out_buff_DPA:
	cat $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_sfu_out_buff_DPA : hls_sfu_out_buff_DPA 


hls_sfu_out_buff_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_sfu_out_buff_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.v prep_vlog_sfu_out_buff_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.sfu_out_buff.DPA $(MAKE) CWBExec=1 hls_sfu_out_buff_DPA
endif

catVLGLog_sfu_out_buff_DPA : catHLLog_sfu_out_buff_DPA
	cat $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/stratus_vlg.log

#
#	view rule
#
view_sfu_out_buff_DPA : hls_sfu_out_buff_DPA
	@bdw_view_verdi -project project.tcl -modules sfu_out_buff -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.o : $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.h $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl sfu_out_buff`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/sfu_out_buff/DPA -I./ $(CCFLAGS_sfu_out_buff_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl sfu_out_buff DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.o  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff.o :  sfu_out_buff.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/sfu_out_buff/DPA -I./ $(CCFLAGS_sfu_out_buff_DPA) -o $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff.o  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp
    

$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_hoist.o :  sfu_out_buff.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp $(BDW_WORKLIB)/wrappers/sfu_out_buff_cosim.h $(BDW_WORKLIB)/wrappers/sfu_out_buff_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/sfu_out_buff/DPA -I./ $(CCFLAGS_sfu_out_buff_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl sfu_out_buff DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_hoist.o  $(BDW_WORKLIB)/wrappers/sfu_out_buff_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff.d :  sfu_out_buff.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_sfu_out_buff_DPA)  sfu_out_buff.cpp \
	| sed 's|sfu_out_buff\.o[ :]*|$(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.cpp $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff.o $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/sfu_out_buff/DPA"
##############################################################

sfu_out_buff_DPA_SRCDIR = $(BDW_WORKLIB)/modules/sfu_out_buff/DPA
sfu_out_buff_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/sfu_out_buff_DPA
sfu_out_buff_DPA_LIBNAME = sfu_out_buff_DPA
sfu_out_buff_DPA_WORKLIB = $(BDW_WORKLIB)/modules/sfu_out_buff/DPA
sfu_out_buff_DPA_C_PARTS_A = $(sfu_out_buff_DPA_WORKLIB)/objs/libsfu_out_buff_DPA.a

prep_c_sfu_out_buff_DPA : $(sfu_out_buff_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(sfu_out_buff_DPA_WORKLIB) prep_c

prep_vlog_sfu_out_buff_DPA : $(sfu_out_buff_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(sfu_out_buff_DPA_WORKLIB) prep_vlog

prep_sfu_out_buff_DPA : $(sfu_out_buff_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(sfu_out_buff_DPA_WORKLIB) prep

$(sfu_out_buff_DPA_WORKLIB)/Makefile : $(sfu_out_buff_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(sfu_out_buff_DPA_WORKLIB) ]; then mkdir -p $(sfu_out_buff_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(sfu_out_buff_DPA_SRCDIR) -o $(sfu_out_buff_DPA_WORKLIB)/Makefile -module sfu_out_buff -cynthconfig DPA  

$(sfu_out_buff_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(sfu_out_buff_DPA_WORKLIB) ]; then mkdir -p $(sfu_out_buff_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(sfu_out_buff_DPA_WORKLIB)/sfu_out_buff_DPA.d :
	@if [ ! -d $(sfu_out_buff_DPA_WORKLIB) ]; then mkdir -p $(sfu_out_buff_DPA_WORKLIB); fi
	@touch $(sfu_out_buff_DPA_WORKLIB)/sfu_out_buff_DPA.d



##############################################################
## HLS Module "finish_gen"
##############################################################


#
# Dependency Generation rule for BEH module
#
$(BDW_OBJDIR)/finish_gen.d :  finish_gen.cpp
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	@echo "Generating dependencies for $< "
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)  finish_gen.cpp \
	| sed 's|finish_gen\.o[ :]*|$(BDW_OBJDIR)/finish_gen.o $(BDW_OBJDIR)/finish_gen.d : |' $(BDW_DEP_FILTER)  > $@

$(BDW_WORKLIB)/wrappers/finish_gen_trace.h : $(BDW_WORKLIB)/wrappers/finish_gen_trace.h.updated

$(BDW_WORKLIB)/wrappers/finish_gen_trace.h.updated :  finish_gen.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module finish_gen -vcd 
	@touch $(BDW_WORKLIB)/wrappers/finish_gen_trace.h.updated



$(BDW_WORKLIB)/objs/finish_gen.o:  finish_gen.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.h $(BDW_WORKLIB)/wrappers/finish_gen_cosim.h $(BDW_WORKLIB)/wrappers/finish_gen_trace.h 
	@if [ ! -d $(BDW_OBJDIR) ]; then mkdir -p $(BDW_OBJDIR); fi
	$(BDW_CC)  $(BDW_CCFLAGS)   -o $(BDW_WORKLIB)/objs/finish_gen.o  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp

.INTERMEDIATE : finish_gen_wrap.h

finish_gen_wrap.h : $(BDW_WORKLIB)/wrappers/finish_gen_wrap.h

$(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.h $(BDW_WORKLIB)/wrappers/finish_gen_cosim.h $(BDW_WORKLIB)/wrappers/finish_gen_cosim.v   : $(BDW_WRAPDIR)/finish_gen.updated

$(BDW_WRAPDIR)/finish_gen.updated :  finish_gen.cpp 
	@if [ ! -d $(BDW_WRAPDIR) ]; then mkdir -p $(BDW_WRAPDIR); fi
	$(STRATUS_HOME)/bin/bdw_wrapgen -project project.tcl -module finish_gen "-I$(BDW_WRAPDIR) $(BDW_LIB_DASHI) $(BDW_CCOPTIONS) $(BDW_EXTRA_CCFLAGS)"
	@touch $(BDW_WRAPDIR)/finish_gen.updated
	$(STRATUS_HOME)/bin/bdw_tracegen -module finish_gen -vcd 
	@touch $(BDW_WORKLIB)/wrappers/finish_gen_trace.h.updated
$(BDW_WORKLIB)/wrappers/finish_gen_wrap.d :  finish_gen.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.h
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@set -e; $(BDW_CCDEP) -MM -MG $(BDW_CCFLAGS)   finish_gen.cpp \
		| sed 's|finish_gen\.o[ :]*|$(BDW_WRAPDIR)/finish_gen.updated $(BDW_WORKLIB)/wrappers/finish_gen_wrap.d :  |' $(BDW_DEP_FILTER) > $(BDW_WORKLIB)/wrappers/finish_gen_wrap.d 




##############################################################
## HLS Module "finish_gen" - cynthConfigs
##############################################################


#
# HLS config BASIC
#

#
#	stratus_hls rule
#
LIB_DIRS_finish_gen_BASIC = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_finish_gen_BASIC = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_finish_gen_BASIC))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_finish_gen_BASIC = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_finish_gen_BASIC = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_finish_gen_BASIC = 
CCFLAGS_finish_gen_BASIC = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/finish_gen/BASIC/c_parts -DBASIC=1 -DBDW_RTL_finish_gen_BASIC=1  $(LIB_INCLUDES_finish_gen_BASIC)
CCFLAGS_finish_gen_BASIC += ${BDW_CCFLAGS_TAIL}

hls_finish_gen_BASIC : hlsc_finish_gen_BASIC

cynth_finish_gen_BASIC : hlsc_finish_gen_BASIC 

elab_finish_gen_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/finish_gen/BASIC/stratus_hls.bdr

optim_finish_gen_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/finish_gen/BASIC/stratus_hls.bdr

sched_finish_gen_BASIC : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/finish_gen/BASIC/stratus_hls.bdr

hlsc_finish_gen_BASIC :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=finish_gen BDW_HLS_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hls.finish_gen.BASIC $(MAKE) $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.cpp BDW_DEP_CYNTH_CONFIG=BASIC BDW_MODULE=finish_gen BDW_HLS_CONFIG=BASIC
endif

clean_cynth_finish_gen_BASIC: clean_hls_finish_gen_BASIC

clean_finish_gen_BASIC: clean_hls_finish_gen_BASIC

clean_hls_finish_gen_BASIC:
	@rm -rf $(BDW_WORKLIB)/modules/finish_gen/BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.finish_gen.BASIC
	@rm -rf $(BDW_WORKLIB)/jobs/hls.finish_gen.BASIC.s

kill_hls_finish_gen_BASIC:
	@bdw_kill -job hls.finish_gen.BASIC
	@bdw_kill -job hls.finish_gen.BASIC.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),BASIC)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_finish_gen_BASIC :
	bdw_htmlgen -project project.tcl -module finish_gen -cynthconfig BASIC



$(BDW_WORKLIB)/modules/finish_gen/BASIC/stratus_hls.bdl : $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.cpp

$(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.cpp $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.v $(BDW_WORKLIB)/modules/finish_gen/BASIC/stratus_hls.bdr :  finish_gen.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/finish_gen/BASIC ]; then mkdir -p $(BDW_WORKLIB)/modules/finish_gen/BASIC; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=BASIC BDW_CYNTH_CONFIG=BASIC \
	bdw_exec -jobproject project.tcl -job hls.finish_gen.BASIC.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_finish_gen_BASIC) \
		-d $(BDW_WORKLIB)/modules/finish_gen/BASIC -o finish_gen_rtl.cpp \
		--hls_module=finish_gen --hls_config=BASIC --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_finish_gen_BASIC))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_finish_gen_BASIC))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_finish_gen_BASIC))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 finish_gen.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_trace.h : $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_trace.h.updated

$(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_trace.h.updated : $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module finish_gen -cynthconfig BASIC -vcd 
	@touch $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_trace.h.updated

catHLLog_finish_gen_BASIC:
	cat $(BDW_WORKLIB)/modules/finish_gen/BASIC/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_finish_gen_BASIC : hls_finish_gen_BASIC 


hls_finish_gen_BASIC : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_finish_gen_BASIC)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.v prep_vlog_finish_gen_BASIC BDW_DEP_CYNTH_CONFIG=BASIC
else
	@bdw_exec -jobproject project.tcl -job hlsv.finish_gen.BASIC $(MAKE) CWBExec=1 hls_finish_gen_BASIC
endif

catVLGLog_finish_gen_BASIC : catHLLog_finish_gen_BASIC
	cat $(BDW_WORKLIB)/modules/finish_gen/BASIC/stratus_vlg.log

#
#	view rule
#
view_finish_gen_BASIC : hls_finish_gen_BASIC
	@bdw_view_verdi -project project.tcl -modules finish_gen -cynthconfig BASIC

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.o : $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp $(BDW_WORKLIB)/wrappers/finish_gen_cosim.h $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl finish_gen`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/finish_gen/BASIC -I./ $(CCFLAGS_finish_gen_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl finish_gen BASIC]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.o  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen.o :  finish_gen.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.h $(BDW_WORKLIB)/wrappers/finish_gen_cosim.h $(BDW_WORKLIB)/wrappers/finish_gen_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/finish_gen/BASIC -I./ $(CCFLAGS_finish_gen_BASIC) -o $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen.o  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp
    

$(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_hoist.o :  finish_gen.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp $(BDW_WORKLIB)/wrappers/finish_gen_cosim.h $(BDW_WORKLIB)/wrappers/finish_gen_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/finish_gen/BASIC -I./ $(CCFLAGS_finish_gen_BASIC) $(shell echo "puts [extractHoistLibDashIs project.tcl finish_gen BASIC]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_hoist.o  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen.d :  finish_gen.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config BASIC of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_finish_gen_BASIC)  finish_gen.cpp \
	| sed 's|finish_gen\.o[ :]*|$(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.cpp $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen.o $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/finish_gen/BASIC"
##############################################################

finish_gen_BASIC_SRCDIR = $(BDW_WORKLIB)/modules/finish_gen/BASIC
finish_gen_BASIC_BEH_SRCDIR = $(BDW_WORKLIB)/libs/finish_gen_BASIC
finish_gen_BASIC_LIBNAME = finish_gen_BASIC
finish_gen_BASIC_WORKLIB = $(BDW_WORKLIB)/modules/finish_gen/BASIC
finish_gen_BASIC_C_PARTS_A = $(finish_gen_BASIC_WORKLIB)/objs/libfinish_gen_BASIC.a

prep_c_finish_gen_BASIC : $(finish_gen_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(finish_gen_BASIC_WORKLIB) prep_c

prep_vlog_finish_gen_BASIC : $(finish_gen_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(finish_gen_BASIC_WORKLIB) prep_vlog

prep_finish_gen_BASIC : $(finish_gen_BASIC_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(finish_gen_BASIC_WORKLIB) prep

$(finish_gen_BASIC_WORKLIB)/Makefile : $(finish_gen_BASIC_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(finish_gen_BASIC_WORKLIB) ]; then mkdir -p $(finish_gen_BASIC_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(finish_gen_BASIC_SRCDIR) -o $(finish_gen_BASIC_WORKLIB)/Makefile -module finish_gen -cynthconfig BASIC  

$(finish_gen_BASIC_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(finish_gen_BASIC_WORKLIB) ]; then mkdir -p $(finish_gen_BASIC_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(finish_gen_BASIC_WORKLIB)/finish_gen_BASIC.d :
	@if [ ! -d $(finish_gen_BASIC_WORKLIB) ]; then mkdir -p $(finish_gen_BASIC_WORKLIB); fi
	@touch $(finish_gen_BASIC_WORKLIB)/finish_gen_BASIC.d



#
# HLS config DPA
#

#
#	stratus_hls rule
#
LIB_DIRS_finish_gen_DPA = $(cynw_cm_float_BEH_SRCDIR) $(cynw_cm_float_SRCDIR) 
LIB_INCLUDES_finish_gen_DPA = $(addprefix -I,$(addsuffix /c_parts,$(LIB_DIRS_finish_gen_DPA))) $(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS)))
LIB_NAMES_finish_gen_DPA = $(cynw_cm_float_LIBNAME) 
LIB_NAMES_FOR_VLOG_finish_gen_DPA = $(cynw_cm_float_LIBNAME) 
PREFIXED_LIB_NAMES_finish_gen_DPA = 
CCFLAGS_finish_gen_DPA = -I./ -I$(BDW_WRAPDIR)  -DBDW_CC_SPEC=1 -I$(BDW_WORKLIB)/modules/finish_gen/DPA/c_parts -DDPA=1 -DBDW_RTL_finish_gen_DPA=1  $(LIB_INCLUDES_finish_gen_DPA)
CCFLAGS_finish_gen_DPA += ${BDW_CCFLAGS_TAIL}

hls_finish_gen_DPA : hlsc_finish_gen_DPA

cynth_finish_gen_DPA : hlsc_finish_gen_DPA 

elab_finish_gen_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=elab" $(MAKE) $(BDW_WORKLIB)/modules/finish_gen/DPA/stratus_hls.bdr

optim_finish_gen_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=optim" $(MAKE) $(BDW_WORKLIB)/modules/finish_gen/DPA/stratus_hls.bdr

sched_finish_gen_DPA : 
	@BDW_EXTRA_HLFLAGS="$(BDW_EXTRA_HLFLAGS) --run_through=sched" $(MAKE) $(BDW_WORKLIB)/modules/finish_gen/DPA/stratus_hls.bdr

hlsc_finish_gen_DPA :
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=finish_gen BDW_HLS_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hls.finish_gen.DPA $(MAKE) $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.cpp BDW_DEP_CYNTH_CONFIG=DPA BDW_MODULE=finish_gen BDW_HLS_CONFIG=DPA
endif

clean_cynth_finish_gen_DPA: clean_hls_finish_gen_DPA

clean_finish_gen_DPA: clean_hls_finish_gen_DPA

clean_hls_finish_gen_DPA:
	@rm -rf $(BDW_WORKLIB)/modules/finish_gen/DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.finish_gen.DPA
	@rm -rf $(BDW_WORKLIB)/jobs/hls.finish_gen.DPA.s

kill_hls_finish_gen_DPA:
	@bdw_kill -job hls.finish_gen.DPA
	@bdw_kill -job hls.finish_gen.DPA.s


ifeq ($(BDW_DEP_CYNTH_CONFIG),DPA)
    ifeq ($(findstring CLEAN,$(MAKECMDGOALS)),)
        ifeq ($(findstring clean,$(MAKECMDGOALS)),)
            ifeq ($(findstring help,$(MAKECMDGOALS)),)
                -include $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen.d
                BDW_LIB_DEPS = 
            endif
        endif
    endif
endif


html_finish_gen_DPA :
	bdw_htmlgen -project project.tcl -module finish_gen -cynthconfig DPA



$(BDW_WORKLIB)/modules/finish_gen/DPA/stratus_hls.bdl : $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.cpp

$(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.cpp $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.v $(BDW_WORKLIB)/modules/finish_gen/DPA/stratus_hls.bdr :  finish_gen.cpp  $(BDW_LIB_DEPS)
	@if [ ! -d $(BDW_WORKLIB)/modules/finish_gen/DPA ]; then mkdir -p $(BDW_WORKLIB)/modules/finish_gen/DPA; fi
	
	$(BDW_EXEC_CMD) BDW_HLS_CONFIG=DPA BDW_CYNTH_CONFIG=DPA \
	bdw_exec -jobproject project.tcl -job hls.finish_gen.DPA.s \
	$(CYNTHHL) $(HL_FLAGS) $(HL_FLAGS_finish_gen_DPA) \
		-d $(BDW_WORKLIB)/modules/finish_gen/DPA -o finish_gen_rtl.cpp \
		--hls_module=finish_gen --hls_config=DPA --project=project.tcl \
		$(addprefix -P ,$(addsuffix /c_parts,$(LIB_DIRS_finish_gen_DPA))) \
		$(addprefix -p , $(notdir $(LIB_NAMES_finish_gen_DPA))) \
		$(addprefix -pu , $(notdir $(PREFIXED_LIB_NAMES_finish_gen_DPA))) \
		$(addprefix -I ,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
		 finish_gen.cpp
	
	
	
	
	
$(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_trace.h : $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_trace.h.updated

$(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_trace.h.updated : $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.cpp $(BDW_LOGOPTIONS_FILE)
	$(STRATUS_HOME)/bin/bdw_tracegen -module finish_gen -cynthconfig DPA -vcd 
	@touch $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_trace.h.updated

catHLLog_finish_gen_DPA:
	cat $(BDW_WORKLIB)/modules/finish_gen/DPA/stratus_hls.log

#
#	stratus_vlg rule
#
cynthvlg_finish_gen_DPA : hls_finish_gen_DPA 


hls_finish_gen_DPA : $(addprefix prep_vlog_,$(LIB_NAMES_FOR_VLOG_finish_gen_DPA)) 
ifeq ($(CWBExec),1)
	@$(MAKE) $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.v prep_vlog_finish_gen_DPA BDW_DEP_CYNTH_CONFIG=DPA
else
	@bdw_exec -jobproject project.tcl -job hlsv.finish_gen.DPA $(MAKE) CWBExec=1 hls_finish_gen_DPA
endif

catVLGLog_finish_gen_DPA : catHLLog_finish_gen_DPA
	cat $(BDW_WORKLIB)/modules/finish_gen/DPA/stratus_vlg.log

#
#	view rule
#
view_finish_gen_DPA : hls_finish_gen_DPA
	@bdw_view_verdi -project project.tcl -modules finish_gen -cynthconfig DPA

#
#	RTL object file rule
#
$(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.o : $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp $(BDW_WORKLIB)/wrappers/finish_gen_cosim.h $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_trace.h 
	@if [ ! -d $(@D) ] ; then mkdir -p $(@D) ; fi
	@$(MAKE)  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp `$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_nestedwrap.tcl project.tcl finish_gen`
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/finish_gen/DPA -I./ $(CCFLAGS_finish_gen_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl finish_gen DPA]" | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_RTL=1 -DBDW_HUB=1 -o $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.o  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp

#
#	Behavioral object file rule.  Used only for BEH configs that are 
#	associated with HLS config names.
#

$(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen.o :  finish_gen.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.h $(BDW_WORKLIB)/wrappers/finish_gen_cosim.h $(BDW_WORKLIB)/wrappers/finish_gen_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/finish_gen/DPA -I./ $(CCFLAGS_finish_gen_DPA) -o $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen.o  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp
    

$(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_hoist.o :  finish_gen.cpp $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp $(BDW_WORKLIB)/wrappers/finish_gen_cosim.h $(BDW_WORKLIB)/wrappers/finish_gen_trace.h 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_CC)  -I$(BDW_WORKLIB)/modules/finish_gen/DPA -I./ $(CCFLAGS_finish_gen_DPA) $(shell echo "puts [extractHoistLibDashIs project.tcl finish_gen DPA]"  | $(STRATUS_HOME)/bin/bdw_shell) -DBDW_HOIST -o $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_hoist.o  $(BDW_WORKLIB)/wrappers/finish_gen_wrap.cpp
    

#
#	Dependency generation rule
#
$(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen.d :  finish_gen.cpp
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	@echo "Generating dependencies for HLS config DPA of "$<
	@set -e; $(BDW_CCDEP) -MM -MG $(CCFLAGS_finish_gen_DPA)  finish_gen.cpp \
	| sed 's|finish_gen\.o[ :]*|$(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.cpp $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen.o $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen.d :  |' $(BDW_DEP_FILTER)  > $@

#
#	Library post-proc rules
#



##############################################################
## Parts Library "$(BDW_WORKLIB)/modules/finish_gen/DPA"
##############################################################

finish_gen_DPA_SRCDIR = $(BDW_WORKLIB)/modules/finish_gen/DPA
finish_gen_DPA_BEH_SRCDIR = $(BDW_WORKLIB)/libs/finish_gen_DPA
finish_gen_DPA_LIBNAME = finish_gen_DPA
finish_gen_DPA_WORKLIB = $(BDW_WORKLIB)/modules/finish_gen/DPA
finish_gen_DPA_C_PARTS_A = $(finish_gen_DPA_WORKLIB)/objs/libfinish_gen_DPA.a

prep_c_finish_gen_DPA : $(finish_gen_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(finish_gen_DPA_WORKLIB) prep_c

prep_vlog_finish_gen_DPA : $(finish_gen_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(finish_gen_DPA_WORKLIB) prep_vlog

prep_finish_gen_DPA : $(finish_gen_DPA_WORKLIB)/Makefile
	@+make --no-print-directory $(BDW_PMAKE_FLG) -C $(finish_gen_DPA_WORKLIB) prep

$(finish_gen_DPA_WORKLIB)/Makefile : $(finish_gen_DPA_SRCDIR)/stratus_hls.bdl
	@if [ ! -d $(finish_gen_DPA_WORKLIB) ]; then mkdir -p $(finish_gen_DPA_WORKLIB); fi
	$(STRATUS_HOME)/bin/bdw_makegen project.tcl -scsim builtin -lib $(finish_gen_DPA_SRCDIR) -o $(finish_gen_DPA_WORKLIB)/Makefile -module finish_gen -cynthconfig DPA  

$(finish_gen_DPA_SRCDIR)/stratus_hls.bdl :
	@if [ ! -d $(finish_gen_DPA_WORKLIB) ]; then mkdir -p $(finish_gen_DPA_WORKLIB); fi
	@if [ ! -f $@ ]; then echo "createEmptyBdl $@ MEMORY 0" | $(STRATUS_HOME)/bin/bdw_shell; fi



$(finish_gen_DPA_WORKLIB)/finish_gen_DPA.d :
	@if [ ! -d $(finish_gen_DPA_WORKLIB) ]; then mkdir -p $(finish_gen_DPA_WORKLIB); fi
	@touch $(finish_gen_DPA_WORKLIB)/finish_gen_DPA.d



#
# Rules for configured systemModules
#


#
# Per-hls_config rules
#

cynth_DPA:  cynth_fp_div_DPA cynth_fp_mul_DPA cynth_fp_add_DPA cynth_fp_cmp_DPA cynth_float2fix_DPA cynth_avg_pool_DPA cynth_in_buff_DPA cynth_fix2float_DPA cynth_linear_dequant_DPA cynth_bn_float32_DPA cynth_relu_offset_float_DPA cynth_learn_clip_DPA cynth_m_float2fix_DPA cynth_bias_add_DPA cynth_sfu_out_buff_DPA cynth_finish_gen_DPA
hlsc_DPA:  
	$(MAKE) -j1 hlsc_fp_div_DPA hlsc_fp_mul_DPA hlsc_fp_add_DPA hlsc_fp_cmp_DPA hlsc_float2fix_DPA hlsc_avg_pool_DPA hlsc_in_buff_DPA hlsc_fix2float_DPA hlsc_linear_dequant_DPA hlsc_bn_float32_DPA hlsc_relu_offset_float_DPA hlsc_learn_clip_DPA hlsc_m_float2fix_DPA hlsc_bias_add_DPA hlsc_sfu_out_buff_DPA hlsc_finish_gen_DPA

cynthvlg_DPA: hls_DPA
hls_DPA:  
	$(MAKE) -j1 hls_fp_div_DPA hls_fp_mul_DPA hls_fp_add_DPA hls_fp_cmp_DPA hls_float2fix_DPA hls_avg_pool_DPA hls_in_buff_DPA hls_fix2float_DPA hls_linear_dequant_DPA hls_bn_float32_DPA hls_relu_offset_float_DPA hls_learn_clip_DPA hls_m_float2fix_DPA hls_bias_add_DPA hls_sfu_out_buff_DPA hls_finish_gen_DPA

cynthvlg_DPA: elab_DPA
elab_DPA:  
	$(MAKE) -j1 elab_fp_div_DPA elab_fp_mul_DPA elab_fp_add_DPA elab_fp_cmp_DPA elab_float2fix_DPA elab_avg_pool_DPA elab_in_buff_DPA elab_fix2float_DPA elab_linear_dequant_DPA elab_bn_float32_DPA elab_relu_offset_float_DPA elab_learn_clip_DPA elab_m_float2fix_DPA elab_bias_add_DPA elab_sfu_out_buff_DPA elab_finish_gen_DPA

cynthvlg_DPA: optim_DPA
optim_DPA:  
	$(MAKE) -j1 optim_fp_div_DPA optim_fp_mul_DPA optim_fp_add_DPA optim_fp_cmp_DPA optim_float2fix_DPA optim_avg_pool_DPA optim_in_buff_DPA optim_fix2float_DPA optim_linear_dequant_DPA optim_bn_float32_DPA optim_relu_offset_float_DPA optim_learn_clip_DPA optim_m_float2fix_DPA optim_bias_add_DPA optim_sfu_out_buff_DPA optim_finish_gen_DPA

cynthvlg_DPA: sched_DPA
sched_DPA:  
	$(MAKE) -j1 sched_fp_div_DPA sched_fp_mul_DPA sched_fp_add_DPA sched_fp_cmp_DPA sched_float2fix_DPA sched_avg_pool_DPA sched_in_buff_DPA sched_fix2float_DPA sched_linear_dequant_DPA sched_bn_float32_DPA sched_relu_offset_float_DPA sched_learn_clip_DPA sched_m_float2fix_DPA sched_bias_add_DPA sched_sfu_out_buff_DPA sched_finish_gen_DPA

view_DPA: hls_DPA
	@bdw_view_verdi -project project.tcl -modules fp_div,fp_mul,fp_add,fp_cmp,float2fix,avg_pool,in_buff,fix2float,linear_dequant,bn_float32,relu_offset_float,learn_clip,m_float2fix,bias_add,sfu_out_buff,finish_gen -cynthconfig DPA


clean_DPA:
	@rm -f $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.cpp $(BDW_WORKLIB)/modules/fp_div/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.cpp $(BDW_WORKLIB)/modules/fp_mul/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.cpp $(BDW_WORKLIB)/modules/fp_add/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.cpp $(BDW_WORKLIB)/modules/fp_cmp/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.cpp $(BDW_WORKLIB)/modules/float2fix/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.cpp $(BDW_WORKLIB)/modules/avg_pool/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.cpp $(BDW_WORKLIB)/modules/in_buff/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.cpp $(BDW_WORKLIB)/modules/fix2float/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.cpp $(BDW_WORKLIB)/modules/linear_dequant/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.cpp $(BDW_WORKLIB)/modules/bn_float32/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.cpp $(BDW_WORKLIB)/modules/relu_offset_float/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.cpp $(BDW_WORKLIB)/modules/learn_clip/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.cpp $(BDW_WORKLIB)/modules/m_float2fix/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.cpp $(BDW_WORKLIB)/modules/bias_add/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.cpp $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.cpp $(BDW_WORKLIB)/modules/finish_gen/DPA/stratus_hls.bdr


cynth_BASIC:  cynth_fp_div_BASIC cynth_fp_mul_BASIC cynth_fp_add_BASIC cynth_fp_cmp_BASIC cynth_float2fix_BASIC cynth_avg_pool_BASIC cynth_in_buff_BASIC cynth_fix2float_BASIC cynth_linear_dequant_BASIC cynth_bn_float32_BASIC cynth_relu_offset_float_BASIC cynth_learn_clip_BASIC cynth_m_float2fix_BASIC cynth_bias_add_BASIC cynth_sfu_out_buff_BASIC cynth_finish_gen_BASIC
hlsc_BASIC:  
	$(MAKE) -j1 hlsc_fp_div_BASIC hlsc_fp_mul_BASIC hlsc_fp_add_BASIC hlsc_fp_cmp_BASIC hlsc_float2fix_BASIC hlsc_avg_pool_BASIC hlsc_in_buff_BASIC hlsc_fix2float_BASIC hlsc_linear_dequant_BASIC hlsc_bn_float32_BASIC hlsc_relu_offset_float_BASIC hlsc_learn_clip_BASIC hlsc_m_float2fix_BASIC hlsc_bias_add_BASIC hlsc_sfu_out_buff_BASIC hlsc_finish_gen_BASIC

cynthvlg_BASIC: hls_BASIC
hls_BASIC:  
	$(MAKE) -j1 hls_fp_div_BASIC hls_fp_mul_BASIC hls_fp_add_BASIC hls_fp_cmp_BASIC hls_float2fix_BASIC hls_avg_pool_BASIC hls_in_buff_BASIC hls_fix2float_BASIC hls_linear_dequant_BASIC hls_bn_float32_BASIC hls_relu_offset_float_BASIC hls_learn_clip_BASIC hls_m_float2fix_BASIC hls_bias_add_BASIC hls_sfu_out_buff_BASIC hls_finish_gen_BASIC

cynthvlg_BASIC: elab_BASIC
elab_BASIC:  
	$(MAKE) -j1 elab_fp_div_BASIC elab_fp_mul_BASIC elab_fp_add_BASIC elab_fp_cmp_BASIC elab_float2fix_BASIC elab_avg_pool_BASIC elab_in_buff_BASIC elab_fix2float_BASIC elab_linear_dequant_BASIC elab_bn_float32_BASIC elab_relu_offset_float_BASIC elab_learn_clip_BASIC elab_m_float2fix_BASIC elab_bias_add_BASIC elab_sfu_out_buff_BASIC elab_finish_gen_BASIC

cynthvlg_BASIC: optim_BASIC
optim_BASIC:  
	$(MAKE) -j1 optim_fp_div_BASIC optim_fp_mul_BASIC optim_fp_add_BASIC optim_fp_cmp_BASIC optim_float2fix_BASIC optim_avg_pool_BASIC optim_in_buff_BASIC optim_fix2float_BASIC optim_linear_dequant_BASIC optim_bn_float32_BASIC optim_relu_offset_float_BASIC optim_learn_clip_BASIC optim_m_float2fix_BASIC optim_bias_add_BASIC optim_sfu_out_buff_BASIC optim_finish_gen_BASIC

cynthvlg_BASIC: sched_BASIC
sched_BASIC:  
	$(MAKE) -j1 sched_fp_div_BASIC sched_fp_mul_BASIC sched_fp_add_BASIC sched_fp_cmp_BASIC sched_float2fix_BASIC sched_avg_pool_BASIC sched_in_buff_BASIC sched_fix2float_BASIC sched_linear_dequant_BASIC sched_bn_float32_BASIC sched_relu_offset_float_BASIC sched_learn_clip_BASIC sched_m_float2fix_BASIC sched_bias_add_BASIC sched_sfu_out_buff_BASIC sched_finish_gen_BASIC

view_BASIC: hls_BASIC
	@bdw_view_verdi -project project.tcl -modules fp_div,fp_mul,fp_add,fp_cmp,float2fix,avg_pool,in_buff,fix2float,linear_dequant,bn_float32,relu_offset_float,learn_clip,m_float2fix,bias_add,sfu_out_buff,finish_gen -cynthconfig BASIC


clean_BASIC:
	@rm -f $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.cpp $(BDW_WORKLIB)/modules/fp_div/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.cpp $(BDW_WORKLIB)/modules/fp_mul/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.cpp $(BDW_WORKLIB)/modules/fp_add/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.cpp $(BDW_WORKLIB)/modules/fp_cmp/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.cpp $(BDW_WORKLIB)/modules/float2fix/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.cpp $(BDW_WORKLIB)/modules/avg_pool/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.cpp $(BDW_WORKLIB)/modules/in_buff/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.cpp $(BDW_WORKLIB)/modules/fix2float/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.cpp $(BDW_WORKLIB)/modules/linear_dequant/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.cpp $(BDW_WORKLIB)/modules/bn_float32/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.cpp $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.cpp $(BDW_WORKLIB)/modules/learn_clip/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.cpp $(BDW_WORKLIB)/modules/m_float2fix/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.cpp $(BDW_WORKLIB)/modules/bias_add/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.cpp $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/stratus_hls.bdr
	@rm -f $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.cpp $(BDW_WORKLIB)/modules/finish_gen/BASIC/stratus_hls.bdr



##############################################################################
#   start of rules for logic synthesis
##############################################################################

synth1target:
	@echo "NOTE 02926: BEGIN EXTERNAL TOOL PROCESSING"
ifneq ($(PASSED_LOG),)
	rm -f $(PASSED_LOG)
endif
	@if [ ! -d $(BDW_LS_CONFIG_DIR) ]; then mkdir -p $(BDW_LS_CONFIG_DIR); fi
	@rm -rf $(BDW_LS_CONFIG_LOGS)
	@$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_synthinfo.tcl
ifeq ($(BDW_USE_GRID_INT),1)
	@date +"INFO: %D %T ${@} in `pwd` BDW_LS_LIC='${BDW_LS_LIC}' BDW_LS_CMD='${BDW_LS_CMD}' STARTED"
ifeq ($(BDW_LS_LIC),)
	@echo "****** Error: synth1target FAILED because BDW_LS_LIC was not set"; exit 1
endif
endif
	@$(BDW_EXEC_CMD) bdw_exec -jobproject project.tcl -job ls.$(BDW_LS_CONFIG).s $(BDW_LS_CMD)
ifeq ($(BDW_USE_GRID_INT),1)
	@date +"INFO: %D %T ${@} in `pwd` BDW_LS_LIC='${BDW_LS_LIC}' BDW_LS_CMD='${BDW_LS_CMD}' FINISHED"
endif


#
#   Rules for logicSynth config G_MAC_BASIC
#

ifeq ($(CWBExec),1)
ls_G_MAC_BASIC: $(BDW_WORKLIB)/logicsynth/G_MAC_BASIC/avg_pool_gates.v
else
.PHONY: ls_G_MAC_BASIC

ls_G_MAC_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_MAC_BASIC $(MAKE) CWBExec=1 ls_G_MAC_BASIC
endif

kill_ls_G_MAC_BASIC:
	@bdw_kill -job ls.G_MAC_BASIC
	@bdw_kill -job ls.G_MAC_BASIC.s

clean_ls_G_MAC_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_MAC_BASIC

$(BDW_WORKLIB)/logicsynth/G_MAC_BASIC/avg_pool_gates.v: $(BDW_WORKLIB)/modules/avg_pool/BASIC/avg_pool_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_avg_pool_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_MAC_BASIC BDW_MODULE=avg_pool

view_ls_G_MAC_BASIC: hls_avg_pool_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_MAC_BASIC

#
#   Rules for logicSynth config G_MAC_DPA
#

ifeq ($(CWBExec),1)
ls_G_MAC_DPA: $(BDW_WORKLIB)/logicsynth/G_MAC_DPA/avg_pool_gates.v
else
.PHONY: ls_G_MAC_DPA

ls_G_MAC_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_MAC_DPA $(MAKE) CWBExec=1 ls_G_MAC_DPA
endif

kill_ls_G_MAC_DPA:
	@bdw_kill -job ls.G_MAC_DPA
	@bdw_kill -job ls.G_MAC_DPA.s

clean_ls_G_MAC_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_MAC_DPA

$(BDW_WORKLIB)/logicsynth/G_MAC_DPA/avg_pool_gates.v: $(BDW_WORKLIB)/modules/avg_pool/DPA/avg_pool_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_avg_pool_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_MAC_DPA BDW_MODULE=avg_pool

view_ls_G_MAC_DPA: hls_avg_pool_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_MAC_DPA

#
#   Rules for logicSynth config G_CACHE_BASIC
#

ifeq ($(CWBExec),1)
ls_G_CACHE_BASIC: $(BDW_WORKLIB)/logicsynth/G_CACHE_BASIC/in_buff_gates.v
else
.PHONY: ls_G_CACHE_BASIC

ls_G_CACHE_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_CACHE_BASIC $(MAKE) CWBExec=1 ls_G_CACHE_BASIC
endif

kill_ls_G_CACHE_BASIC:
	@bdw_kill -job ls.G_CACHE_BASIC
	@bdw_kill -job ls.G_CACHE_BASIC.s

clean_ls_G_CACHE_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_CACHE_BASIC

$(BDW_WORKLIB)/logicsynth/G_CACHE_BASIC/in_buff_gates.v: $(BDW_WORKLIB)/modules/in_buff/BASIC/in_buff_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_in_buff_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_CACHE_BASIC BDW_MODULE=in_buff

view_ls_G_CACHE_BASIC: hls_in_buff_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_CACHE_BASIC

#
#   Rules for logicSynth config G_CACHE_DPA
#

ifeq ($(CWBExec),1)
ls_G_CACHE_DPA: $(BDW_WORKLIB)/logicsynth/G_CACHE_DPA/in_buff_gates.v
else
.PHONY: ls_G_CACHE_DPA

ls_G_CACHE_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_CACHE_DPA $(MAKE) CWBExec=1 ls_G_CACHE_DPA
endif

kill_ls_G_CACHE_DPA:
	@bdw_kill -job ls.G_CACHE_DPA
	@bdw_kill -job ls.G_CACHE_DPA.s

clean_ls_G_CACHE_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_CACHE_DPA

$(BDW_WORKLIB)/logicsynth/G_CACHE_DPA/in_buff_gates.v: $(BDW_WORKLIB)/modules/in_buff/DPA/in_buff_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_in_buff_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_CACHE_DPA BDW_MODULE=in_buff

view_ls_G_CACHE_DPA: hls_in_buff_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_CACHE_DPA

#
#   Rules for logicSynth config G_FIX2FLOAT_BASIC
#

ifeq ($(CWBExec),1)
ls_G_FIX2FLOAT_BASIC: $(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_BASIC/fix2float_gates.v
else
.PHONY: ls_G_FIX2FLOAT_BASIC

ls_G_FIX2FLOAT_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_FIX2FLOAT_BASIC $(MAKE) CWBExec=1 ls_G_FIX2FLOAT_BASIC
endif

kill_ls_G_FIX2FLOAT_BASIC:
	@bdw_kill -job ls.G_FIX2FLOAT_BASIC
	@bdw_kill -job ls.G_FIX2FLOAT_BASIC.s

clean_ls_G_FIX2FLOAT_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_BASIC

$(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_BASIC/fix2float_gates.v: $(BDW_WORKLIB)/modules/fix2float/BASIC/fix2float_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fix2float_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_FIX2FLOAT_BASIC BDW_MODULE=fix2float

view_ls_G_FIX2FLOAT_BASIC: hls_fix2float_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_FIX2FLOAT_BASIC

#
#   Rules for logicSynth config G_FIX2FLOAT_DPA
#

ifeq ($(CWBExec),1)
ls_G_FIX2FLOAT_DPA: $(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_DPA/fix2float_gates.v
else
.PHONY: ls_G_FIX2FLOAT_DPA

ls_G_FIX2FLOAT_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_FIX2FLOAT_DPA $(MAKE) CWBExec=1 ls_G_FIX2FLOAT_DPA
endif

kill_ls_G_FIX2FLOAT_DPA:
	@bdw_kill -job ls.G_FIX2FLOAT_DPA
	@bdw_kill -job ls.G_FIX2FLOAT_DPA.s

clean_ls_G_FIX2FLOAT_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_DPA

$(BDW_WORKLIB)/logicsynth/G_FIX2FLOAT_DPA/fix2float_gates.v: $(BDW_WORKLIB)/modules/fix2float/DPA/fix2float_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fix2float_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_FIX2FLOAT_DPA BDW_MODULE=fix2float

view_ls_G_FIX2FLOAT_DPA: hls_fix2float_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_FIX2FLOAT_DPA

#
#   Rules for logicSynth config G_FP_DIV_BASIC
#

ifeq ($(CWBExec),1)
ls_G_FP_DIV_BASIC: $(BDW_WORKLIB)/logicsynth/G_FP_DIV_BASIC/fp_div_gates.v
else
.PHONY: ls_G_FP_DIV_BASIC

ls_G_FP_DIV_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_FP_DIV_BASIC $(MAKE) CWBExec=1 ls_G_FP_DIV_BASIC
endif

kill_ls_G_FP_DIV_BASIC:
	@bdw_kill -job ls.G_FP_DIV_BASIC
	@bdw_kill -job ls.G_FP_DIV_BASIC.s

clean_ls_G_FP_DIV_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_FP_DIV_BASIC

$(BDW_WORKLIB)/logicsynth/G_FP_DIV_BASIC/fp_div_gates.v: $(BDW_WORKLIB)/modules/fp_div/BASIC/fp_div_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fp_div_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_FP_DIV_BASIC BDW_MODULE=fp_div

view_ls_G_FP_DIV_BASIC: hls_fp_div_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_FP_DIV_BASIC

#
#   Rules for logicSynth config G_FP_DIV_DPA
#

ifeq ($(CWBExec),1)
ls_G_FP_DIV_DPA: $(BDW_WORKLIB)/logicsynth/G_FP_DIV_DPA/fp_div_gates.v
else
.PHONY: ls_G_FP_DIV_DPA

ls_G_FP_DIV_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_FP_DIV_DPA $(MAKE) CWBExec=1 ls_G_FP_DIV_DPA
endif

kill_ls_G_FP_DIV_DPA:
	@bdw_kill -job ls.G_FP_DIV_DPA
	@bdw_kill -job ls.G_FP_DIV_DPA.s

clean_ls_G_FP_DIV_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_FP_DIV_DPA

$(BDW_WORKLIB)/logicsynth/G_FP_DIV_DPA/fp_div_gates.v: $(BDW_WORKLIB)/modules/fp_div/DPA/fp_div_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fp_div_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_FP_DIV_DPA BDW_MODULE=fp_div

view_ls_G_FP_DIV_DPA: hls_fp_div_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_FP_DIV_DPA

#
#   Rules for logicSynth config G_linear_dequant_BASIC
#

ifeq ($(CWBExec),1)
ls_G_linear_dequant_BASIC: $(BDW_WORKLIB)/logicsynth/G_linear_dequant_BASIC/linear_dequant_gates.v
else
.PHONY: ls_G_linear_dequant_BASIC

ls_G_linear_dequant_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_linear_dequant_BASIC $(MAKE) CWBExec=1 ls_G_linear_dequant_BASIC
endif

kill_ls_G_linear_dequant_BASIC:
	@bdw_kill -job ls.G_linear_dequant_BASIC
	@bdw_kill -job ls.G_linear_dequant_BASIC.s

clean_ls_G_linear_dequant_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_linear_dequant_BASIC

$(BDW_WORKLIB)/logicsynth/G_linear_dequant_BASIC/linear_dequant_gates.v: $(BDW_WORKLIB)/modules/linear_dequant/BASIC/linear_dequant_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_linear_dequant_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_linear_dequant_BASIC BDW_MODULE=linear_dequant

view_ls_G_linear_dequant_BASIC: hls_linear_dequant_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_linear_dequant_BASIC

#
#   Rules for logicSynth config G_linear_dequant_DPA
#

ifeq ($(CWBExec),1)
ls_G_linear_dequant_DPA: $(BDW_WORKLIB)/logicsynth/G_linear_dequant_DPA/linear_dequant_gates.v
else
.PHONY: ls_G_linear_dequant_DPA

ls_G_linear_dequant_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_linear_dequant_DPA $(MAKE) CWBExec=1 ls_G_linear_dequant_DPA
endif

kill_ls_G_linear_dequant_DPA:
	@bdw_kill -job ls.G_linear_dequant_DPA
	@bdw_kill -job ls.G_linear_dequant_DPA.s

clean_ls_G_linear_dequant_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_linear_dequant_DPA

$(BDW_WORKLIB)/logicsynth/G_linear_dequant_DPA/linear_dequant_gates.v: $(BDW_WORKLIB)/modules/linear_dequant/DPA/linear_dequant_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_linear_dequant_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_linear_dequant_DPA BDW_MODULE=linear_dequant

view_ls_G_linear_dequant_DPA: hls_linear_dequant_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_linear_dequant_DPA

#
#   Rules for logicSynth config G_fp_mul_BASIC
#

ifeq ($(CWBExec),1)
ls_G_fp_mul_BASIC: $(BDW_WORKLIB)/logicsynth/G_fp_mul_BASIC/fp_mul_gates.v
else
.PHONY: ls_G_fp_mul_BASIC

ls_G_fp_mul_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_fp_mul_BASIC $(MAKE) CWBExec=1 ls_G_fp_mul_BASIC
endif

kill_ls_G_fp_mul_BASIC:
	@bdw_kill -job ls.G_fp_mul_BASIC
	@bdw_kill -job ls.G_fp_mul_BASIC.s

clean_ls_G_fp_mul_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_fp_mul_BASIC

$(BDW_WORKLIB)/logicsynth/G_fp_mul_BASIC/fp_mul_gates.v: $(BDW_WORKLIB)/modules/fp_mul/BASIC/fp_mul_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fp_mul_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_fp_mul_BASIC BDW_MODULE=fp_mul

view_ls_G_fp_mul_BASIC: hls_fp_mul_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_fp_mul_BASIC

#
#   Rules for logicSynth config G_fp_mul_DPA
#

ifeq ($(CWBExec),1)
ls_G_fp_mul_DPA: $(BDW_WORKLIB)/logicsynth/G_fp_mul_DPA/fp_mul_gates.v
else
.PHONY: ls_G_fp_mul_DPA

ls_G_fp_mul_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_fp_mul_DPA $(MAKE) CWBExec=1 ls_G_fp_mul_DPA
endif

kill_ls_G_fp_mul_DPA:
	@bdw_kill -job ls.G_fp_mul_DPA
	@bdw_kill -job ls.G_fp_mul_DPA.s

clean_ls_G_fp_mul_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_fp_mul_DPA

$(BDW_WORKLIB)/logicsynth/G_fp_mul_DPA/fp_mul_gates.v: $(BDW_WORKLIB)/modules/fp_mul/DPA/fp_mul_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fp_mul_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_fp_mul_DPA BDW_MODULE=fp_mul

view_ls_G_fp_mul_DPA: hls_fp_mul_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_fp_mul_DPA

#
#   Rules for logicSynth config G_fp_add_BASIC
#

ifeq ($(CWBExec),1)
ls_G_fp_add_BASIC: $(BDW_WORKLIB)/logicsynth/G_fp_add_BASIC/fp_add_gates.v
else
.PHONY: ls_G_fp_add_BASIC

ls_G_fp_add_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_fp_add_BASIC $(MAKE) CWBExec=1 ls_G_fp_add_BASIC
endif

kill_ls_G_fp_add_BASIC:
	@bdw_kill -job ls.G_fp_add_BASIC
	@bdw_kill -job ls.G_fp_add_BASIC.s

clean_ls_G_fp_add_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_fp_add_BASIC

$(BDW_WORKLIB)/logicsynth/G_fp_add_BASIC/fp_add_gates.v: $(BDW_WORKLIB)/modules/fp_add/BASIC/fp_add_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fp_add_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_fp_add_BASIC BDW_MODULE=fp_add

view_ls_G_fp_add_BASIC: hls_fp_add_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_fp_add_BASIC

#
#   Rules for logicSynth config G_fp_add_DPA
#

ifeq ($(CWBExec),1)
ls_G_fp_add_DPA: $(BDW_WORKLIB)/logicsynth/G_fp_add_DPA/fp_add_gates.v
else
.PHONY: ls_G_fp_add_DPA

ls_G_fp_add_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_fp_add_DPA $(MAKE) CWBExec=1 ls_G_fp_add_DPA
endif

kill_ls_G_fp_add_DPA:
	@bdw_kill -job ls.G_fp_add_DPA
	@bdw_kill -job ls.G_fp_add_DPA.s

clean_ls_G_fp_add_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_fp_add_DPA

$(BDW_WORKLIB)/logicsynth/G_fp_add_DPA/fp_add_gates.v: $(BDW_WORKLIB)/modules/fp_add/DPA/fp_add_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fp_add_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_fp_add_DPA BDW_MODULE=fp_add

view_ls_G_fp_add_DPA: hls_fp_add_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_fp_add_DPA

#
#   Rules for logicSynth config G_bn_float32_BASIC
#

ifeq ($(CWBExec),1)
ls_G_bn_float32_BASIC: $(BDW_WORKLIB)/logicsynth/G_bn_float32_BASIC/bn_float32_gates.v
else
.PHONY: ls_G_bn_float32_BASIC

ls_G_bn_float32_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_bn_float32_BASIC $(MAKE) CWBExec=1 ls_G_bn_float32_BASIC
endif

kill_ls_G_bn_float32_BASIC:
	@bdw_kill -job ls.G_bn_float32_BASIC
	@bdw_kill -job ls.G_bn_float32_BASIC.s

clean_ls_G_bn_float32_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_bn_float32_BASIC

$(BDW_WORKLIB)/logicsynth/G_bn_float32_BASIC/bn_float32_gates.v: $(BDW_WORKLIB)/modules/bn_float32/BASIC/bn_float32_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_bn_float32_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_bn_float32_BASIC BDW_MODULE=bn_float32

view_ls_G_bn_float32_BASIC: hls_bn_float32_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_bn_float32_BASIC

#
#   Rules for logicSynth config G_bn_float32_DPA
#

ifeq ($(CWBExec),1)
ls_G_bn_float32_DPA: $(BDW_WORKLIB)/logicsynth/G_bn_float32_DPA/bn_float32_gates.v
else
.PHONY: ls_G_bn_float32_DPA

ls_G_bn_float32_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_bn_float32_DPA $(MAKE) CWBExec=1 ls_G_bn_float32_DPA
endif

kill_ls_G_bn_float32_DPA:
	@bdw_kill -job ls.G_bn_float32_DPA
	@bdw_kill -job ls.G_bn_float32_DPA.s

clean_ls_G_bn_float32_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_bn_float32_DPA

$(BDW_WORKLIB)/logicsynth/G_bn_float32_DPA/bn_float32_gates.v: $(BDW_WORKLIB)/modules/bn_float32/DPA/bn_float32_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_bn_float32_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_bn_float32_DPA BDW_MODULE=bn_float32

view_ls_G_bn_float32_DPA: hls_bn_float32_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_bn_float32_DPA

#
#   Rules for logicSynth config G_fp_cmp_BASIC
#

ifeq ($(CWBExec),1)
ls_G_fp_cmp_BASIC: $(BDW_WORKLIB)/logicsynth/G_fp_cmp_BASIC/fp_cmp_gates.v
else
.PHONY: ls_G_fp_cmp_BASIC

ls_G_fp_cmp_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_fp_cmp_BASIC $(MAKE) CWBExec=1 ls_G_fp_cmp_BASIC
endif

kill_ls_G_fp_cmp_BASIC:
	@bdw_kill -job ls.G_fp_cmp_BASIC
	@bdw_kill -job ls.G_fp_cmp_BASIC.s

clean_ls_G_fp_cmp_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_fp_cmp_BASIC

$(BDW_WORKLIB)/logicsynth/G_fp_cmp_BASIC/fp_cmp_gates.v: $(BDW_WORKLIB)/modules/fp_cmp/BASIC/fp_cmp_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fp_cmp_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_fp_cmp_BASIC BDW_MODULE=fp_cmp

view_ls_G_fp_cmp_BASIC: hls_fp_cmp_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_fp_cmp_BASIC

#
#   Rules for logicSynth config G_fp_cmp_DPA
#

ifeq ($(CWBExec),1)
ls_G_fp_cmp_DPA: $(BDW_WORKLIB)/logicsynth/G_fp_cmp_DPA/fp_cmp_gates.v
else
.PHONY: ls_G_fp_cmp_DPA

ls_G_fp_cmp_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_fp_cmp_DPA $(MAKE) CWBExec=1 ls_G_fp_cmp_DPA
endif

kill_ls_G_fp_cmp_DPA:
	@bdw_kill -job ls.G_fp_cmp_DPA
	@bdw_kill -job ls.G_fp_cmp_DPA.s

clean_ls_G_fp_cmp_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_fp_cmp_DPA

$(BDW_WORKLIB)/logicsynth/G_fp_cmp_DPA/fp_cmp_gates.v: $(BDW_WORKLIB)/modules/fp_cmp/DPA/fp_cmp_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_fp_cmp_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_fp_cmp_DPA BDW_MODULE=fp_cmp

view_ls_G_fp_cmp_DPA: hls_fp_cmp_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_fp_cmp_DPA

#
#   Rules for logicSynth config G_relu_offset_float_BASIC
#

ifeq ($(CWBExec),1)
ls_G_relu_offset_float_BASIC: $(BDW_WORKLIB)/logicsynth/G_relu_offset_float_BASIC/relu_offset_float_gates.v
else
.PHONY: ls_G_relu_offset_float_BASIC

ls_G_relu_offset_float_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_relu_offset_float_BASIC $(MAKE) CWBExec=1 ls_G_relu_offset_float_BASIC
endif

kill_ls_G_relu_offset_float_BASIC:
	@bdw_kill -job ls.G_relu_offset_float_BASIC
	@bdw_kill -job ls.G_relu_offset_float_BASIC.s

clean_ls_G_relu_offset_float_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_relu_offset_float_BASIC

$(BDW_WORKLIB)/logicsynth/G_relu_offset_float_BASIC/relu_offset_float_gates.v: $(BDW_WORKLIB)/modules/relu_offset_float/BASIC/relu_offset_float_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_relu_offset_float_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_relu_offset_float_BASIC BDW_MODULE=relu_offset_float

view_ls_G_relu_offset_float_BASIC: hls_relu_offset_float_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_relu_offset_float_BASIC

#
#   Rules for logicSynth config G_relu_offset_float_DPA
#

ifeq ($(CWBExec),1)
ls_G_relu_offset_float_DPA: $(BDW_WORKLIB)/logicsynth/G_relu_offset_float_DPA/relu_offset_float_gates.v
else
.PHONY: ls_G_relu_offset_float_DPA

ls_G_relu_offset_float_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_relu_offset_float_DPA $(MAKE) CWBExec=1 ls_G_relu_offset_float_DPA
endif

kill_ls_G_relu_offset_float_DPA:
	@bdw_kill -job ls.G_relu_offset_float_DPA
	@bdw_kill -job ls.G_relu_offset_float_DPA.s

clean_ls_G_relu_offset_float_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_relu_offset_float_DPA

$(BDW_WORKLIB)/logicsynth/G_relu_offset_float_DPA/relu_offset_float_gates.v: $(BDW_WORKLIB)/modules/relu_offset_float/DPA/relu_offset_float_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_relu_offset_float_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_relu_offset_float_DPA BDW_MODULE=relu_offset_float

view_ls_G_relu_offset_float_DPA: hls_relu_offset_float_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_relu_offset_float_DPA

#
#   Rules for logicSynth config G_learn_clip_BASIC
#

ifeq ($(CWBExec),1)
ls_G_learn_clip_BASIC: $(BDW_WORKLIB)/logicsynth/G_learn_clip_BASIC/learn_clip_gates.v
else
.PHONY: ls_G_learn_clip_BASIC

ls_G_learn_clip_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_learn_clip_BASIC $(MAKE) CWBExec=1 ls_G_learn_clip_BASIC
endif

kill_ls_G_learn_clip_BASIC:
	@bdw_kill -job ls.G_learn_clip_BASIC
	@bdw_kill -job ls.G_learn_clip_BASIC.s

clean_ls_G_learn_clip_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_learn_clip_BASIC

$(BDW_WORKLIB)/logicsynth/G_learn_clip_BASIC/learn_clip_gates.v: $(BDW_WORKLIB)/modules/learn_clip/BASIC/learn_clip_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_learn_clip_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_learn_clip_BASIC BDW_MODULE=learn_clip

view_ls_G_learn_clip_BASIC: hls_learn_clip_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_learn_clip_BASIC

#
#   Rules for logicSynth config G_learn_clip_DPA
#

ifeq ($(CWBExec),1)
ls_G_learn_clip_DPA: $(BDW_WORKLIB)/logicsynth/G_learn_clip_DPA/learn_clip_gates.v
else
.PHONY: ls_G_learn_clip_DPA

ls_G_learn_clip_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_learn_clip_DPA $(MAKE) CWBExec=1 ls_G_learn_clip_DPA
endif

kill_ls_G_learn_clip_DPA:
	@bdw_kill -job ls.G_learn_clip_DPA
	@bdw_kill -job ls.G_learn_clip_DPA.s

clean_ls_G_learn_clip_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_learn_clip_DPA

$(BDW_WORKLIB)/logicsynth/G_learn_clip_DPA/learn_clip_gates.v: $(BDW_WORKLIB)/modules/learn_clip/DPA/learn_clip_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_learn_clip_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_learn_clip_DPA BDW_MODULE=learn_clip

view_ls_G_learn_clip_DPA: hls_learn_clip_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_learn_clip_DPA

#
#   Rules for logicSynth config G_float2fix_BASIC
#

ifeq ($(CWBExec),1)
ls_G_float2fix_BASIC: $(BDW_WORKLIB)/logicsynth/G_float2fix_BASIC/float2fix_gates.v
else
.PHONY: ls_G_float2fix_BASIC

ls_G_float2fix_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_float2fix_BASIC $(MAKE) CWBExec=1 ls_G_float2fix_BASIC
endif

kill_ls_G_float2fix_BASIC:
	@bdw_kill -job ls.G_float2fix_BASIC
	@bdw_kill -job ls.G_float2fix_BASIC.s

clean_ls_G_float2fix_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_float2fix_BASIC

$(BDW_WORKLIB)/logicsynth/G_float2fix_BASIC/float2fix_gates.v: $(BDW_WORKLIB)/modules/float2fix/BASIC/float2fix_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_float2fix_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_float2fix_BASIC BDW_MODULE=float2fix

view_ls_G_float2fix_BASIC: hls_float2fix_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_float2fix_BASIC

#
#   Rules for logicSynth config G_float2fix_DPA
#

ifeq ($(CWBExec),1)
ls_G_float2fix_DPA: $(BDW_WORKLIB)/logicsynth/G_float2fix_DPA/float2fix_gates.v
else
.PHONY: ls_G_float2fix_DPA

ls_G_float2fix_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_float2fix_DPA $(MAKE) CWBExec=1 ls_G_float2fix_DPA
endif

kill_ls_G_float2fix_DPA:
	@bdw_kill -job ls.G_float2fix_DPA
	@bdw_kill -job ls.G_float2fix_DPA.s

clean_ls_G_float2fix_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_float2fix_DPA

$(BDW_WORKLIB)/logicsynth/G_float2fix_DPA/float2fix_gates.v: $(BDW_WORKLIB)/modules/float2fix/DPA/float2fix_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_float2fix_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_float2fix_DPA BDW_MODULE=float2fix

view_ls_G_float2fix_DPA: hls_float2fix_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_float2fix_DPA

#
#   Rules for logicSynth config G_m_float2fix_BASIC
#

ifeq ($(CWBExec),1)
ls_G_m_float2fix_BASIC: $(BDW_WORKLIB)/logicsynth/G_m_float2fix_BASIC/m_float2fix_gates.v
else
.PHONY: ls_G_m_float2fix_BASIC

ls_G_m_float2fix_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_m_float2fix_BASIC $(MAKE) CWBExec=1 ls_G_m_float2fix_BASIC
endif

kill_ls_G_m_float2fix_BASIC:
	@bdw_kill -job ls.G_m_float2fix_BASIC
	@bdw_kill -job ls.G_m_float2fix_BASIC.s

clean_ls_G_m_float2fix_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_m_float2fix_BASIC

$(BDW_WORKLIB)/logicsynth/G_m_float2fix_BASIC/m_float2fix_gates.v: $(BDW_WORKLIB)/modules/m_float2fix/BASIC/m_float2fix_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_m_float2fix_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_m_float2fix_BASIC BDW_MODULE=m_float2fix

view_ls_G_m_float2fix_BASIC: hls_m_float2fix_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_m_float2fix_BASIC

#
#   Rules for logicSynth config G_m_float2fix_DPA
#

ifeq ($(CWBExec),1)
ls_G_m_float2fix_DPA: $(BDW_WORKLIB)/logicsynth/G_m_float2fix_DPA/m_float2fix_gates.v
else
.PHONY: ls_G_m_float2fix_DPA

ls_G_m_float2fix_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_m_float2fix_DPA $(MAKE) CWBExec=1 ls_G_m_float2fix_DPA
endif

kill_ls_G_m_float2fix_DPA:
	@bdw_kill -job ls.G_m_float2fix_DPA
	@bdw_kill -job ls.G_m_float2fix_DPA.s

clean_ls_G_m_float2fix_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_m_float2fix_DPA

$(BDW_WORKLIB)/logicsynth/G_m_float2fix_DPA/m_float2fix_gates.v: $(BDW_WORKLIB)/modules/m_float2fix/DPA/m_float2fix_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_m_float2fix_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_m_float2fix_DPA BDW_MODULE=m_float2fix

view_ls_G_m_float2fix_DPA: hls_m_float2fix_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_m_float2fix_DPA

#
#   Rules for logicSynth config G_bias_add_BASIC
#

ifeq ($(CWBExec),1)
ls_G_bias_add_BASIC: $(BDW_WORKLIB)/logicsynth/G_bias_add_BASIC/bias_add_gates.v
else
.PHONY: ls_G_bias_add_BASIC

ls_G_bias_add_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_bias_add_BASIC $(MAKE) CWBExec=1 ls_G_bias_add_BASIC
endif

kill_ls_G_bias_add_BASIC:
	@bdw_kill -job ls.G_bias_add_BASIC
	@bdw_kill -job ls.G_bias_add_BASIC.s

clean_ls_G_bias_add_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_bias_add_BASIC

$(BDW_WORKLIB)/logicsynth/G_bias_add_BASIC/bias_add_gates.v: $(BDW_WORKLIB)/modules/bias_add/BASIC/bias_add_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_bias_add_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_bias_add_BASIC BDW_MODULE=bias_add

view_ls_G_bias_add_BASIC: hls_bias_add_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_bias_add_BASIC

#
#   Rules for logicSynth config G_bias_add_DPA
#

ifeq ($(CWBExec),1)
ls_G_bias_add_DPA: $(BDW_WORKLIB)/logicsynth/G_bias_add_DPA/bias_add_gates.v
else
.PHONY: ls_G_bias_add_DPA

ls_G_bias_add_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_bias_add_DPA $(MAKE) CWBExec=1 ls_G_bias_add_DPA
endif

kill_ls_G_bias_add_DPA:
	@bdw_kill -job ls.G_bias_add_DPA
	@bdw_kill -job ls.G_bias_add_DPA.s

clean_ls_G_bias_add_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_bias_add_DPA

$(BDW_WORKLIB)/logicsynth/G_bias_add_DPA/bias_add_gates.v: $(BDW_WORKLIB)/modules/bias_add/DPA/bias_add_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_bias_add_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_bias_add_DPA BDW_MODULE=bias_add

view_ls_G_bias_add_DPA: hls_bias_add_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_bias_add_DPA

#
#   Rules for logicSynth config G_sfu_out_buff_BASIC
#

ifeq ($(CWBExec),1)
ls_G_sfu_out_buff_BASIC: $(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_BASIC/sfu_out_buff_gates.v
else
.PHONY: ls_G_sfu_out_buff_BASIC

ls_G_sfu_out_buff_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_sfu_out_buff_BASIC $(MAKE) CWBExec=1 ls_G_sfu_out_buff_BASIC
endif

kill_ls_G_sfu_out_buff_BASIC:
	@bdw_kill -job ls.G_sfu_out_buff_BASIC
	@bdw_kill -job ls.G_sfu_out_buff_BASIC.s

clean_ls_G_sfu_out_buff_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_BASIC

$(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_BASIC/sfu_out_buff_gates.v: $(BDW_WORKLIB)/modules/sfu_out_buff/BASIC/sfu_out_buff_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_sfu_out_buff_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_sfu_out_buff_BASIC BDW_MODULE=sfu_out_buff

view_ls_G_sfu_out_buff_BASIC: hls_sfu_out_buff_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_sfu_out_buff_BASIC

#
#   Rules for logicSynth config G_sfu_out_buff_DPA
#

ifeq ($(CWBExec),1)
ls_G_sfu_out_buff_DPA: $(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_DPA/sfu_out_buff_gates.v
else
.PHONY: ls_G_sfu_out_buff_DPA

ls_G_sfu_out_buff_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_sfu_out_buff_DPA $(MAKE) CWBExec=1 ls_G_sfu_out_buff_DPA
endif

kill_ls_G_sfu_out_buff_DPA:
	@bdw_kill -job ls.G_sfu_out_buff_DPA
	@bdw_kill -job ls.G_sfu_out_buff_DPA.s

clean_ls_G_sfu_out_buff_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_DPA

$(BDW_WORKLIB)/logicsynth/G_sfu_out_buff_DPA/sfu_out_buff_gates.v: $(BDW_WORKLIB)/modules/sfu_out_buff/DPA/sfu_out_buff_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_sfu_out_buff_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_sfu_out_buff_DPA BDW_MODULE=sfu_out_buff

view_ls_G_sfu_out_buff_DPA: hls_sfu_out_buff_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_sfu_out_buff_DPA

#
#   Rules for logicSynth config G_finish_gen_BASIC
#

ifeq ($(CWBExec),1)
ls_G_finish_gen_BASIC: $(BDW_WORKLIB)/logicsynth/G_finish_gen_BASIC/finish_gen_gates.v
else
.PHONY: ls_G_finish_gen_BASIC

ls_G_finish_gen_BASIC:
	@bdw_exec -jobproject project.tcl -job ls.G_finish_gen_BASIC $(MAKE) CWBExec=1 ls_G_finish_gen_BASIC
endif

kill_ls_G_finish_gen_BASIC:
	@bdw_kill -job ls.G_finish_gen_BASIC
	@bdw_kill -job ls.G_finish_gen_BASIC.s

clean_ls_G_finish_gen_BASIC:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_finish_gen_BASIC

$(BDW_WORKLIB)/logicsynth/G_finish_gen_BASIC/finish_gen_gates.v: $(BDW_WORKLIB)/modules/finish_gen/BASIC/finish_gen_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_finish_gen_BASIC 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_finish_gen_BASIC BDW_MODULE=finish_gen

view_ls_G_finish_gen_BASIC: hls_finish_gen_BASIC 
	@bdw_view_verdi -project project.tcl -lsconfig G_finish_gen_BASIC

#
#   Rules for logicSynth config G_finish_gen_DPA
#

ifeq ($(CWBExec),1)
ls_G_finish_gen_DPA: $(BDW_WORKLIB)/logicsynth/G_finish_gen_DPA/finish_gen_gates.v
else
.PHONY: ls_G_finish_gen_DPA

ls_G_finish_gen_DPA:
	@bdw_exec -jobproject project.tcl -job ls.G_finish_gen_DPA $(MAKE) CWBExec=1 ls_G_finish_gen_DPA
endif

kill_ls_G_finish_gen_DPA:
	@bdw_kill -job ls.G_finish_gen_DPA
	@bdw_kill -job ls.G_finish_gen_DPA.s

clean_ls_G_finish_gen_DPA:
	@rm -rf $(BDW_WORKLIB)/logicsynth/G_finish_gen_DPA

$(BDW_WORKLIB)/logicsynth/G_finish_gen_DPA/finish_gen_gates.v: $(BDW_WORKLIB)/modules/finish_gen/DPA/finish_gen_rtl.v 
ifneq ($(BDW_VLOG_LIBPREP),)
	@$(MAKE) $(BDW_VLOG_LIBPREP)
endif 
	@$(MAKE) prep_vlog_finish_gen_DPA 
	@$(MAKE) synth1target BDW_LS_CONFIG=G_finish_gen_DPA BDW_MODULE=finish_gen

view_ls_G_finish_gen_DPA: hls_finish_gen_DPA 
	@bdw_view_verdi -project project.tcl -lsconfig G_finish_gen_DPA

##############################################################################
#   start of rules for code analysis
##############################################################################

analysis1target:
	@echo "NOTE 02926: BEGIN EXTERNAL TOOL PROCESSING"
	@if [ ! -d $(BDW_ANALYSIS_CONFIG_DIR) ]; then mkdir -p $(BDW_ANALYSIS_CONFIG_DIR); fi
	@rm -rf $(BDW_ANALYSIS_CONFIG_LOGS)
	@$(BDW_EXEC_CMD) bdw_exec -jobproject project.tcl -job analysis.$(BDW_ANALYSIS_CONFIG).s $(BDW_ANALYSIS_CMD) -project project.tcl -aconfig $(BDW_ANALYSIS_CONFIG) 2>&1 | tee $(BDW_ANALYSIS_CONFIG_DIR)/$(BDW_ANALYSIS_CONFIG).log

##############################################################################
#   start of rules for place and route
##############################################################################

pnr1target:
	@echo "NOTE 02926: BEGIN EXTERNAL TOOL PROCESSING"
ifneq ($(PASSED_LOG),)
	rm -f $(PASSED_LOG)
endif
	@if [ ! -d $(BDW_PNR_CONFIG_DIR) ]; then mkdir -p $(BDW_PNR_CONFIG_DIR); fi
	@rm -rf $(BDW_PNR_LOGS)
	@$(BDW_EXEC_CMD) bdw_exec -jobproject project.tcl -job pnr.$(BDW_PNR_CONFIG).s $(BDW_PNR_CMD) project.tcl $(BDW_PNR_CONFIG) 



#############################################################################
#  Rules for equivalence checking
#############################################################################
    

#############################################################################
#  Rules for Power estimation
#############################################################################
    


.INTERMEDIATE : $(BDW_LIBPREP) 

.PHONY : siminfo

siminfo :
	$(BDW_SIMCONFIG_MKDIR)
	@if [ ! -d $(BDW_WORKLIB)/INCA_libs ] ; then \
	    mkdir -p $(BDW_WORKLIB)/INCA_libs/bdw_worklib ; \
	fi	
	@echo "DEFINE bdw_worklib INCA_libs/bdw_worklib" > $(BDW_WORKLIB)/cds.lib
	@echo "DEFINE WORK bdw_worklib" > $(BDW_WORKLIB)/hdl.var
	$(STRATUS_HOME)/bin/bdw_shell $(BDW_TCL_DIR)/bdw_siminfo.tcl project.tcl $(BDW_SIM_CONFIG)


######################################################################
## Rules for building executables, shared libs, and running sims.
######################################################################

BDW_LIB_DASHI = \
	$(addprefix -I,$(addsuffix /c_parts,$(BDW_INDLIB_DIRS))) \
	$(addprefix -I,$(addsuffix /c_parts,$(BDW_WHOLELIB_DIRS)))

BDW_SC_DEBUG_SRC = $(shell if [ -d $(SYSTEMC)/src ]; then echo "-d $(SYSTEMC)/src"; else echo ""; fi)
BDW_SIM_CONFIG_DIR	=	$(BDW_SIMDIR)/$(BDW_SIM_CONFIG)
BDW_SIMCONFIG_MKDIR	=	@if [ ! -d $(BDW_SIMDIR)/$(BDW_SIM_CONFIG) ]; then mkdir -p $(BDW_SIMDIR)/$(BDW_SIM_CONFIG); fi
BDW_SIM_ENV_SETUP	=	BDW_SIM_CONFIG_DIR=$(BDW_SIM_CONFIG_DIR)
BDW_END_OF_SIM_CMD	=	$(BDW_SIM_ENV_SETUP) make saySimPassed
BDW_STRT_OF_SIM_CMD	=	@echo
ifneq ($(BDW_HUB_ARGV),)
    BDW_VLOGSIM_ARGSINT +=  +hubSetOption+libdef=${BDW_SIMDIR}/$(BDW_SIM_CONFIG)/sim_${BDW_SIM_CONFIG}.so,argv="$(shell echo $(BDW_HUB_ARGV)|sed 's/ /%/g')"
else
    BDW_VLOGSIM_ARGSINT +=  +hubSetOption+libdef=${BDW_SIMDIR}/$(BDW_SIM_CONFIG)/sim_${BDW_SIM_CONFIG}.so
endif
BDW_VLOGSIM_ARGSINT += +hubSetOption+bdr=$(BDW_SIM_CONFIG_DIR)/sim.bdr
ifeq ($(RUN_DEBUGGER),1)
    BDW_VLOGSIM_ARGSINT  := $(strip $(BDW_VLOGSIM_ARGSINT)),gdbgui
	BDW_PREEXEC_DEBUG = gdb &
	BDW_INLINE_DEBUG = gdb --args
	export BDW_COWARE_RUN_DEBUG = 1
	BDW_COWARE_CMD = $(STRATUS_HOME)/bin/bdw_scsh --dofirst $(BDW_SIM_CONFIG_DIR)/coware.cmd
else
	BDW_COWARE_CMD = $(COWAREHOME)/common/bin/scsh $(BDW_SIM_CONFIG_DIR)/coware.cmd
endif
BDW_VLOGSIM_DEPS	=	$(COSIM_FILES) $(SIM_RTL_TARGETS) $(BDW_LIBPREP) $(BDW_ESC_LIB)

######################################################################
# Verilog RTL Code Coverage Simulation Setup
######################################################################

ifeq ($(BDW_MTI_POST_SIM_COMMANDS),)
BDW_MTI_POST_SIM_COMMANDS = 
endif

###############################################

.PHONY: run_sim

run_sim: 
	$(MAKE) $(EXECUTABLE)

scsim_$(BDW_SIM_CONFIG): $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG)
ifneq ($(PASSED_LOG),)
	rm -f $(PASSED_LOG)
endif
	@bdw_hls_systemc -check -project project.tcl
	$(BDW_SIMCONFIG_MKDIR)
	@echo "Executing simulation: $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG) $(BDW_SCSIM_ARGS) $(BDW_HUB_ARGV)"
	$(BDW_STRT_OF_SIM_CMD)
	@( $(BDW_EXEC_CMD) $(BDW_SIM_ENV_SETUP) \
	bdw_exec -jobproject project.tcl -job sim.$(BDW_SIM_CONFIG).s \
	$(BDW_INLINE_DEBUG) $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG) $(BDW_SCSIM_ARGS) $(BDW_HUB_ARGV) ; \
          simstatus=$$? ; export simstatus; \
          if [ $$simstatus -ne 0 ] ; then \
            if [ $$simstatus -gt 127 ] ; then \
                echo "ERROR: simulation exited with signal $$(($$simstatus - 128))" ; \
            else echo "WARNING: exit status = $$simstatus"; fi ; \
          fi ) 2>&1 | tee $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log
	$(BDW_END_OF_SIM_CMD) 2>&1 | tee -a $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log

#####################################################################
#####################################################################
update_hierarchy: prebuild_wrappers
	@$(STRATUS_HOME)/bin/bdw_makegen project.tcl -o Makefile.prj 


clean_sim_objs:
	@rm -rf $(SIM_OBJS) $(DEP_FILES) $(dir $(BDW_LIBREF))

build_sim_image: prebuild_wrappers prebuild_rtl
	@$(MAKE) -j 4 $(SIM_BUILD)

ifneq ($(BDW_TMPLNK_DIR),)
$(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG): $(SIM_OBJS) $(BDW_LIBPREP) $(BDW_EXTRA_OBJS) $(BDW_EXTRA_LIBS) $(BDW_ESC_LIB)
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_LINK) $(BDW_EXELINKFLAG) $(BDW_DEBUG_OPT) $(BDW_EXTRA_LDFLAGS) \
        -Wl,-rpath,$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/$(LIBDIR_NAME) \
        -Wl,-rpath,$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/$(LIBDIR_NAME) \
        -Wl,-rpath,$(SYSTEMC)/$(BDW_SYSTEMC_LIBDIR) \
		-o $(BDW_TMPLNK_FILE) \
		$(SIM_OBJS) \
		$(BDW_EXTRA_OBJS) \
		$(BDW_EXTRA_LIBS) \
        $(BDW_ESC_LIB) \
		${BDW_CPARTS_A} \
		${BDW_HUBLIBS} $(BDW_EXTRA_LIB_FLAGS) $(BDW_COV_LIB_FLAGS)
		mv $(BDW_TMPLNK_FILE) $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG)
else
$(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG): $(SIM_OBJS) $(BDW_LIBPREP) $(BDW_EXTRA_OBJS) $(BDW_EXTRA_LIBS) $(BDW_ESC_LIB)
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_LINK) $(BDW_EXELINKFLAG) $(BDW_DEBUG_OPT) $(BDW_EXTRA_LDFLAGS) \
        -Wl,-rpath,$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/$(LIBDIR_NAME) \
        -Wl,-rpath,$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/$(LIBDIR_NAME) \
        -Wl,-rpath,$(SYSTEMC)/$(BDW_SYSTEMC_LIBDIR) \
		-o $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG) \
		$(SIM_OBJS) \
		$(BDW_EXTRA_OBJS) \
		$(BDW_EXTRA_LIBS) \
        $(BDW_ESC_LIB) \
		${BDW_CPARTS_A} \
		${BDW_HUBLIBS} $(BDW_EXTRA_LIB_FLAGS) $(BDW_COV_LIB_FLAGS)
endif

##############################################################
## COSIM simulator rules
##############################################################

vcs: $(BDW_VLOGSIM_DEPS)
ifneq ($(PASSED_LOG),)
	rm -f $(PASSED_LOG)
endif
	@bdw_hls_systemc -check -project project.tcl
	$(BDW_SIMCONFIG_MKDIR)
	$(BDW_STRT_OF_SIM_CMD)
ifeq ($(BDW_SIM_RUNTIME),)
		$(BDW_EXEC_CMD) $(STRATUS_HOME)/bin/hub_vcs -debug $(BDW_FSDB_VCS_ARGS) -f $(BDW_SIM_CONFIG_DIR)/siminfo \
		-o $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_${BDW_SIM_CONFIG} \
		+libext+.v $(BDW_VLOGCOMP_ARGS)  $(BDW_VLOG_DEFINES)
else
		$(BDW_EXEC_CMD) $(STRATUS_HOME)/bin/hub_vcs -debug $(BDW_FSDB_VCS_ARGS) -f $(BDW_SIM_CONFIG_DIR)/siminfo \
		-o $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_${BDW_SIM_CONFIG} \
		+libext+.v $(BDW_VLOGCOMP_ARGS)  $(BDW_VLOG_DEFINES) \
		+vcs+finish+$(BDW_SIM_RUNTIME)000
endif
	@if [ ! -f $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/vcs.do ]; then \
		echo "run" > $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/vcs.do; \
		echo "quit" >> $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/vcs.do; \
	fi
	$(BDW_PREEXEC_DEBUG)
	$(BDW_EXEC_CMD)  $(BDW_EXEC_FLG) $(BDW_SIM_ENV_SETUP) \
	bdw_exec -jobproject project.tcl -job sim.$(BDW_SIM_CONFIG).s \
	$(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_${BDW_SIM_CONFIG} $(BDW_VLOGSIM_ARGS)  $(BDW_VLOGSIM_ARGSINT) \
        -ucli \
	    -l $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim_verilog.log \
	    -i $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/vcs.do \
		2>&1 | tee $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log
	$(BDW_END_OF_SIM_CMD) 2>&1 | tee -a $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log

vcsi: $(BDW_VLOGSIM_DEPS)
ifneq ($(PASSED_LOG),)
	rm -f $(PASSED_LOG)
endif
	@bdw_hls_systemc -check -project project.tcl
	$(BDW_SIMCONFIG_MKDIR)
	$(BDW_STRT_OF_SIM_CMD)
ifeq ($(BDW_SIM_RUNTIME),)
		$(BDW_EXEC_CMD) $(STRATUS_HOME)/bin/hub_vcsi -debug $(BDW_FSDB_VCS_ARGS) -f $(BDW_SIM_CONFIG_DIR)/siminfo -o $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_${BDW_SIM_CONFIG} \
	    +libext+.v $(BDW_VLOGCOMP_ARGS)  $(BDW_VLOG_DEFINES)
else
		$(BDW_EXEC_CMD) $(STRATUS_HOME)/bin/hub_vcsi -debug $(BDW_FSDB_VCS_ARGS) -f $(BDW_SIM_CONFIG_DIR)/siminfo -o $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_${BDW_SIM_CONFIG} \
	    +libext+.v $(BDW_VLOGCOMP_ARGS)  $(BDW_VLOG_DEFINES) \
		+vcs+finish+$(BDW_SIM_RUNTIME)000
endif
	@if [ ! -f $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/vcs.do ]; then \
		echo "run" > $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/vcs.do; \
		echo "quit" >> $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/vcs.do; \
	fi
	$(BDW_PREEXEC_DEBUG)
	$(BDW_EXEC_CMD)  $(BDW_EXEC_FLG) $(BDW_SIM_ENV_SETUP) \
	bdw_exec -jobproject project.tcl -job sim.$(BDW_SIM_CONFIG).s \
	$(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_${BDW_SIM_CONFIG} $(BDW_VLOGSIM_ARGS)  $(BDW_VLOGSIM_ARGSINT) \
        -ucli \
	    -l $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim_verilog.log \
	    -i $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/vcs.do \
		2>&1 | tee $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log
	$(BDW_END_OF_SIM_CMD) 2>&1 | tee -a $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log

incisive_covsetup:


xcelium incisive ncverilog: $(BDW_VLOGSIM_DEPS) incisive_covsetup
ifneq ($(PASSED_LOG),)
	rm -f $(PASSED_LOG)
endif
	@bdw_hls_systemc -check -project project.tcl
	$(BDW_SIMCONFIG_MKDIR)
	$(BDW_STRT_OF_SIM_CMD)
	$(BDW_PREEXEC_DEBUG)
ifeq ($(BDW_SIM_RUNTIME),)
	@if [ ! -f $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/ncverilog.do ]; then \
		echo "" > $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/ncverilog.do; \
		echo "run" >> $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/ncverilog.do; \
		echo "quit" >>  $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/ncverilog.do; \
	fi
	$(BDW_EXEC_CMD)  $(BDW_EXEC_FLG) $(BDW_SIM_ENV_SETUP) \
	bdw_exec -jobproject project.tcl -job sim.$(BDW_SIM_CONFIG).s \
	$(STRATUS_HOME)/bin/hub_ncverilog \
		-f $(BDW_SIM_CONFIG_DIR)/siminfo \
+libext+.v $(BDW_VLOGCOMP_ARGS)  $(BDW_VLOG_DEFINES) \
		+nowarn+LIBNOU $(BDW_VLOGSIM_ARGS) $(BDW_VLOGSIM_ARGSINT) \
		-l $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim_verilog.log \
		2>&1 | tee $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log
else
	@if [ ! -f $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/ncverilog.do ]; then \
		echo "" > $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/ncverilog.do; \
		echo "run $(BDW_SIM_RUNTIME) ns" >> $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/ncverilog.do; \
		echo "quit" >>  $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/ncverilog.do; \
	fi
	$(BDW_EXEC_CMD)  $(BDW_EXEC_FLG) $(BDW_SIM_ENV_SETUP) \
	bdw_exec -jobproject project.tcl -job sim.$(BDW_SIM_CONFIG).s \
	$(STRATUS_HOME)/bin/hub_ncverilog \
		-f $(BDW_SIM_CONFIG_DIR)/siminfo \
+libext+.v $(BDW_VLOGCOMP_ARGS)  $(BDW_VLOG_DEFINES) \
		$(BDW_VLOGSIM_ARGS) $(BDW_VLOGSIM_ARGSINT) -l $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim_verilog.log \
		2>&1 | tee $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log
endif
	$(BDW_END_OF_SIM_CMD) 2>&1 | tee -a $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log


export MTI_VCO_MODE = 64

mti: $(BDW_VLOGSIM_DEPS)
ifneq ($(PASSED_LOG),)
	@echo removing log.passed in mti:
	rm -f $(PASSED_LOG)
endif
	@bdw_hls_systemc -check -project project.tcl
	$(BDW_SIMCONFIG_MKDIR)
	$(BDW_STRT_OF_SIM_CMD)
	@if [ ! -d $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/work ]; then vlib $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/work; fi
	$(STRATUS_HOME)/bin/hub_vlog -work $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/work \
		-f $(BDW_SIM_CONFIG_DIR)/siminfo \
		+libext+.v $(BDW_VLOGCOMP_ARGS)  $(BDW_VLOG_DEFINES)
	$(BDW_PREEXEC_DEBUG)
ifeq ($(BDW_SIM_RUNTIME),)
	@if [ ! -f $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do ];  then echo "onbreak resume" > $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do ; echo "run -all" >> $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do; echo "$(BDW_MTI_POST_SIM_COMMANDS)" >> $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do; echo "quit" >>  $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do; fi
else
	@if [ ! -f $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do ]; then  echo "onbreak resume" > $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do ; echo "run $(BDW_SIM_RUNTIME) ns" >> $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do; echo "$(BDW_MTI_POST_SIM_COMMANDS)" >> $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do; echo "quit" >>  $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do; fi
endif
	$(BDW_EXEC_CMD) $(BDW_SIM_ENV_SETUP) \
	bdw_exec -jobproject project.tcl -job sim.$(BDW_SIM_CONFIG).s \
	hub_vsimvlog -c -lib $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/work top $(BDW_VLOG_TOP_MODS)\
		$(BDW_VLOGSIM_ARGS)  $(BDW_VLOGSIM_ARGSINT) -do $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/mti.do \
		-l $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim_verilog.log \
		2>&1 | tee $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log
	$(BDW_END_OF_SIM_CMD) 2>&1 | tee -a $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log


BDW_NCSC_64BIT = -64bit

ifneq ($(BDW_HUB_ARGV),)
BDW_NCSIM_ARGV = +systemc_args+"$(BDW_HUB_ARGV)"
else
BDW_NCSIM_ARGV =
endif

ifeq ($(RUN_DEBUGGER), 1)
BDW_NCSIM_DEBUG = -layout cdebug
BDW_NCVLG_DEBUG = -layout cdebug -linedebug
else
BDW_NCSIM_DEBUG =
BDW_NCVLG_DEBUG =
endif

ncsc: incisive_covsetup
ifneq ($(PASSED_LOG),)
	rm -f $(PASSED_LOG)
endif
	@bdw_hls_systemc -check -project project.tcl
	$(BDW_SIMCONFIG_MKDIR)
ifneq ($(RUN_DEBUGGER),1)
	@echo "run" >>$(BDW_SIM_CONFIG_DIR)/ncsim_cmd.tcl
	@echo "exit" >>$(BDW_SIM_CONFIG_DIR)/ncsim_cmd.tcl
endif
ifneq ($(VLOG_COSIM_TOP), )
	$(BDW_STRT_OF_SIM_CMD)
	$(BDW_EXEC_CMD) $(BDW_SIM_ENV_SETUP) \
	bdw_exec -jobproject project.tcl -job sim.$(BDW_SIM_CONFIG).s \
	hub_ncsim \
	-work $(BDW_SIM_CONFIG) -reflib worklib $(BDW_LIBREF_ARGS) \
	-messages $(BDW_NCSC_64BIT) $(BDW_NCVLG_DEBUG) \
	$(BDW_NCSC_GCCVER) \
	-CFLAGS "-Wl,-rpath,$(STRATUS_HOME)/tools.lnx86/stratus/lib/64bit" \
	$(SIM_OBJS) \
	$(BDW_EXTRA_OBJS) \
	$(BDW_EXTRA_LIBS) \
	$(BDW_ESC_LIB) \
	$(BDW_CPARTS_A) \
	$(BDW_NCSC_FSDBLIBS) \
	$(BDW_EXTRA_LDFLAGS) \
	$(BDW_EXTRA_LIB_FLAGS) \
	$(BDW_COV_LIB_FLAGS) \
	+loadpli1=$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/$(LIBDIR_NAME)/ncvlog_ssl:ssl_bootstrap \
	-file $(BDW_SIM_CONFIG_DIR)/siminfo \
	$(BDW_VLOGSIM_ARGS) \
	$(BDW_VLOGSIM_ARGSINT) \
	$(BDW_VLOG_DEFINES) \
	$(BDW_NCSC_INPUT_FILE) \
	-top sc_main $(BDW_VLOG_TOP_MODS) $(BDW_NCSIM_ARGV) \
	2>&1 | tee $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log

else
	$(BDW_STRT_OF_SIM_CMD)
	$(BDW_EXEC_CMD) $(BDW_SIM_ENV_SETUP) \
	bdw_exec -jobproject project.tcl -job sim.$(BDW_SIM_CONFIG).s \
	hub_ncsim \
	-work $(BDW_SIM_CONFIG) -reflib worklib $(BDW_LIBREF_ARGS) \
	-messages $(BDW_NCSC_64BIT) \
	$(BDW_NCSC_GCCVER) \
	$(BDW_VLOGSIM_ARGS) $(BDW_NCSIM_DEBUG) \
	-CFLAGS "-Wl,-rpath,$(STRATUS_HOME)/tools.lnx86/stratus/lib/64bit" \
	$(SIM_OBJS) \
	$(BDW_EXTRA_OBJS) \
	$(BDW_EXTRA_LIBS) \
	$(BDW_ESC_LIB) \
	$(BDW_CPARTS_A) \
	$(BDW_NCSC_FSDBLIBS) \
	$(BDW_EXTRA_LDFLAGS) \
	$(BDW_EXTRA_LIB_FLAGS) \
	$(BDW_COV_LIB_FLAGS) \
	$(BDW_NCSC_INPUT_FILE) \
	-top sc_main $(BDW_VLOG_TOP_MODS) $(BDW_NCSIM_ARGV) \
	2>&1 | tee $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log

endif
	$(BDW_END_OF_SIM_CMD) 2>&1 | tee -a $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/bdw_sim.log



##############################################################
## Rule to build the COSIM shared library
##############################################################
ifneq ($(BDW_TMPLNK_DIR),)
$(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG).so: $(SIM_OBJS) $(BDW_LIBPREP) $(BDW_EXTRA_OBJS) $(BDW_EXTRA_LIBS) $(BDW_ESC_LIB) 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_LINK) ${BDW_SHLIBFLAG} $(BDW_EXTRA_LDFLAGS) \
        -Wl,-rpath,$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/$(LIBDIR_NAME) \
        -Wl,-rpath,$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/$(LIBDIR_NAME) \
        -Wl,-rpath,$(SYSTEMC)/$(BDW_SYSTEMC_LIBDIR) \
		-o $(BDW_TMPLNK_FILE)  \
		$(SIM_OBJS) \
		$(BDW_EXTRA_OBJS) \
		$(BDW_EXTRA_LIBS) \
        $(BDW_ESC_LIB) \
		$(BDW_CPARTS_A) \
		$(BDW_HUBLIBS) $(BDW_EXTRA_LIB_FLAGS) $(BDW_COV_LIB_FLAGS) \
		-lm -lcrypt -ldl \
		${BDW_LINKOUTFILTER}
		mv $(BDW_TMPLNK_FILE) $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG).so

else
$(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG).so: $(SIM_OBJS) $(BDW_LIBPREP) $(BDW_EXTRA_OBJS) $(BDW_EXTRA_LIBS) $(BDW_ESC_LIB) 
	@if [ ! -d $(@D) ]; then mkdir -p $(@D); fi
	$(BDW_LINK) ${BDW_SHLIBFLAG} $(BDW_EXTRA_LDFLAGS) \
        -Wl,-rpath,$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/stratus/$(LIBDIR_NAME) \
        -Wl,-rpath,$(STRATUS_HOME)/tools.$(STRATUS_PLATFORM)/$(LIBDIR_NAME) \
        -Wl,-rpath,$(SYSTEMC)/$(BDW_SYSTEMC_LIBDIR) \
		-o $(BDW_SIMDIR)/$(BDW_SIM_CONFIG)/sim_$(BDW_SIM_CONFIG).so  \
		$(SIM_OBJS) \
		$(BDW_EXTRA_OBJS) \
		$(BDW_EXTRA_LIBS) \
        $(BDW_ESC_LIB) \
		$(BDW_CPARTS_A) \
		$(BDW_HUBLIBS) $(BDW_EXTRA_LIB_FLAGS) $(BDW_COV_LIB_FLAGS) \
		-lm -lcrypt -ldl \
		${BDW_LINKOUTFILTER}

endif


##############################################################
## Rule to build verilator trace and coverage support  module
##############################################################

$(BDW_WORKLIB)/objs/esc_catrace.o: $(STRATUS_HOME)/share/stratus/source/esc_catrace.cc
	$(BDW_CC)  -o $@ $(BDW_CCFLAGS) $(BDW_VERILATOR_CCFLAGS)  $<



##############################################################
## Start the stratus_ide GUI
##############################################################
workbench ide:
	$(STRATUS_HOME)/bin/stratus_ide project.tcl

##############################################################
## Generate a Visual C++ project file
##############################################################
vcproj: $(BDW_ALL_WRAPPERS)
	$(STRATUS_HOME)/bin/bdw_vcprojgen project.tcl

##############################################################
## Rule to build the synthesis report
##############################################################

html_warn:
	@echo "##############################################" ; \
	echo " The HTML reports have been deprecated. " ; \
	echo " Reporting information is available in stratus_ide." ; \
	echo "" ; \
	echo -n " Do you want to generate deprecated HTML reports (y or n) [n] ? " ; \
	read resp ; \
	case $$resp in \
	y*) $(MAKE) html ;; \
	*) echo ""; echo "HTML Reports not generated." ;  \
	esac
 
html:   html_avg_pool_BASIC html_avg_pool_DPA html_in_buff_BASIC html_in_buff_DPA html_fix2float_BASIC html_fix2float_DPA html_fp_div_BASIC html_fp_div_DPA html_linear_dequant_BASIC html_linear_dequant_DPA html_fp_mul_BASIC html_fp_mul_DPA html_fp_add_BASIC html_fp_add_DPA html_bn_float32_BASIC html_bn_float32_DPA html_fp_cmp_BASIC html_fp_cmp_DPA html_relu_offset_float_BASIC html_relu_offset_float_DPA html_learn_clip_BASIC html_learn_clip_DPA html_float2fix_BASIC html_float2fix_DPA html_m_float2fix_BASIC html_m_float2fix_DPA html_bias_add_BASIC html_bias_add_DPA html_sfu_out_buff_BASIC html_sfu_out_buff_DPA html_finish_gen_BASIC html_finish_gen_DPA html_summary

html_summary: project.tcl
	$(STRATUS_HOME)/bin/bdw_htmlgen -project project.tcl -summary




##############################################################
## Rules to build generated library contents
##############################################################

